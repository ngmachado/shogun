{
  "contractName": "SuperTokenFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract ISuperToken",
          "name": "superTokenLogic",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_UNINITIALIZED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "CustomSuperTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SuperTokenCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ISuperToken",
          "name": "tokenLogic",
          "type": "address"
        }
      ],
      "name": "SuperTokenLogicCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT_LOGIC",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_SUPER_TOKEN_LOGIC",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_underlyingToken",
          "type": "address"
        }
      ],
      "name": "computeCanonicalERC20WrapperAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "superTokenAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isDeployed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20WithTokenInfo",
          "name": "_underlyingToken",
          "type": "address"
        }
      ],
      "name": "createCanonicalERC20Wrapper",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20WithTokenInfo",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "enum ISuperTokenFactory.Upgradability",
          "name": "upgradability",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "createERC20Wrapper",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "superToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "enum ISuperTokenFactory.Upgradability",
          "name": "upgradability",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "createERC20Wrapper",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "superToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_underlyingTokenAddress",
          "type": "address"
        }
      ],
      "name": "getCanonicalERC20Wrapper",
      "outputs": [
        {
          "internalType": "address",
          "name": "superTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSuperTokenLogic",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "superToken",
              "type": "address"
            }
          ],
          "internalType": "struct SuperTokenFactoryBase.InitializeData[]",
          "name": "_data",
          "type": "tuple[]"
        }
      ],
      "name": "initializeCanonicalWrapperSuperTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "customSuperTokenProxy",
          "type": "address"
        }
      ],
      "name": "initializeCustomSuperToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract ISuperToken\",\"name\":\"superTokenLogic\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_UNINITIALIZED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_FACTORY_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"CustomSuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SuperTokenCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract ISuperToken\",\"name\":\"tokenLogic\",\"type\":\"address\"}],\"name\":\"SuperTokenLogicCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT_LOGIC\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT_LOGIC\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_SUPER_TOKEN_LOGIC\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"computeCanonicalERC20WrapperAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superTokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isDeployed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"_underlyingToken\",\"type\":\"address\"}],\"name\":\"createCanonicalERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20WithTokenInfo\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"enum ISuperTokenFactory.Upgradability\",\"name\":\"upgradability\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createERC20Wrapper\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"superToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingTokenAddress\",\"type\":\"address\"}],\"name\":\"getCanonicalERC20Wrapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"superTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSuperTokenLogic\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"superToken\",\"type\":\"address\"}],\"internalType\":\"struct SuperTokenFactoryBase.InitializeData[]\",\"name\":\"_data\",\"type\":\"tuple[]\"}],\"name\":\"initializeCanonicalWrapperSuperTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"customSuperTokenProxy\",\"type\":\"address\"}],\"name\":\"initializeCustomSuperToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CustomSuperTokenCreated(address)\":{\"details\":\"Custom super token created event\",\"params\":{\"token\":\"Newly created custom super token address\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"SuperTokenCreated(address)\":{\"details\":\"Super token created event\",\"params\":{\"token\":\"Newly created super token address\"}},\"SuperTokenLogicCreated(address)\":{\"details\":\"Super token logic created event\",\"params\":{\"tokenLogic\":\"Token logic address\"}}},\"kind\":\"dev\",\"methods\":{\"computeCanonicalERC20WrapperAddress(address)\":{\"details\":\"We return from our canonical list if it already exists, otherwise we compute itnote that this function only computes addresses for SEMI_UPGRADABLE SuperTokens\",\"params\":{\"_underlyingToken\":\"Underlying ERC20 token address\"},\"returns\":{\"isDeployed\":\"whether the super token is deployed AND set in the canonical mapping\",\"superTokenAddress\":\"Super token address\"}},\"createCanonicalERC20Wrapper(address)\":{\"details\":\"salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))\",\"params\":{\"_underlyingToken\":\"Underlying ERC20 token\"},\"returns\":{\"_0\":\"ISuperToken the created supertoken\"}},\"createERC20Wrapper(address,uint8,string,string)\":{\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"},\"returns\":{\"superToken\":\"The deployed and initialized wrapper super token NOTE: - It assumes token provide the .decimals() function\"}},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"params\":{\"name\":\"Super token name\",\"symbol\":\"Super token symbol\",\"underlyingDecimals\":\"Underlying token decimals\",\"underlyingToken\":\"Underlying ERC20 token\",\"upgradability\":\"Upgradability mode\"},\"returns\":{\"superToken\":\"The deployed and initialized wrapper super token\"}},\"getCanonicalERC20Wrapper(address)\":{\"details\":\"We return the address if it exists and the zero address otherwise\",\"params\":{\"_underlyingTokenAddress\":\"Underlying ERC20 token address\"},\"returns\":{\"superTokenAddress\":\"Super token address\"}},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"initialize()\":{\"details\":\"Initialize the contract\"},\"initializeCanonicalWrapperSuperTokens((address,address)[])\":{\"details\":\"Note that this should also be kind of a throwaway function which will be executed only once.\",\"params\":{\"_data\":\"an array of canonical wrappper super tokens to be set\"}},\"initializeCustomSuperToken(address)\":{\"details\":\"Creates a new custom super token\",\"params\":{\"customSuperTokenProxy\":\"address of the custom supertoken proxy\"}},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"updateCode(address)\":{\"details\":\"This function updates the logic contract for the SuperTokenFactory\",\"params\":{\"newAddress\":\"the new address of the SuperTokenFactory logic contract\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER()\":[{\"notice\":\"NOTE: Whenever modifying the storage layout here it is important to update the validateStorageLayout function in its respective mock contract to ensure that it doesn't break anything or lead to unexpected behaviors/layout when upgrading\"}]},\"kind\":\"user\",\"methods\":{\"computeCanonicalERC20WrapperAddress(address)\":{\"notice\":\"Computes/Retrieves wrapper super token address given the underlying token address\"},\"createCanonicalERC20Wrapper(address)\":{\"notice\":\"Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists\"},\"createERC20Wrapper(address,uint8,string,string)\":{\"notice\":\"Create new super token wrapper for the underlying ERC20 token with extra token info\"},\"createERC20Wrapper(address,uint8,uint8,string,string)\":{\"notice\":\"Create new super token wrapper for the underlying ERC20 token\"},\"getCanonicalERC20Wrapper(address)\":{\"notice\":\"Gets the canonical ERC20 wrapper super token address given the underlying token address\"},\"getSuperTokenLogic()\":{\"notice\":\"Get the canonical super token logic.\"},\"initializeCanonicalWrapperSuperTokens((address,address)[])\":{\"notice\":\"Initializes list of canonical wrapper super tokens.\"},\"updateCode(address)\":{\"notice\":\"Updates the logic contract for the SuperTokenFactory\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/superfluid/SuperTokenFactory.sol\":\"SuperTokenFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd750324b0fc76aa4c1b0aadf7cab03b3d1cc4d5744348c18ba2b99dbdbe1758d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d53cbf8e2e469a6422fb61d8636af3ec39d8e10e7f4d99d625bdd36d4b8ddf34\",\"dweb:/ipfs/QmNhvk3jmfgquVki2V7gNmTWTMeNwEPCnetybeBntQtsyJ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xb68e122faba133422f4cbdd7e15fc913073dfa2c3682c18d6449b121e67d1104\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://da0611fda964b8356d38cb006133865b58adc6e11d3817e27daf20b02ad6880f\",\"dweb:/ipfs/QmeLbak3yiUfkGvxEZzmS4ndDwDfxtZNeKiA86G3WxzjyD\"]},\"project:/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x8c817a6d85868039485ecdf1c7163f2e06be939cfc3923ba4ca6628f614282a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d3e816400006db8e39faf5287f76da1785060f7a21c68103453bb37f18ba6db0\",\"dweb:/ipfs/Qmbnd8TktXALrsngVNAHR546YJgnJ47tffkPug1j4jitDu\"]},\"project:/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb989f0fe54561ecb32f66ac55427d98866c77ee4b6a1da52aca2e0953a7f7f06\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://049ca939f07e24558748ebacc6f17c3e72161c16516e77bf9d501c338b3dd7b4\",\"dweb:/ipfs/QmVVbywb88aaiKLzs75zz5tbkPptrm2ihki8jGrn232jW2\"]},\"project:/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x5df423f453923ff6f7ee716e7c1c64d2e19743ad77455b0bba23fd28f2a9d587\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://191e99e332eee5c9b4a7ee19648e44554d9fe34c6c93be9fc2d2cbf9fbc1997a\",\"dweb:/ipfs/QmcxN6M6WAhmso9Yevag419p6tDNjJH3DJqbWdBurc4o8J\"]},\"project:/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0x1c62c63f39c7c9ba03ddde542690ccfea343b5b3b442ed4cf2830b43af6f9cbe\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e3ef914d4089c070d1f48b8d292a360d05373e5454ab45d6bef3d8b5170c3885\",\"dweb:/ipfs/QmZcXa9CfuaCxDfp8ncip6oAY849HFzDJ8rnMN8roSLvnk\"]},\"project:/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0x3a93bb86598d8840dc333efce41c0fcc8b839df6597c3be49dcb4e3d4fb9f074\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://469e7af1687de706da737007596663e20ec634d7ac6daa032be8c263e57eb518\",\"dweb:/ipfs/QmSQtjPankaurKEbKrf2M1bLe3TaPFvdHxUdmaRYgZ4TG4\"]},\"project:/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0x5555e072e755dea4ffcd4c0c74d8ca8e7f782d462e049c8eb09171b0edc38394\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://25b7c8e97377da22641038a58b1f05a719634241887839874191012a203dbfcf\",\"dweb:/ipfs/QmbvMjTbm4gpPaxSBGetBYSJs2SQesAzjEp66F9w8JoZhG\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"project:/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x0182f29b230b034686dc505935ca0a1635fc537274bb592393a6e259010be08b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c728b787a7575bbfab0e6c24b18ccd29e457f5797611027af3f8ca664e94dcc\",\"dweb:/ipfs/QmXxAWjWjLdEdZQVAJyEYcBtiZBdNK7c5CfDC5UjaN3yZQ\"]},\"project:/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xc179b68b0641e7fa8873d77a4f3bb1116533e5da1120683fe5ee4bb6419d38d2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b888e81e39cc519e56ac10553756c059e18cbea45debb7113c6a1c86008a96c6\",\"dweb:/ipfs/QmWeWRsF52zk122qmxjpVePSRvdXjfDZzDY1ucdFtDMEjh\"]},\"project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xac57bbc7e9432bf926d4f9913b71301b18b4519de12e22892ebbc646d43b88c5\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4a18f0c241ee2236bc5ec588718601242cec0b20fb9f3d432272264f2330dd36\",\"dweb:/ipfs/QmSjhobAGMzCqpyf1oWXjGF6bH8RwWVcKYT9oRDLAWUEi3\"]},\"project:/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"project:/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"project:/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"project:/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0x599a2fdc2fbe0a6d1fca99ef79e98c0227661d842bb3418b27bc2a24a48d16cd\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://05268e8b1238c42c8a2e289bc92db22018336f929a877a093a847b67bc824e52\",\"dweb:/ipfs/QmTyFRLKLgicWa2HAKeQeuURxLWVZnPR7rPUg2dbapLCFA\"]},\"project:/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"project:/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"project:/contracts/superfluid/ConstantInflowNFT.sol\":{\"keccak256\":\"0x81e3a78e63de3ea141b2e0cfb700550bcf9bb804598aed72081f5d8209184e22\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e56c81d1dc30fe1e31dfe671b5598b6e0b1a6aa29d654d0738e59aecf6d237f8\",\"dweb:/ipfs/QmTa7qwbYywqnryVdSvGo39kYrD3GzGtRhiaqa5fRrE2mS\"]},\"project:/contracts/superfluid/ConstantOutflowNFT.sol\":{\"keccak256\":\"0xe021036be9660ad6d119683d092e1116200656788f4f7ed52caeb627764443d4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://2376c0ce6d35ba71bc3c098f1a6e3a820043bc300901e136bd4913760940d7b3\",\"dweb:/ipfs/QmdWUeYMr1zt5wf4KH8QZrm66hcnTYSkQP3VEKkNGsgE6W\"]},\"project:/contracts/superfluid/FlowNFTBase.sol\":{\"keccak256\":\"0x9c94add8ad61c67af3117de4c87a7a7d9cf96b45da5c259e7747f173a4d625ac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e44e1f7d7c8880ffeea6bd3419f91610bd76d2f524d2efaf358adbc93b621a47\",\"dweb:/ipfs/QmZPCwkMhduohyse2C9cnGK4P5Wy1TiAdwny1diZmfJb3g\"]},\"project:/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":{\"keccak256\":\"0x6e66ecd16b8d015b1fdee6964f5502b8e88a227ba66b6e8f8a9c0fcc5dbe9d99\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7f8ea8d9359fefb181cb32a4ffc4a4e9e69b1a06d81be273bb84850ed3138660\",\"dweb:/ipfs/QmSyDFmna8P5oMhTo3NGYNHmM4LJGKcqWPQun6A274FyyK\"]},\"project:/contracts/superfluid/SuperToken.sol\":{\"keccak256\":\"0x7cfcf8df2ee575327124a7d37e41b28c773ebfb30a6a38e26be9f5b2ed6a0b68\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://64c2ec16874f951ed858608cb0e9df513781dfa366b4eb00909f673e880ac4ba\",\"dweb:/ipfs/QmfUmgaBMisrvRc5W9pUReEwNjM5Yv96Lemck6LjSHt9aE\"]},\"project:/contracts/superfluid/SuperTokenFactory.sol\":{\"keccak256\":\"0x894b79ff08ed3633600033f7b2788a2738fc01d0a97c56095e9866ecbfda1634\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c6801733b8668eed38dba8352db2fb8922cc9d9b974ef1bdf8a4dfd7a2a04422\",\"dweb:/ipfs/QmPioUKUhyLTUJfTLKz8w8jSyb8xKUwTD6THeLW1xoh2qK\"]},\"project:/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0xfba471c15cabe1ba7b2de85f5bfa633349fbfad47938c16f36e45d69acca53fa\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4c6c08de770cf67b5420e826ddc29e41cc759e142e7a5cb9fb8f985d54cf076d\",\"dweb:/ipfs/QmP9KQb3kRmVM1kKNHU2LzcrxkRvKuMiF8X6kV1z2Z9aY8\"]},\"project:/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"project:/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x556040f5f2bfda069dd867d52b67b4b6a8e3d2955beac16d4156d91559bbdeac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://13d190401b4f36f3c0977e0eadb9c774173bcbc2552d72de5bd6e7803d67c996\",\"dweb:/ipfs/QmfBTdKGzmbbjRxca5XLwpE2FX3S8onGLNHNpMpqWqjY4m\"]},\"project:/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b506040516200213c3803806200213c83398101604081905262000035916200010d565b6001600160a01b0380851660a052831660808190526040805163132075a760e31b81529051869286928692869291639903ad3891600480830192600092919082900301818387803b1580156200008a57600080fd5b505af11580156200009f573d6000803e3d6000fd5b5050506001600160a01b0380841660c05282811660e052608051604051911691507fc13fb19d60857980e565bf5dae406b8802d3c1cec50c6156b30b12b87402978390600090a2505050505050505062000175565b6001600160a01b03811681146200010a57600080fd5b50565b600080600080608085870312156200012457600080fd5b84516200013181620000f4565b60208601519094506200014481620000f4565b60408601519093506200015781620000f4565b60608601519092506200016a81620000f4565b939692955090935050565b60805160a05160c05160e051611f2b62000211600039600081816101f00152818161098c0152610b540152600081816101c90152818161086e0152610a55015260008181610142015281816107390152610cff01526000818161021c0152818161029d0152818161042901528181610782015281816108a0015281816109be01528181610abd01528181610fc6015261127b0152611f2b6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638129fc1c116100a2578063a6d0c53411610071578063a6d0c53414610253578063bab74c8914610266578063cbf927b314610298578063d412d344146102bf578063eff0a89d146102d257600080fd5b80638129fc1c146102125780639470a5b21461021a57806397e011ed146102405780639903ad381461021257600080fd5b806350d75d25116100de57806350d75d251461018e57806352d1902d146101965780635365d19f146101c45780635a7792df146101eb57600080fd5b8063151188dc1461011057806320bc442514610140578063431f1481146101665780634695195414610179575b600080fd5b61012361011e366004611583565b6102fe565b6040516001600160a01b0390911681526020015b60405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610123565b610123610174366004611604565b6106b1565b61018c610187366004611583565b61072e565b005b610123610bbe565b6040517fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6208152602001610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c610bed565b7f0000000000000000000000000000000000000000000000000000000000000000610123565b61018c61024e366004611697565b610cfb565b61012361026136600461171b565b610f10565b610279610274366004611583565b611161565b604080516001600160a01b039093168352901515602083015201610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c6102cd366004611583565b611264565b6101236102e0366004611583565b6001600160a01b039081166000908152600160205260409020541690565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610350576040516306ce6e6d60e21b815260040160405180910390fd5b6001600160a01b03808316600090815260016020526040902054839116801561038c576040516348eb3cb960e11b815260040160405180910390fd5b604080516001600160a01b0384166020820152600091016040516020818303038152906040528051906020012090506000816040516103ca90611554565b8190604051809103906000f59050801580156103ea573d6000803e3d6000fd5b506001600160a01b038581166000908152600160205260409081902080546001600160a01b0319168484169081179091559051634a0687ef60e01b81527f00000000000000000000000000000000000000000000000000000000000000009092166004830152919250634a0687ef90602401600060405180830381600087803b15801561047657600080fd5b505af115801561048a573d6000803e3d6000fd5b5050505060008190506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f791906117c1565b90506000886001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105619190810190611818565b90506000896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb9190810190611818565b9050836001600160a01b03166342fe09808b85856040516020016105ef91906118ba565b6040516020818303038152906040528560405160200161060f91906118e8565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161063d9493929190611939565b600060405180830381600087803b15801561065757600080fd5b505af115801561066b573d6000803e3d6000fd5b50506040516001600160a01b03871692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2509198975050505050505050565b600061072387886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906117c1565b8888888888610f10565b979650505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107775760405163478b8e8360e01b815260040160405180910390fd5b6107808161131a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611978565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108639190611978565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415806109b757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611978565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190611978565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614155b15610bbb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e9190611978565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611978565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610ba257600080fd5b505af1158015610bb6573d6000803e3d6000fd5b505050505b50565b6000610be87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b600054610100900460ff1615808015610c0d5750600054600160ff909116105b80610c275750303b158015610c27575060005460ff166001145b610c8f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610cb2576000805461ff0019166101001790555b8015610bbb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f9190611978565b9050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190611978565b6001600160a01b0316336001600160a01b031614610e1457604051632bf2a63360e21b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031615610e66576040516348eb3cb960e11b815260040160405180910390fd5b60005b82811015610f0a57838382818110610e8357610e83611995565b9050604002016020016020810190610e9b9190611583565b60016000868685818110610eb157610eb1611995565b610ec79260206040909202019081019150611583565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610f02816119ab565b915050610e69565b50505050565b60006001600160a01b038816610f395760405163182e4f4160e11b815260040160405180910390fd5b6000866002811115610f4d57610f4d6119d2565b03610f6b5760405163c4901a4360e01b815260040160405180910390fd5b6001866002811115610f7f57610f7f6119d2565b03611037576000604051610f9290611554565b604051809103906000f080158015610fae573d6000803e3d6000fd5b50604051634a0687ef60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291925090821690634a0687ef90602401600060405180830381600087803b15801561101657600080fd5b505af115801561102a573d6000803e3d6000fd5b50505050809150506110bb565b600060405161104590611561565b604051809103906000f080158015611061573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561109f57600080fd5b505af11580156110b3573d6000803e3d6000fd5b509293505050505b6040516285fc1360e71b81526001600160a01b038216906342fe0980906110f0908b908b908a908a908a908a90600401611a11565b600060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2979650505050505050565b6001600160a01b0380821660009081526001602052604081205490918291168015611192578092506001915061125e565b6000604051806020016111a490611554565b601f1982820381018352601f9091011660408181526001600160a01b03881660208301529192506001600160f81b03199130910160405160208183030381529060405280519060200120838051906020012060405160200161123d94939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012060001c935060009250505b50915091565b604051634a0687ef60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152829190821690634a0687ef90602401600060405180830381600087803b1580156112ca57600080fd5b505af11580156112de573d6000803e3d6000fd5b50506040516001600160a01b03851692507f437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a59150600090a25050565b60006113447f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b03160361139a5760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401610c86565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fc9190611a5f565b7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620146114765760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401610c86565b6001600160a01b03811630036114ce5760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f70000000000000006044820152606401610c86565b6114f6817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620604080519182526001600160a01b038416602083015201610cf0565b61024a80611a7983390190565b61023380611cc383390190565b6001600160a01b0381168114610bbb57600080fd5b60006020828403121561159557600080fd5b81356115a08161156e565b9392505050565b8035600381106115b657600080fd5b919050565b60008083601f8401126115cd57600080fd5b50813567ffffffffffffffff8111156115e557600080fd5b6020830191508360208285010111156115fd57600080fd5b9250929050565b6000806000806000806080878903121561161d57600080fd5b86356116288161156e565b9550611636602088016115a7565b9450604087013567ffffffffffffffff8082111561165357600080fd5b61165f8a838b016115bb565b9096509450606089013591508082111561167857600080fd5b5061168589828a016115bb565b979a9699509497509295939492505050565b600080602083850312156116aa57600080fd5b823567ffffffffffffffff808211156116c257600080fd5b818501915085601f8301126116d657600080fd5b8135818111156116e557600080fd5b8660208260061b85010111156116fa57600080fd5b60209290920196919550909350505050565b60ff81168114610bbb57600080fd5b600080600080600080600060a0888a03121561173657600080fd5b87356117418161156e565b965060208801356117518161170c565b955061175f604089016115a7565b9450606088013567ffffffffffffffff8082111561177c57600080fd5b6117888b838c016115bb565b909650945060808a01359150808211156117a157600080fd5b506117ae8a828b016115bb565b989b979a50959850939692959293505050565b6000602082840312156117d357600080fd5b81516115a08161170c565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561180f5781810151838201526020016117f7565b50506000910152565b60006020828403121561182a57600080fd5b815167ffffffffffffffff8082111561184257600080fd5b818401915084601f83011261185657600080fd5b815181811115611868576118686117de565b604051601f8201601f19908116603f01168101908382118183101715611890576118906117de565b816040528281528760208487010111156118a957600080fd5b6107238360208301602088016117f4565b65029bab832b9160d51b8152600082516118db8160068501602087016117f4565b9190910160060192915050565b600082516118fa8184602087016117f4565b600f60fb1b920191825250600101919050565b600081518084526119258160208601602086016117f4565b601f01601f19169290920160200192915050565b6001600160a01b038516815260ff841660208201526080604082018190526000906119669083018561190d565b8281036060840152610723818561190d565b60006020828403121561198a57600080fd5b81516115a08161156e565b634e487b7160e01b600052603260045260246000fd5b6000600182016119cb57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff86166020820152608060408201819052600090611a3f90830186886119e8565b8281036060840152611a528185876119e8565b9998505050505050505050565b600060208284031215611a7157600080fd5b505191905056fe608060405234801561001057600080fd5b5061022a806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003957610031565b366100315761002f610059565b005b61002f610059565b34801561004557600080fd5b5061002f6100543660046101c4565b61006b565b610069610064610171565b6101a0565b565b6001600160a01b0381166100c65760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101465760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a6564000060448201526064016100bd565b61016e817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b600061019b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156101bf573d6000f35b3d6000fd5b6000602082840312156101d657600080fd5b81356001600160a01b03811681146101ed57600080fd5b939250505056fea26469706673582212207b854fb470c84fe2f7ac8508498d435a5f32ef93071c687a148ef683fa3ede9964736f6c63430008130033608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea2646970667358221220f0edc1277d97c389cb71fad47feaa4ac6f1ef7fd921c88d595e039aff6f2fde364736f6c63430008130033a264697066735822122005759cddd5ae40e61e3741ac4947507d760b879f14eecc4930b5d8c77d785fff64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80638129fc1c116100a2578063a6d0c53411610071578063a6d0c53414610253578063bab74c8914610266578063cbf927b314610298578063d412d344146102bf578063eff0a89d146102d257600080fd5b80638129fc1c146102125780639470a5b21461021a57806397e011ed146102405780639903ad381461021257600080fd5b806350d75d25116100de57806350d75d251461018e57806352d1902d146101965780635365d19f146101c45780635a7792df146101eb57600080fd5b8063151188dc1461011057806320bc442514610140578063431f1481146101665780634695195414610179575b600080fd5b61012361011e366004611583565b6102fe565b6040516001600160a01b0390911681526020015b60405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610123565b610123610174366004611604565b6106b1565b61018c610187366004611583565b61072e565b005b610123610bbe565b6040517fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6208152602001610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c610bed565b7f0000000000000000000000000000000000000000000000000000000000000000610123565b61018c61024e366004611697565b610cfb565b61012361026136600461171b565b610f10565b610279610274366004611583565b611161565b604080516001600160a01b039093168352901515602083015201610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c6102cd366004611583565b611264565b6101236102e0366004611583565b6001600160a01b039081166000908152600160205260409020541690565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610350576040516306ce6e6d60e21b815260040160405180910390fd5b6001600160a01b03808316600090815260016020526040902054839116801561038c576040516348eb3cb960e11b815260040160405180910390fd5b604080516001600160a01b0384166020820152600091016040516020818303038152906040528051906020012090506000816040516103ca90611554565b8190604051809103906000f59050801580156103ea573d6000803e3d6000fd5b506001600160a01b038581166000908152600160205260409081902080546001600160a01b0319168484169081179091559051634a0687ef60e01b81527f00000000000000000000000000000000000000000000000000000000000000009092166004830152919250634a0687ef90602401600060405180830381600087803b15801561047657600080fd5b505af115801561048a573d6000803e3d6000fd5b5050505060008190506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f791906117c1565b90506000886001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105619190810190611818565b90506000896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb9190810190611818565b9050836001600160a01b03166342fe09808b85856040516020016105ef91906118ba565b6040516020818303038152906040528560405160200161060f91906118e8565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161063d9493929190611939565b600060405180830381600087803b15801561065757600080fd5b505af115801561066b573d6000803e3d6000fd5b50506040516001600160a01b03871692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2509198975050505050505050565b600061072387886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906117c1565b8888888888610f10565b979650505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107775760405163478b8e8360e01b815260040160405180910390fd5b6107808161131a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611978565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108639190611978565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415806109b757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611978565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190611978565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614155b15610bbb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e9190611978565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611978565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610ba257600080fd5b505af1158015610bb6573d6000803e3d6000fd5b505050505b50565b6000610be87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b600054610100900460ff1615808015610c0d5750600054600160ff909116105b80610c275750303b158015610c27575060005460ff166001145b610c8f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610cb2576000805461ff0019166101001790555b8015610bbb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f9190611978565b9050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190611978565b6001600160a01b0316336001600160a01b031614610e1457604051632bf2a63360e21b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031615610e66576040516348eb3cb960e11b815260040160405180910390fd5b60005b82811015610f0a57838382818110610e8357610e83611995565b9050604002016020016020810190610e9b9190611583565b60016000868685818110610eb157610eb1611995565b610ec79260206040909202019081019150611583565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610f02816119ab565b915050610e69565b50505050565b60006001600160a01b038816610f395760405163182e4f4160e11b815260040160405180910390fd5b6000866002811115610f4d57610f4d6119d2565b03610f6b5760405163c4901a4360e01b815260040160405180910390fd5b6001866002811115610f7f57610f7f6119d2565b03611037576000604051610f9290611554565b604051809103906000f080158015610fae573d6000803e3d6000fd5b50604051634a0687ef60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291925090821690634a0687ef90602401600060405180830381600087803b15801561101657600080fd5b505af115801561102a573d6000803e3d6000fd5b50505050809150506110bb565b600060405161104590611561565b604051809103906000f080158015611061573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561109f57600080fd5b505af11580156110b3573d6000803e3d6000fd5b509293505050505b6040516285fc1360e71b81526001600160a01b038216906342fe0980906110f0908b908b908a908a908a908a90600401611a11565b600060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2979650505050505050565b6001600160a01b0380821660009081526001602052604081205490918291168015611192578092506001915061125e565b6000604051806020016111a490611554565b601f1982820381018352601f9091011660408181526001600160a01b03881660208301529192506001600160f81b03199130910160405160208183030381529060405280519060200120838051906020012060405160200161123d94939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012060001c935060009250505b50915091565b604051634a0687ef60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152829190821690634a0687ef90602401600060405180830381600087803b1580156112ca57600080fd5b505af11580156112de573d6000803e3d6000fd5b50506040516001600160a01b03851692507f437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a59150600090a25050565b60006113447f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b03160361139a5760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401610c86565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fc9190611a5f565b7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620146114765760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401610c86565b6001600160a01b03811630036114ce5760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f70000000000000006044820152606401610c86565b6114f6817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620604080519182526001600160a01b038416602083015201610cf0565b61024a80611a7983390190565b61023380611cc383390190565b6001600160a01b0381168114610bbb57600080fd5b60006020828403121561159557600080fd5b81356115a08161156e565b9392505050565b8035600381106115b657600080fd5b919050565b60008083601f8401126115cd57600080fd5b50813567ffffffffffffffff8111156115e557600080fd5b6020830191508360208285010111156115fd57600080fd5b9250929050565b6000806000806000806080878903121561161d57600080fd5b86356116288161156e565b9550611636602088016115a7565b9450604087013567ffffffffffffffff8082111561165357600080fd5b61165f8a838b016115bb565b9096509450606089013591508082111561167857600080fd5b5061168589828a016115bb565b979a9699509497509295939492505050565b600080602083850312156116aa57600080fd5b823567ffffffffffffffff808211156116c257600080fd5b818501915085601f8301126116d657600080fd5b8135818111156116e557600080fd5b8660208260061b85010111156116fa57600080fd5b60209290920196919550909350505050565b60ff81168114610bbb57600080fd5b600080600080600080600060a0888a03121561173657600080fd5b87356117418161156e565b965060208801356117518161170c565b955061175f604089016115a7565b9450606088013567ffffffffffffffff8082111561177c57600080fd5b6117888b838c016115bb565b909650945060808a01359150808211156117a157600080fd5b506117ae8a828b016115bb565b989b979a50959850939692959293505050565b6000602082840312156117d357600080fd5b81516115a08161170c565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561180f5781810151838201526020016117f7565b50506000910152565b60006020828403121561182a57600080fd5b815167ffffffffffffffff8082111561184257600080fd5b818401915084601f83011261185657600080fd5b815181811115611868576118686117de565b604051601f8201601f19908116603f01168101908382118183101715611890576118906117de565b816040528281528760208487010111156118a957600080fd5b6107238360208301602088016117f4565b65029bab832b9160d51b8152600082516118db8160068501602087016117f4565b9190910160060192915050565b600082516118fa8184602087016117f4565b600f60fb1b920191825250600101919050565b600081518084526119258160208601602086016117f4565b601f01601f19169290920160200192915050565b6001600160a01b038516815260ff841660208201526080604082018190526000906119669083018561190d565b8281036060840152610723818561190d565b60006020828403121561198a57600080fd5b81516115a08161156e565b634e487b7160e01b600052603260045260246000fd5b6000600182016119cb57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff86166020820152608060408201819052600090611a3f90830186886119e8565b8281036060840152611a528185876119e8565b9998505050505050505050565b600060208284031215611a7157600080fd5b505191905056fe608060405234801561001057600080fd5b5061022a806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003957610031565b366100315761002f610059565b005b61002f610059565b34801561004557600080fd5b5061002f6100543660046101c4565b61006b565b610069610064610171565b6101a0565b565b6001600160a01b0381166100c65760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101465760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a6564000060448201526064016100bd565b61016e817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b600061019b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156101bf573d6000f35b3d6000fd5b6000602082840312156101d657600080fd5b81356001600160a01b03811681146101ed57600080fd5b939250505056fea26469706673582212207b854fb470c84fe2f7ac8508498d435a5f32ef93071c687a148ef683fa3ede9964736f6c63430008130033608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea2646970667358221220f0edc1277d97c389cb71fad47feaa4ac6f1ef7fd921c88d595e039aff6f2fde364736f6c63430008130033a264697066735822122005759cddd5ae40e61e3741ac4947507d760b879f14eecc4930b5d8c77d785fff64736f6c63430008130033",
  "immutableReferences": {
    "40982": [
      {
        "length": 32,
        "start": 540
      },
      {
        "length": 32,
        "start": 669
      },
      {
        "length": 32,
        "start": 1065
      },
      {
        "length": 32,
        "start": 1922
      },
      {
        "length": 32,
        "start": 2208
      },
      {
        "length": 32,
        "start": 2494
      },
      {
        "length": 32,
        "start": 2749
      },
      {
        "length": 32,
        "start": 4038
      },
      {
        "length": 32,
        "start": 4731
      }
    ],
    "40985": [
      {
        "length": 32,
        "start": 322
      },
      {
        "length": 32,
        "start": 1849
      },
      {
        "length": 32,
        "start": 3327
      }
    ],
    "40988": [
      {
        "length": 32,
        "start": 457
      },
      {
        "length": 32,
        "start": 2158
      },
      {
        "length": 32,
        "start": 2645
      }
    ],
    "40991": [
      {
        "length": 32,
        "start": 496
      },
      {
        "length": 32,
        "start": 2444
      },
      {
        "length": 32,
        "start": 2900
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:970:120",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:120",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:86:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "136:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "145:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "148:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "138:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "138:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "138:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "95:5:120"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "106:5:120"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "121:3:120",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "126:1:120",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "117:3:120"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "117:11:120"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "130:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "113:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "113:19:120"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "102:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "102:31:120"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "92:2:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "92:42:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "85:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "85:50:120"
                  },
                  "nodeType": "YulIf",
                  "src": "82:70:120"
                }
              ]
            },
            "name": "validator_revert_contract_ISuperfluid",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:120",
                "type": ""
              }
            ],
            "src": "14:144:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "394:574:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "441:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "450:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "453:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "443:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "443:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "443:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "415:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "424:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "436:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "407:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:33:120"
                  },
                  "nodeType": "YulIf",
                  "src": "404:53:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "466:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "485:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "479:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:16:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "470:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "542:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "504:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "504:44:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "504:44:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "557:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "567:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "557:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "581:40:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "606:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "617:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "602:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "602:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "596:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:25:120"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "585:7:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "668:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "630:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "630:46:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "630:46:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "685:17:120",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "695:7:120"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "685:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "711:40:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "736:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "747:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "732:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "732:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "726:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "726:25:120"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "715:7:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "798:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "760:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "760:46:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "760:46:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "815:17:120",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "825:7:120"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "815:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "841:40:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "866:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "877:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "862:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "862:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "856:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:25:120"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "845:7:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "928:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "890:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "890:46:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "890:46:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "945:17:120",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "955:7:120"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "945:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ISuperfluid_$25106t_contract$_ISuperToken_$24454t_contract$_IConstantOutflowNFT_$23757t_contract$_IConstantInflowNFT_$23703_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "336:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "347:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "359:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "367:6:120",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "375:6:120",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "383:6:120",
                "type": ""
              }
            ],
            "src": "163:805:120"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ISuperfluid(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ISuperfluid_$25106t_contract$_ISuperToken_$24454t_contract$_IConstantOutflowNFT_$23757t_contract$_IConstantInflowNFT_$23703_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ISuperfluid(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_ISuperfluid(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_ISuperfluid(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_contract_ISuperfluid(value_3)\n        value3 := value_3\n    }\n}",
      "id": 120,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14088:120",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:120",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "79:86:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "143:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "152:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "155:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "145:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "145:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "145:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "102:5:120"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "113:5:120"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "128:3:120",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "133:1:120",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "124:3:120"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "124:11:120"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:19:120"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "109:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "109:31:120"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "99:2:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "99:42:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "92:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "92:50:120"
                  },
                  "nodeType": "YulIf",
                  "src": "89:70:120"
                }
              ]
            },
            "name": "validator_revert_contract_ERC20WithTokenInfo",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "68:5:120",
                "type": ""
              }
            ],
            "src": "14:151:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "268:197:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "314:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "323:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "326:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "316:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "316:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "316:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "289:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "298:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "285:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "285:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "310:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "281:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "278:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "339:36:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "365:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "352:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:23:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "343:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "429:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "384:44:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "384:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "384:51:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "444:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "454:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "444:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20WithTokenInfo_$25533",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "234:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "245:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "257:6:120",
                "type": ""
              }
            ],
            "src": "170:295:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "592:102:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "602:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "614:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "625:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "610:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "610:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "602:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "644:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "659:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "675:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "680:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "671:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "671:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "684:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "667:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "667:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "655:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "655:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "637:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "637:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "637:51:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ISuperToken_$24454__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "561:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "572:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "583:4:120",
                "type": ""
              }
            ],
            "src": "470:224:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:102:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "810:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "822:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "818:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "818:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "810:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "852:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "867:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "883:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "888:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "879:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "879:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "892:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "875:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "875:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "863:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "863:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "845:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "845:51:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "769:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "780:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "791:4:120",
                "type": ""
              }
            ],
            "src": "699:203:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:94:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "977:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "999:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "986:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:20:120"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "977:5:120"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1039:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1048:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1051:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1041:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1041:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1041:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1028:5:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1035:1:120",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1025:2:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1025:12:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1018:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:20:120"
                  },
                  "nodeType": "YulIf",
                  "src": "1015:40:120"
                }
              ]
            },
            "name": "abi_decode_enum_Upgradability",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "946:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "957:5:120",
                "type": ""
              }
            ],
            "src": "907:154:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1139:275:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1188:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1197:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1200:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1190:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1190:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1190:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1167:6:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1175:4:120",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1163:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1163:17:120"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1182:3:120"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1159:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1159:27:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1152:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:35:120"
                  },
                  "nodeType": "YulIf",
                  "src": "1149:55:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1213:30:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1236:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1223:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:20:120"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1213:6:120"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1286:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1295:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1298:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1288:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1288:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1288:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1258:6:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1266:18:120",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1255:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1255:30:120"
                  },
                  "nodeType": "YulIf",
                  "src": "1252:50:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1311:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1327:6:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1335:4:120",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1323:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1323:17:120"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "1311:8:120"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1392:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1401:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1404:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1394:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1394:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1394:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1363:6:120"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1371:6:120"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1359:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1359:19:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1380:4:120",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1355:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1355:30:120"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1387:3:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1352:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1352:39:120"
                  },
                  "nodeType": "YulIf",
                  "src": "1349:59:120"
                }
              ]
            },
            "name": "abi_decode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1102:6:120",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1110:3:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1118:8:120",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1128:6:120",
                "type": ""
              }
            ],
            "src": "1066:348:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1627:801:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1674:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1683:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1686:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1676:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1676:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1676:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1648:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1657:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1644:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1644:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1669:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1640:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:33:120"
                  },
                  "nodeType": "YulIf",
                  "src": "1637:53:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1699:36:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1725:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1712:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1712:23:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1703:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1789:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "1744:44:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1744:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1744:51:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1804:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1814:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1804:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1828:59:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1872:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1883:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1868:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_enum_Upgradability",
                      "nodeType": "YulIdentifier",
                      "src": "1838:29:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1838:49:120"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1828:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1896:46:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1927:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1938:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1923:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1923:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1910:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:32:120"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1900:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1951:28:120",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1961:18:120",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1955:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2006:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2015:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2018:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2008:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2008:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2008:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1994:6:120"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2002:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1991:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1991:14:120"
                  },
                  "nodeType": "YulIf",
                  "src": "1988:34:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2031:85:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2088:9:120"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2099:6:120"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2084:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2084:22:120"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2108:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2057:26:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:59:120"
                  },
                  "variables": [
                    {
                      "name": "value2_1",
                      "nodeType": "YulTypedName",
                      "src": "2035:8:120",
                      "type": ""
                    },
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "2045:8:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2125:18:120",
                  "value": {
                    "name": "value2_1",
                    "nodeType": "YulIdentifier",
                    "src": "2135:8:120"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2125:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2152:18:120",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "2162:8:120"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2152:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2179:48:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2212:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2223:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2208:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2208:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2195:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2195:32:120"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2183:8:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2256:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2265:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2268:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2258:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2258:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2258:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2242:8:120"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2252:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2239:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:16:120"
                  },
                  "nodeType": "YulIf",
                  "src": "2236:36:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2281:87:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2338:9:120"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2349:8:120"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2334:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2334:24:120"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2360:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "2307:26:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2307:61:120"
                  },
                  "variables": [
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "2285:8:120",
                      "type": ""
                    },
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "2295:8:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2377:18:120",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "2387:8:120"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2377:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2404:18:120",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "2414:8:120"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2404:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20WithTokenInfo_$25533t_enum$_Upgradability_$24495t_string_calldata_ptrt_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1553:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1564:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1576:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1584:6:120",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1592:6:120",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1600:6:120",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1608:6:120",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1616:6:120",
                "type": ""
              }
            ],
            "src": "1419:1009:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2503:197:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2549:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2558:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2561:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2551:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2551:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2551:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2524:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2533:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2520:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2520:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2545:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2516:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2516:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "2513:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2574:36:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2600:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2587:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2587:23:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2578:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2664:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "2619:44:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2619:51:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2679:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2689:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2679:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2469:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2480:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2492:6:120",
                "type": ""
              }
            ],
            "src": "2433:267:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2806:76:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2816:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2828:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2839:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2824:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2824:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2816:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2858:9:120"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2869:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2851:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2851:25:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2851:25:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2775:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2786:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2797:4:120",
                "type": ""
              }
            ],
            "src": "2705:177:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3017:102:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3027:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3039:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3050:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3035:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3035:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3027:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3069:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3084:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3100:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3105:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3096:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3096:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3109:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3092:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3092:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3080:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3080:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3062:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3062:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3062:51:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IConstantOutflowNFT_$23757__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2986:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2997:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3008:4:120",
                "type": ""
              }
            ],
            "src": "2887:232:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3253:102:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3263:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3275:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3286:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3271:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3271:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3263:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3305:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3320:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3336:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3341:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3332:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3332:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3345:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3328:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3328:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3316:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3316:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3298:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3298:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3298:51:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IConstantInflowNFT_$23703__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3222:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3233:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3244:4:120",
                "type": ""
              }
            ],
            "src": "3124:231:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3500:510:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3546:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3555:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3558:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3548:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3548:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3548:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3521:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3530:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3517:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3517:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3542:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3513:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3513:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "3510:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3571:37:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3598:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3585:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3585:23:120"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "3575:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3617:28:120",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3627:18:120",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3621:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3672:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3681:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3684:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3674:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3674:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3674:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3660:6:120"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3668:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3657:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3657:14:120"
                  },
                  "nodeType": "YulIf",
                  "src": "3654:34:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3697:32:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3711:9:120"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3722:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3707:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3707:22:120"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "3701:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3777:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3786:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3789:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3779:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3779:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3779:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3756:2:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3760:4:120",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3752:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3752:13:120"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3767:7:120"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3748:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3748:27:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3741:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3741:35:120"
                  },
                  "nodeType": "YulIf",
                  "src": "3738:55:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3802:30:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3829:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3816:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3816:16:120"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3806:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3859:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3868:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3871:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3861:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3861:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3861:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3847:6:120"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3855:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3844:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3844:14:120"
                  },
                  "nodeType": "YulIf",
                  "src": "3841:34:120"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3933:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3942:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3945:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3935:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3935:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3935:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "3898:2:120"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3906:1:120",
                                    "type": "",
                                    "value": "6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3909:6:120"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3902:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3902:14:120"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:23:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3919:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3890:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3890:32:120"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3924:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3887:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3887:45:120"
                  },
                  "nodeType": "YulIf",
                  "src": "3884:65:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3958:21:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "3972:2:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3976:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3968:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3968:11:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3958:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3988:16:120",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "3998:6:120"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3988:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_struct$_InitializeData_$40979_calldata_ptr_$dyn_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3458:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3469:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3481:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3489:6:120",
                "type": ""
              }
            ],
            "src": "3360:650:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4058:71:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4107:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4116:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4119:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4109:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4109:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4109:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4081:5:120"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4092:5:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4099:4:120",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4088:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4088:16:120"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4078:2:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4078:27:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4071:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4071:35:120"
                  },
                  "nodeType": "YulIf",
                  "src": "4068:55:120"
                }
              ]
            },
            "name": "validator_revert_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4047:5:120",
                "type": ""
              }
            ],
            "src": "4015:114:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4344:924:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4391:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4400:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4403:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4393:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4393:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4393:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4365:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4374:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4361:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4361:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4386:3:120",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4357:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4357:33:120"
                  },
                  "nodeType": "YulIf",
                  "src": "4354:53:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4416:36:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4442:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4429:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4429:23:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4420:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4506:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "4461:44:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4461:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4461:51:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4521:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4531:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4521:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4545:47:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4577:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4588:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4573:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4573:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4560:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4560:32:120"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4549:7:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4624:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "4601:22:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4601:31:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4601:31:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4641:17:120",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4651:7:120"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4641:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4667:59:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4711:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4722:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4707:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4707:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_enum_Upgradability",
                      "nodeType": "YulIdentifier",
                      "src": "4677:29:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:49:120"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4667:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4735:46:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4766:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4777:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4762:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4762:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4749:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4749:32:120"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "4739:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4790:28:120",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4800:18:120",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4794:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4845:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4854:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4857:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4847:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4847:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4847:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4833:6:120"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4841:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4830:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4830:14:120"
                  },
                  "nodeType": "YulIf",
                  "src": "4827:34:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4870:85:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4927:9:120"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4938:6:120"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4923:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4923:22:120"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "4947:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "4896:26:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4896:59:120"
                  },
                  "variables": [
                    {
                      "name": "value3_1",
                      "nodeType": "YulTypedName",
                      "src": "4874:8:120",
                      "type": ""
                    },
                    {
                      "name": "value4_1",
                      "nodeType": "YulTypedName",
                      "src": "4884:8:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4964:18:120",
                  "value": {
                    "name": "value3_1",
                    "nodeType": "YulIdentifier",
                    "src": "4974:8:120"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4964:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4991:18:120",
                  "value": {
                    "name": "value4_1",
                    "nodeType": "YulIdentifier",
                    "src": "5001:8:120"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "4991:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5018:49:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5051:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5062:3:120",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5047:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5047:19:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5034:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5034:33:120"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "5022:8:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5096:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5105:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5108:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5098:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5098:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5098:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "5082:8:120"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5092:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5079:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5079:16:120"
                  },
                  "nodeType": "YulIf",
                  "src": "5076:36:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5121:87:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5178:9:120"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "5189:8:120"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5174:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5174:24:120"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "5200:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "5147:26:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5147:61:120"
                  },
                  "variables": [
                    {
                      "name": "value5_1",
                      "nodeType": "YulTypedName",
                      "src": "5125:8:120",
                      "type": ""
                    },
                    {
                      "name": "value6_1",
                      "nodeType": "YulTypedName",
                      "src": "5135:8:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5217:18:120",
                  "value": {
                    "name": "value5_1",
                    "nodeType": "YulIdentifier",
                    "src": "5227:8:120"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5217:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5244:18:120",
                  "value": {
                    "name": "value6_1",
                    "nodeType": "YulIdentifier",
                    "src": "5254:8:120"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "5244:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$1540t_uint8t_enum$_Upgradability_$24495t_string_calldata_ptrt_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4262:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4273:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4285:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4293:6:120",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4301:6:120",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4309:6:120",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4317:6:120",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4325:6:120",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4333:6:120",
                "type": ""
              }
            ],
            "src": "4134:1134:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5396:161:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5406:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5418:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5429:2:120",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5414:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5414:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5406:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5448:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5463:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5479:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5484:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5475:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5475:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5488:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5471:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5471:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5459:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5459:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5441:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5441:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5441:51:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5512:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5523:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5508:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5508:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5542:6:120"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5535:6:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5535:14:120"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5528:6:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5528:22:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5501:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5501:50:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5501:50:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5357:9:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5368:6:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5376:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5387:4:120",
                "type": ""
              }
            ],
            "src": "5273:284:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5641:168:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5687:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5696:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5699:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5689:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5689:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5689:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5662:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5671:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5658:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5658:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5683:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5654:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5654:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "5651:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5712:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5731:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5725:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5725:16:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5716:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5773:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_uint8",
                      "nodeType": "YulIdentifier",
                      "src": "5750:22:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5750:29:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5750:29:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5788:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5798:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5788:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5607:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5618:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5630:6:120",
                "type": ""
              }
            ],
            "src": "5562:247:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5846:95:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5863:1:120",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5870:3:120",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5875:10:120",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5866:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5866:20:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5856:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5856:31:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5856:31:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5903:1:120",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5906:4:120",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5896:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5896:15:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5896:15:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5927:1:120",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5930:4:120",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5920:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5920:15:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5920:15:120"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5814:127:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6012:184:120",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6022:10:120",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6031:1:120",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6026:1:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6091:63:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6116:3:120"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6121:1:120"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6112:3:120"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6112:11:120"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6135:3:120"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6140:1:120"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6131:3:120"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6131:11:120"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6125:5:120"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6125:18:120"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6105:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6105:39:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6105:39:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6052:1:120"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6055:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6049:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6049:13:120"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6063:19:120",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6065:15:120",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6074:1:120"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6077:2:120",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6070:3:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6070:10:120"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6065:1:120"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6045:3:120",
                    "statements": []
                  },
                  "src": "6041:113:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6174:3:120"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6179:6:120"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6170:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6170:16:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6188:1:120",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6163:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6163:27:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6163:27:120"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "5990:3:120",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "5995:3:120",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6000:6:120",
                "type": ""
              }
            ],
            "src": "5946:250:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6292:806:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6338:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6347:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6350:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6340:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6340:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6340:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6313:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6322:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6309:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6309:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6334:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6305:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6305:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "6302:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6363:30:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6383:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6377:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:16:120"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "6367:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6402:28:120",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6412:18:120",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6406:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6457:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6466:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6469:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6459:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6459:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6459:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6445:6:120"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6453:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6442:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6442:14:120"
                  },
                  "nodeType": "YulIf",
                  "src": "6439:34:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6482:32:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6496:9:120"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6507:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6492:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6492:22:120"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "6486:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6562:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6571:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6574:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6564:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6564:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6564:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6541:2:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6545:4:120",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6537:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6537:13:120"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6552:7:120"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "6533:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6533:27:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6526:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6526:35:120"
                  },
                  "nodeType": "YulIf",
                  "src": "6523:55:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6587:19:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "6603:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6597:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6597:9:120"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "6591:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6629:22:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6631:16:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6631:18:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6631:18:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "6621:2:120"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6625:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6618:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6618:10:120"
                  },
                  "nodeType": "YulIf",
                  "src": "6615:36:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6660:17:120",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6674:2:120",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "6670:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6670:7:120"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "6664:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6686:23:120",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6706:2:120",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6700:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6700:9:120"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "6690:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6718:71:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6740:6:120"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "6764:2:120"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6768:4:120",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6760:3:120"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6760:13:120"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "6775:2:120"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6756:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6756:22:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6780:2:120",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6752:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6752:31:120"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "6785:2:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6748:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6748:40:120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6736:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6736:53:120"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "6722:10:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6848:22:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "6850:16:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6850:18:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6850:18:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6807:10:120"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6819:2:120"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6804:2:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6804:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "6827:10:120"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6839:6:120"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6824:2:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6824:22:120"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "6801:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6801:46:120"
                  },
                  "nodeType": "YulIf",
                  "src": "6798:72:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6886:2:120",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "6890:10:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6879:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6879:22:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6879:22:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "6917:6:120"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "6925:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6910:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6910:18:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6910:18:120"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6974:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6983:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6986:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6976:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6976:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6976:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "6951:2:120"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "6955:2:120"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6947:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6947:11:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6960:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6943:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6943:20:120"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6965:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6940:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6940:33:120"
                  },
                  "nodeType": "YulIf",
                  "src": "6937:53:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "7038:2:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7042:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7034:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7034:11:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7051:6:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7059:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7047:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7047:15:120"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "7064:2:120"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "6999:34:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6999:68:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6999:68:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7076:16:120",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "7086:6:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7076:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6258:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6269:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6281:6:120",
                "type": ""
              }
            ],
            "src": "6201:897:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7332:196:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7349:3:120"
                      },
                      {
                        "hexValue": "537570657220",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7354:8:120",
                        "type": "",
                        "value": "Super "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7342:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7342:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7342:21:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7372:27:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7392:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7386:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7386:13:120"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7376:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7447:6:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7455:4:120",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7443:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7443:17:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7466:3:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7471:1:120",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7462:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7462:11:120"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7475:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "7408:34:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7408:74:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7408:74:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7491:31:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7506:3:120"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7511:6:120"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7502:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7502:16:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7520:1:120",
                        "type": "",
                        "value": "6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7498:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7498:24:120"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7491:3:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_ebd27962ce5590c269f1456623323f17a34c644eb379ed98ba3fc280518c503d_t_string_memory_ptr__to_t_bytes6_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7308:3:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7313:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7324:3:120",
                "type": ""
              }
            ],
            "src": "7103:425:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7762:212:120",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7772:27:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7792:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7786:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7786:13:120"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7776:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7847:6:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7855:4:120",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7843:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7843:17:120"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7862:3:120"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7867:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "7808:34:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7808:66:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7808:66:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7883:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7900:3:120"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7905:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7896:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7896:16:120"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "7887:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "7928:5:120"
                      },
                      {
                        "hexValue": "78",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7935:3:120",
                        "type": "",
                        "value": "x"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7921:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7921:18:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7921:18:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7948:20:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "7959:5:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7966:1:120",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7955:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7955:13:120"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7948:3:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83__to_t_string_memory_ptr_t_bytes1__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7738:3:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7743:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7754:3:120",
                "type": ""
              }
            ],
            "src": "7533:441:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8029:221:120",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8039:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8059:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8053:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8053:12:120"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8043:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8081:3:120"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8086:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8074:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8074:19:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8074:19:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8141:5:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8148:4:120",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8137:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8137:16:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8159:3:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8164:4:120",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8155:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8155:14:120"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8171:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "8102:34:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8102:76:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8102:76:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8187:57:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "8202:3:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8215:6:120"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8223:2:120",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8211:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8211:15:120"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8232:2:120",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8228:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8228:7:120"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8207:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8207:29:120"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8198:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8198:39:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8239:4:120",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8194:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8194:50:120"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8187:3:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8006:5:120",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8013:3:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8021:3:120",
                "type": ""
              }
            ],
            "src": "7979:271:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8504:339:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8521:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8536:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8552:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8557:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8548:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8548:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8561:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8544:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8544:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8532:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8532:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8514:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8514:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8514:51:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8585:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8596:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8581:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8581:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8605:6:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8613:4:120",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8601:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8601:17:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8574:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8574:45:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8574:45:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8639:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8650:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8635:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8635:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8655:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8628:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8628:31:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8628:31:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8668:60:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8700:6:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8712:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8723:3:120",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8708:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8708:19:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "8682:17:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8682:46:120"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "8672:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8748:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8759:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8744:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8744:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "8768:6:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8776:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8764:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8764:22:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8737:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8737:50:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8737:50:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8796:41:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "8822:6:120"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "8830:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "8804:17:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8804:33:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8796:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20WithTokenInfo_$25533_t_uint8_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8449:9:120",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "8460:6:120",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8468:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8476:6:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8484:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8495:4:120",
                "type": ""
              }
            ],
            "src": "8255:588:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8958:190:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9004:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9013:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9016:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9006:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9006:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9006:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8979:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8988:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8975:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8975:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9000:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8971:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8971:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "8968:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9029:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9048:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9042:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9042:16:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9033:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9112:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "9067:44:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9067:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9067:51:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9127:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9137:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9127:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IConstantOutflowNFT_$23757_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8924:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8935:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8947:6:120",
                "type": ""
              }
            ],
            "src": "8848:300:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9234:190:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9280:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9289:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9292:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9282:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9282:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9282:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9255:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9264:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9251:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9251:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9276:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9247:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9247:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "9244:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9305:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9324:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9318:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9318:16:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9309:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9388:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "9343:44:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9343:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9343:51:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9403:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9413:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9403:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9200:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9211:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9223:6:120",
                "type": ""
              }
            ],
            "src": "9153:271:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9538:190:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9584:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9593:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9596:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9586:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9586:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9586:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9559:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9568:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9555:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9555:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9580:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9551:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9551:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "9548:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9609:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9628:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9622:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9622:16:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9613:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9692:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "9647:44:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9647:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9647:51:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9707:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9717:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9707:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IConstantInflowNFT_$23703_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9504:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9515:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9527:6:120",
                "type": ""
              }
            ],
            "src": "9429:299:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9907:236:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9924:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9935:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9917:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9917:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9917:21:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9958:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9969:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9954:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9954:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9974:2:120",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9947:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9947:30:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9947:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9997:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10008:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9993:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9993:18:120"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10013:34:120",
                        "type": "",
                        "value": "Initializable: contract is alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9986:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9986:62:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9986:62:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10068:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10079:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10064:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10064:18:120"
                      },
                      {
                        "hexValue": "647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10084:16:120",
                        "type": "",
                        "value": "dy initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10057:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10057:44:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10057:44:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10110:27:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10122:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10133:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10118:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10118:19:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10110:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9884:9:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9898:4:120",
                "type": ""
              }
            ],
            "src": "9733:410:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10255:87:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10265:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10277:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10288:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10273:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10273:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10265:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10307:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10322:6:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10330:4:120",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10318:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10318:17:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10300:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10300:36:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10300:36:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10224:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10235:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10246:4:120",
                "type": ""
              }
            ],
            "src": "10148:194:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10459:190:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10505:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10514:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10517:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10507:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10507:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10507:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10480:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10489:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10476:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10476:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10501:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10472:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10472:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "10469:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10530:29:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10549:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10543:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10543:16:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10534:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10613:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ERC20WithTokenInfo",
                      "nodeType": "YulIdentifier",
                      "src": "10568:44:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10568:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10568:51:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10628:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10638:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10628:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ISuperfluidGovernance_$25235_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10425:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10436:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10448:6:120",
                "type": ""
              }
            ],
            "src": "10347:302:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10686:95:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10703:1:120",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10710:3:120",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10715:10:120",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10706:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10706:20:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10696:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10696:31:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10696:31:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10743:1:120",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10746:4:120",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10736:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10736:15:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10736:15:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10767:1:120",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10770:4:120",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10760:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10760:15:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10760:15:120"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10654:127:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10833:185:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10872:111:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10893:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10900:3:120",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10905:10:120",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10896:3:120"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10896:20:120"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10886:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10886:31:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10886:31:120"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10937:1:120",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10940:4:120",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10930:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10930:15:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10930:15:120"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10965:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10968:4:120",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10958:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10958:15:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10958:15:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10849:5:120"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10860:1:120",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10856:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10856:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10846:2:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10846:17:120"
                  },
                  "nodeType": "YulIf",
                  "src": "10843:140:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10992:20:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11003:5:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11010:1:120",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10999:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10999:13:120"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10992:3:120"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10815:5:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10825:3:120",
                "type": ""
              }
            ],
            "src": "10786:232:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11055:95:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11072:1:120",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11079:3:120",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11084:10:120",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11075:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11075:20:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11065:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11065:31:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11065:31:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11112:1:120",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11115:4:120",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11105:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11105:15:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11105:15:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11136:1:120",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11139:4:120",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11129:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11129:15:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11129:15:120"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "11023:127:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11222:200:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11239:3:120"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11244:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11232:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11232:19:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11232:19:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11277:3:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11282:4:120",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11273:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11273:14:120"
                      },
                      {
                        "name": "start",
                        "nodeType": "YulIdentifier",
                        "src": "11289:5:120"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11296:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "11260:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11260:43:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11260:43:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11327:3:120"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "11332:6:120"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11323:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11323:16:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11341:4:120",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11319:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11319:27:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11348:1:120",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11312:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11312:38:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11312:38:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11359:57:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "11374:3:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11387:6:120"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11395:2:120",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11383:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11383:15:120"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11404:2:120",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "11400:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11400:7:120"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11379:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11379:29:120"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11370:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11370:39:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11411:4:120",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11366:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11366:50:120"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11359:3:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "start",
                "nodeType": "YulTypedName",
                "src": "11191:5:120",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11198:6:120",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11206:3:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11214:3:120",
                "type": ""
              }
            ],
            "src": "11155:267:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11683:373:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11700:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11715:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11731:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11736:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "11727:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11727:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11740:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "11723:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11723:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11711:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11711:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11693:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11693:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11693:51:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11764:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11775:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11760:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11760:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11784:6:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11792:4:120",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11780:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11780:17:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11753:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11753:45:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11753:45:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11818:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11829:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11814:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11814:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11834:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11807:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11807:31:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11807:31:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11847:77:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11888:6:120"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "11896:6:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11908:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11919:3:120",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11904:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11904:19:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "11861:26:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11861:63:120"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "11851:6:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11944:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11955:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11940:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11940:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "11964:6:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11972:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11960:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11960:22:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11933:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11933:50:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11933:50:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11992:58:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12027:6:120"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "12035:6:120"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "12043:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "12000:26:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12000:50:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11992:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$1540_t_uint8_t_string_calldata_ptr_t_string_calldata_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11612:9:120",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "11623:6:120",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "11631:6:120",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "11639:6:120",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11647:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11655:6:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11663:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11674:4:120",
                "type": ""
              }
            ],
            "src": "11427:629:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12262:240:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12279:3:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12288:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12300:3:120",
                                "type": "",
                                "value": "248"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12305:3:120",
                                "type": "",
                                "value": "255"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "12296:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12296:13:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12284:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12284:26:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12272:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12272:39:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12272:39:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12331:3:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12336:1:120",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12327:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12327:11:120"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12348:2:120",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "12352:6:120"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "12344:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12344:15:120"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12365:26:120",
                                "type": "",
                                "value": "0xffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "12361:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12361:31:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12340:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12340:53:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12320:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12320:74:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12320:74:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12414:3:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12419:2:120",
                            "type": "",
                            "value": "21"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12410:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12410:12:120"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12424:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12403:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12403:28:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12403:28:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "12451:3:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12456:2:120",
                            "type": "",
                            "value": "53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12447:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12447:12:120"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12461:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12440:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12440:28:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12440:28:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12477:19:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12488:3:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12493:2:120",
                        "type": "",
                        "value": "85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12484:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12484:12:120"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12477:3:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12214:3:120",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12219:6:120",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12227:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12235:6:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12243:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12254:3:120",
                "type": ""
              }
            ],
            "src": "12061:441:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12681:179:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12698:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12709:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12691:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12691:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12691:21:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12732:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12743:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12728:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12728:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12748:2:120",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12721:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12721:30:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12721:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12771:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12782:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12767:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12767:18:120"
                      },
                      {
                        "hexValue": "5555505350726f786961626c653a206e6f742075706772616461626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12787:31:120",
                        "type": "",
                        "value": "UUPSProxiable: not upgradable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12760:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12760:59:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12760:59:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12828:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12840:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12851:2:120",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12836:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12836:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12828:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_befd5f2ffca520b9208eba0ffa41bf9e0aed29a8580655fdb778030efa521bea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12658:9:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12672:4:120",
                "type": ""
              }
            ],
            "src": "12507:353:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12946:103:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12992:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13001:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13004:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12994:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12994:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12994:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12967:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12976:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12963:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12963:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12988:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12959:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12959:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "12956:52:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13017:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13033:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13027:5:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13027:16:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13017:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12912:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12923:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12935:6:120",
                "type": ""
              }
            ],
            "src": "12865:184:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13228:225:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13245:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13256:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13238:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13238:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13238:21:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13279:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13290:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13275:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13275:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13295:2:120",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13268:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13268:30:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13268:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13318:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13329:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13314:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13314:18:120"
                      },
                      {
                        "hexValue": "5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13334:34:120",
                        "type": "",
                        "value": "UUPSProxiable: not compatible lo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13307:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13307:62:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13307:62:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13389:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13400:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13385:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13385:18:120"
                      },
                      {
                        "hexValue": "676963",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13405:5:120",
                        "type": "",
                        "value": "gic"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13378:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13378:33:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13378:33:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13420:27:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13432:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13443:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13428:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13428:19:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13420:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0c74ad657035ec53451093745d5caa5909a42dace836130f97873b36755af913__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13205:9:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13219:4:120",
                "type": ""
              }
            ],
            "src": "13054:399:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13632:175:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13649:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13660:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13642:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13642:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13642:21:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13683:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13694:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13679:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13679:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13699:2:120",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13672:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13672:30:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13672:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13722:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13733:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13718:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13718:18:120"
                      },
                      {
                        "hexValue": "5555505350726f786961626c653a2070726f7879206c6f6f70",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13738:27:120",
                        "type": "",
                        "value": "UUPSProxiable: proxy loop"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13711:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13711:55:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13711:55:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13775:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13787:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13798:2:120",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13783:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13783:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13775:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7cebf0bf1547141b7b7f87cc08cf4eb6b11676b9b00928b28fdc7e005edd97c0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13609:9:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13623:4:120",
                "type": ""
              }
            ],
            "src": "13458:349:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13941:145:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13951:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13963:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13974:2:120",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13959:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13959:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13951:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13993:9:120"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14004:6:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13986:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13986:25:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13986:25:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14031:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14042:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14027:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14027:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14051:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14067:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14072:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "14063:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14063:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14076:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "14059:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14059:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14047:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14047:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14020:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14020:60:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14020:60:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13902:9:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13913:6:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13921:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13932:4:120",
                "type": ""
              }
            ],
            "src": "13812:274:120"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ERC20WithTokenInfo(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ERC20WithTokenInfo_$25533(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ISuperToken_$24454__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_enum_Upgradability(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ERC20WithTokenInfo_$25533t_enum$_Upgradability_$24495t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n        value1 := abi_decode_enum_Upgradability(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IConstantOutflowNFT_$23757__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IConstantInflowNFT_$23703__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_InitializeData_$40979_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(6, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1540t_uint8t_enum$_Upgradability_$24495t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_uint8(value_1)\n        value1 := value_1\n        value2 := abi_decode_enum_Upgradability(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_packed_t_stringliteral_ebd27962ce5590c269f1456623323f17a34c644eb379ed98ba3fc280518c503d_t_string_memory_ptr__to_t_bytes6_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"Super \")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 6), length)\n        end := add(add(pos, length), 6)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83__to_t_string_memory_ptr_t_bytes1__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, \"x\")\n        end := add(end_1, 1)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_contract$_ERC20WithTokenInfo_$25533_t_uint8_t_string_memory_ptr_t_string_memory_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), 128)\n        let tail_1 := abi_encode_string(value2, add(headStart, 128))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string(value3, tail_1)\n    }\n    function abi_decode_tuple_t_contract$_IConstantOutflowNFT_$23757_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IConstantInflowNFT_$23703_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_contract$_ISuperfluidGovernance_$25235_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_ERC20WithTokenInfo(value)\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_string_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1540_t_uint8_t_string_calldata_ptr_t_string_calldata_ptr__to_t_address_t_uint8_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), 128)\n        let tail_1 := abi_encode_string_calldata(value2, value3, add(headStart, 128))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        tail := abi_encode_string_calldata(value4, value5, tail_1)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_address_t_bytes32_t_bytes32__to_t_bytes1_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, and(value0, shl(248, 255)))\n        mstore(add(pos, 1), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 21), value2)\n        mstore(add(pos, 53), value3)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_stringliteral_befd5f2ffca520b9208eba0ffa41bf9e0aed29a8580655fdb778030efa521bea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"UUPSProxiable: not upgradable\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_0c74ad657035ec53451093745d5caa5909a42dace836130f97873b36755af913__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"UUPSProxiable: not compatible lo\")\n        mstore(add(headStart, 96), \"gic\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7cebf0bf1547141b7b7f87cc08cf4eb6b11676b9b00928b28fdc7e005edd97c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"UUPSProxiable: proxy loop\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 120,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "13230:681:101:-:0;;;13523:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3244:12:101;;;;;3422:36;;;;;;3469:53;;;-1:-1:-1;;;3469:53:101;;;;13741:4;;13759:15;;13788:18;;13820:17;;3422:36;3469:51;;:53;;;;;;;;;;;;;;;3422:36;3469:53;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;3533:52:101;;;;;3596:50;;;;;3940:18;;3917:42;;;;;-1:-1:-1;3917:42:101;;;;;3049:917;;;;13523:386;;;;13230:681;;14:144:120;-1:-1:-1;;;;;102:31:120;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:805::-;359:6;367;375;383;436:3;424:9;415:7;411:23;407:33;404:53;;;453:1;450;443:12;404:53;485:9;479:16;504:44;542:5;504:44;:::i;:::-;617:2;602:18;;596:25;567:5;;-1:-1:-1;630:46:120;596:25;630:46;:::i;:::-;747:2;732:18;;726:25;695:7;;-1:-1:-1;760:46:120;726:25;760:46;:::i;:::-;877:2;862:18;;856:25;825:7;;-1:-1:-1;890:46:120;856:25;890:46;:::i;:::-;163:805;;;;-1:-1:-1;163:805:120;;-1:-1:-1;;163:805:120:o;:::-;13230:681:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "13230:681:101:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6456:2056;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;655:32:120;;;637:51;;625:2;610:18;6456:2056:101;;;;;;;;4011:146;4144:5;4011:146;;9869:434;;;;;;:::i;:::-;;:::i;4958:1086::-;;;;;;:::i;:::-;;:::i;:::-;;400:122:106;;;:::i;4555:166:101:-;;;4636:78;2851:25:120;;2839:2;2824:18;4555:166:101;2705:177:120;1382:63:101;;;;;1504:61;;;;;4382:167;;;:::i;6274:137::-;6386:18;6274:137;;12437:789;;;;;;:::i;:::-;;:::i;8557:1267::-;;;;;;:::i;:::-;;:::i;10847:1033::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5459:32:120;;;5441:51;;5535:14;;5528:22;5523:2;5508:18;;5501:50;5414:18;10847:1033:101;5273:284:120;1233:47:101;;;;;10348:454;;;;;;:::i;:::-;;:::i;11925:257::-;;;;;;:::i;:::-;-1:-1:-1;;;;;12100:75:101;;;12039:25;12100:75;;;:28;:75;;;;;;;;11925:257;6456:2056;6564:11;6747:40;;;:28;:40;;;;-1:-1:-1;;;;;6747:40:101;6743:127;;6824:35;;-1:-1:-1;;;6824:35:101;;;;;;;;;;;6743:127;-1:-1:-1;;;;;6985:82:101;;;6880:30;6985:82;;;:28;:82;;;;;;6921:16;;6985:82;7163:40;;7159:114;;7226:36;;-1:-1:-1;;;7226:36:101;;;;;;;;;;;7159:114;7406:34;;;-1:-1:-1;;;;;655:32:120;;7406:34:101;;;637:51:120;7381:12:101;;610:18:120;7406:34:101;;;;;;;;;;;;7396:45;;;;;;7381:60;;7451:15;7490:4;7469:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7578:52:101;;;;;;;:28;:52;;;;;;;:91;;-1:-1:-1;;;;;;7578:91:101;;;;;;;;;;7766:50;;-1:-1:-1;;;7766:50:101;;7796:18;655:32:120;;;7766:50:101;;;637:51:120;7578:91:101;;-1:-1:-1;7766:21:101;;610:18:120;;7766:50:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7885:22;7930:5;7885:52;;7985:24;8012:16;-1:-1:-1;;;;;8012:25:101;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7985:54;;8049:28;8080:16;-1:-1:-1;;;;;8080:21:101;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8080:23:101;;;;;;;;;;;;:::i;:::-;8049:54;;8113:30;8146:16;-1:-1:-1;;;;;8146:23:101;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8146:25:101;;;;;;;;;;;;:::i;:::-;8113:58;;8236:10;-1:-1:-1;;;;;8236:21:101;;8271:16;8301:18;8357:14;8333:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;8400:16;8386:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;8236:196;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8448:29:101;;-1:-1:-1;;;;;8448:29:101;;;-1:-1:-1;8448:29:101;;-1:-1:-1;8448:29:101;;;-1:-1:-1;8495:10:101;;6456:2056;-1:-1:-1;;;;;;;;6456:2056:101:o;9869:434::-;10089:22;10134:162;10166:15;10195;-1:-1:-1;;;;;10195:24:101;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10235:13;10262:4;;10280:6;;10134:18;:162::i;:::-;10127:169;9869:434;-1:-1:-1;;;;;;;9869:434:101:o;4958:1086::-;5030:10;-1:-1:-1;;;;;5052:5:101;5030:28;;5026:97;;5081:31;;-1:-1:-1;;;5081:31:101;;;;;;;;;;;5026:97;5132:30;5151:10;5132:18;:30::i;:::-;5489:18;-1:-1:-1;;;;;5489:39:101;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5467:97:101;;:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5416:150:101;5424:26;-1:-1:-1;;;;;5416:150:101;;;:314;;;;5654:18;-1:-1:-1;;;;;5654:38:101;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5632:96:101;;:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5582:148:101;5590:25;-1:-1:-1;;;;;5582:148:101;;;5416:314;5399:639;;;5777:18;-1:-1:-1;;;;;5777:39:101;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5755:130;;-1:-1:-1;;;5755:130:101;;-1:-1:-1;;;;;5857:26:101;655:32:120;;5755:130:101;;;637:51:120;5755:93:101;;;;;;;610:18:120;;5755:130:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5921:18;-1:-1:-1;;;;;5921:38:101;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5899:128;;-1:-1:-1;;;5899:128:101;;-1:-1:-1;;;;;6000:25:101;655:32:120;;5899:128:101;;;637:51:120;5899:92:101;;;;;;;610:18:120;;5899:128:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5399:639;4958:1086;:::o;400:122:106:-;447:19;489:26;751:20:108;745:27;;618:170;489:26:106;482:33;;400:122;:::o;4382:167:101:-;3257:19:7;3280:13;;;;;;3279:14;;3325:34;;;;-1:-1:-1;3343:12:7;;3358:1;3343:12;;;;:16;3325:34;3324:97;;;-1:-1:-1;3393:4:7;1465:19:18;:23;;;3365:55:7;;-1:-1:-1;3403:12:7;;;;;:17;3365:55;3303:190;;;;-1:-1:-1;;;3303:190:7;;9935:2:120;3303:190:7;;;9917:21:120;9974:2;9954:18;;;9947:30;10013:34;9993:18;;;9986:62;-1:-1:-1;;;10064:18:120;;;10057:44;10118:19;;3303:190:7;;;;;;;;;3503:12;:16;;-1:-1:-1;;3503:16:7;3518:1;3503:16;;;3529:65;;;;3563:13;:20;;-1:-1:-1;;3563:20:7;;;;;3529:65;3618:14;3614:99;;;3664:5;3648:21;;-1:-1:-1;;3648:21:7;;;3688:14;;-1:-1:-1;10300:36:120;;3688:14:7;;10288:2:120;10273:18;3688:14:7;;;;;;;;3247:472;4382:167:101:o;12437:789::-;12559:11;12589:5;-1:-1:-1;;;;;12589:19:101;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12559:53;;12640:3;-1:-1:-1;;;;;12640:9:101;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12626:25:101;:10;-1:-1:-1;;;;;12626:25:101;;12622:81;;12660:43;;-1:-1:-1;;;12660:43:101;;;;;;;;;;;12622:81;12947:1;12895:40;;:28;:40;;;;-1:-1:-1;;;;;12895:40:101;:54;12891:128;;12972:36;;-1:-1:-1;;;12972:36:101;;;;;;;;;;;12891:128;13064:9;13059:161;13079:16;;;13059:161;;;13173:5;;13179:1;13173:8;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;;:::i;:::-;13116:28;:54;13145:5;;13151:1;13145:8;;;;;;;:::i;:::-;:24;;;:8;;;;;:24;;;;-1:-1:-1;13145:24:101;:::i;:::-;-1:-1:-1;;;;;13116:54:101;;;;;;;;;;;;;;-1:-1:-1;13116:54:101;:93;;-1:-1:-1;;;;;;13116:93:101;;;;;;;;;;;13097:3;;;;:::i;:::-;;;;13059:161;;;;12549:677;12437:789;;:::o;8557:1267::-;8797:22;-1:-1:-1;;;;;8839:38:101;;8835:110;;8900:34;;-1:-1:-1;;;8900:34:101;;;;;;;;;;;8835:110;8976:28;8959:13;:45;;;;;;;;:::i;:::-;;8955:645;;9027:51;;-1:-1:-1;;;9027:51:101;;;;;;;;;;;8955:645;9116:29;9099:13;:46;;;;;;;;:::i;:::-;;9095:505;;9161:15;9179;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9246:50:101;;-1:-1:-1;;;9246:50:101;;-1:-1:-1;;;;;9276:18:101;655:32:120;;9246:50:101;;;637:51:120;9161:33:101;;-1:-1:-1;9246:21:101;;;;;;610:18:120;;9246:50:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9343:5;9310:40;;9147:214;9095:505;;;9430:35;9468;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;9430:73;;9517:5;-1:-1:-1;;;;;9517:16:101;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9582:5:101;;-1:-1:-1;;;;9095:505:101;9642:130;;-1:-1:-1;;;9642:130:101;;-1:-1:-1;;;;;9642:21:101;;;;;:130;;9677:15;;9706:18;;9738:4;;;;9756:6;;;;9642:130;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9788:29:101;;-1:-1:-1;;;;;9788:29:101;;;-1:-1:-1;9788:29:101;;-1:-1:-1;9788:29:101;;;8557:1267;;;;;;;;;:::o;10847:1033::-;-1:-1:-1;;;;;11049:68:101;;;10965:25;11049:68;;;:28;:68;;;;;;10965:25;;;;11049:68;11132:29;;11128:746;;11197:15;11177:35;;11239:4;11226:17;;11128:746;;;11274:21;11298:28;;;;;;;;:::i;:::-;-1:-1:-1;;11298:28:101;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:32:120;;11298:28:101;11639;;637:51:120;11298:28:101;;-1:-1:-1;;;;;;;11536:12:101;11590:4;;610:18:120;11639:28:101;;;;;;;;;;;;11629:39;;;;;;11712:8;11702:19;;;;;;11486:265;;;;;;;;;;-1:-1:-1;;;;;;12284:26:120;;;;12272:39;;12348:2;12344:15;;;;-1:-1:-1;;12340:53:120;12336:1;12327:11;;12320:74;12419:2;12410:12;;12403:28;12456:2;12447:12;;12440:28;12493:2;12484:12;;12061:441;11486:265:101;;;;;;;;;;;;;11447:330;;;;;;11414:385;;11340:491;;11858:5;11845:18;;11260:614;11128:746;11013:867;10847:1033;;;:::o;10348:454::-;10663:57;;-1:-1:-1;;;10663:57:101;;-1:-1:-1;;;;;10700:18:101;655:32:120;;10663:57:101;;;637:51:120;10629:21:101;;10663:28;;;;;;610:18:120;;10663:57:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10736:59:101;;-1:-1:-1;;;;;10736:59:101;;;-1:-1:-1;10736:59:101;;-1:-1:-1;10736:59:101;;;10459:343;10348:454;:::o;1289:576:106:-;1457:1;1419:26;751:20:108;745:27;;618:170;1419:26:106;-1:-1:-1;;;;;1419:40:106;;1411:82;;;;-1:-1:-1;;;1411:82:106;;12709:2:120;1411:82:106;;;12691:21:120;12748:2;12728:18;;;12721:30;12787:31;12767:18;;;12760:59;12836:18;;1411:82:106;12507:353:120;1411:82:106;1557:10;-1:-1:-1;;;;;1543:39:106;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4636:78:101;1524:60:106;1503:142;;;;-1:-1:-1;;;1503:142:106;;13256:2:120;1503:142:106;;;13238:21:120;13295:2;13275:18;;;13268:30;13334:34;13314:18;;;13307:62;-1:-1:-1;;;13385:18:120;;;13378:33;13428:19;;1503:142:106;13054:399:120;1503:142:106;-1:-1:-1;;;;;1676:27:106;;1684:4;1676:27;1655:99;;;;-1:-1:-1;;;1655:99:106;;13660:2:120;1655:99:106;;;13642:21:120;13699:2;13679:18;;;13672:30;13738:27;13718:18;;;13711:55;13783:18;;1655:99:106;13458:349:120;1655:99:106;1764:39;1792:10;988:20:108;964:87;839:228;1764:39:106;1818:40;4636:78:101;1818:40:106;;;13986:25:120;;;-1:-1:-1;;;;;14047:32:120;;14042:2;14027:18;;14020:60;13959:18;1818:40:106;13812:274:120;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;14:151:120:-;-1:-1:-1;;;;;109:31:120;;99:42;;89:70;;155:1;152;145:12;170:295;257:6;310:2;298:9;289:7;285:23;281:32;278:52;;;326:1;323;316:12;278:52;365:9;352:23;384:51;429:5;384:51;:::i;:::-;454:5;170:295;-1:-1:-1;;;170:295:120:o;907:154::-;986:20;;1035:1;1025:12;;1015:40;;1051:1;1048;1041:12;1015:40;907:154;;;:::o;1066:348::-;1118:8;1128:6;1182:3;1175:4;1167:6;1163:17;1159:27;1149:55;;1200:1;1197;1190:12;1149:55;-1:-1:-1;1223:20:120;;1266:18;1255:30;;1252:50;;;1298:1;1295;1288:12;1252:50;1335:4;1327:6;1323:17;1311:29;;1387:3;1380:4;1371:6;1363;1359:19;1355:30;1352:39;1349:59;;;1404:1;1401;1394:12;1349:59;1066:348;;;;;:::o;1419:1009::-;1576:6;1584;1592;1600;1608;1616;1669:3;1657:9;1648:7;1644:23;1640:33;1637:53;;;1686:1;1683;1676:12;1637:53;1725:9;1712:23;1744:51;1789:5;1744:51;:::i;:::-;1814:5;-1:-1:-1;1838:49:120;1883:2;1868:18;;1838:49;:::i;:::-;1828:59;;1938:2;1927:9;1923:18;1910:32;1961:18;2002:2;1994:6;1991:14;1988:34;;;2018:1;2015;2008:12;1988:34;2057:59;2108:7;2099:6;2088:9;2084:22;2057:59;:::i;:::-;2135:8;;-1:-1:-1;2031:85:120;-1:-1:-1;2223:2:120;2208:18;;2195:32;;-1:-1:-1;2239:16:120;;;2236:36;;;2268:1;2265;2258:12;2236:36;;2307:61;2360:7;2349:8;2338:9;2334:24;2307:61;:::i;:::-;1419:1009;;;;-1:-1:-1;1419:1009:120;;-1:-1:-1;1419:1009:120;;2387:8;;1419:1009;-1:-1:-1;;;1419:1009:120:o;3360:650::-;3481:6;3489;3542:2;3530:9;3521:7;3517:23;3513:32;3510:52;;;3558:1;3555;3548:12;3510:52;3598:9;3585:23;3627:18;3668:2;3660:6;3657:14;3654:34;;;3684:1;3681;3674:12;3654:34;3722:6;3711:9;3707:22;3697:32;;3767:7;3760:4;3756:2;3752:13;3748:27;3738:55;;3789:1;3786;3779:12;3738:55;3829:2;3816:16;3855:2;3847:6;3844:14;3841:34;;;3871:1;3868;3861:12;3841:34;3924:7;3919:2;3909:6;3906:1;3902:14;3898:2;3894:23;3890:32;3887:45;3884:65;;;3945:1;3942;3935:12;3884:65;3976:2;3968:11;;;;;3998:6;;-1:-1:-1;3360:650:120;;-1:-1:-1;;;;3360:650:120:o;4015:114::-;4099:4;4092:5;4088:16;4081:5;4078:27;4068:55;;4119:1;4116;4109:12;4134:1134;4285:6;4293;4301;4309;4317;4325;4333;4386:3;4374:9;4365:7;4361:23;4357:33;4354:53;;;4403:1;4400;4393:12;4354:53;4442:9;4429:23;4461:51;4506:5;4461:51;:::i;:::-;4531:5;-1:-1:-1;4588:2:120;4573:18;;4560:32;4601:31;4560:32;4601:31;:::i;:::-;4651:7;-1:-1:-1;4677:49:120;4722:2;4707:18;;4677:49;:::i;:::-;4667:59;;4777:2;4766:9;4762:18;4749:32;4800:18;4841:2;4833:6;4830:14;4827:34;;;4857:1;4854;4847:12;4827:34;4896:59;4947:7;4938:6;4927:9;4923:22;4896:59;:::i;:::-;4974:8;;-1:-1:-1;4870:85:120;-1:-1:-1;5062:3:120;5047:19;;5034:33;;-1:-1:-1;5079:16:120;;;5076:36;;;5108:1;5105;5098:12;5076:36;;5147:61;5200:7;5189:8;5178:9;5174:24;5147:61;:::i;:::-;4134:1134;;;;-1:-1:-1;4134:1134:120;;-1:-1:-1;4134:1134:120;;;;5121:87;;-1:-1:-1;;;4134:1134:120:o;5562:247::-;5630:6;5683:2;5671:9;5662:7;5658:23;5654:32;5651:52;;;5699:1;5696;5689:12;5651:52;5731:9;5725:16;5750:29;5773:5;5750:29;:::i;5814:127::-;5875:10;5870:3;5866:20;5863:1;5856:31;5906:4;5903:1;5896:15;5930:4;5927:1;5920:15;5946:250;6031:1;6041:113;6055:6;6052:1;6049:13;6041:113;;;6131:11;;;6125:18;6112:11;;;6105:39;6077:2;6070:10;6041:113;;;-1:-1:-1;;6188:1:120;6170:16;;6163:27;5946:250::o;6201:897::-;6281:6;6334:2;6322:9;6313:7;6309:23;6305:32;6302:52;;;6350:1;6347;6340:12;6302:52;6383:9;6377:16;6412:18;6453:2;6445:6;6442:14;6439:34;;;6469:1;6466;6459:12;6439:34;6507:6;6496:9;6492:22;6482:32;;6552:7;6545:4;6541:2;6537:13;6533:27;6523:55;;6574:1;6571;6564:12;6523:55;6603:2;6597:9;6625:2;6621;6618:10;6615:36;;;6631:18;;:::i;:::-;6706:2;6700:9;6674:2;6760:13;;-1:-1:-1;;6756:22:120;;;6780:2;6752:31;6748:40;6736:53;;;6804:18;;;6824:22;;;6801:46;6798:72;;;6850:18;;:::i;:::-;6890:10;6886:2;6879:22;6925:2;6917:6;6910:18;6965:7;6960:2;6955;6951;6947:11;6943:20;6940:33;6937:53;;;6986:1;6983;6976:12;6937:53;6999:68;7064:2;7059;7051:6;7047:15;7042:2;7038;7034:11;6999:68;:::i;7103:425::-;-1:-1:-1;;;7349:3:120;7342:21;7324:3;7392:6;7386:13;7408:74;7475:6;7471:1;7466:3;7462:11;7455:4;7447:6;7443:17;7408:74;:::i;:::-;7502:16;;;;7520:1;7498:24;;7103:425;-1:-1:-1;;7103:425:120:o;7533:441::-;7754:3;7792:6;7786:13;7808:66;7867:6;7862:3;7855:4;7847:6;7843:17;7808:66;:::i;:::-;-1:-1:-1;;;7896:16:120;;7921:18;;;-1:-1:-1;7966:1:120;7955:13;;7533:441;-1:-1:-1;7533:441:120:o;7979:271::-;8021:3;8059:5;8053:12;8086:6;8081:3;8074:19;8102:76;8171:6;8164:4;8159:3;8155:14;8148:4;8141:5;8137:16;8102:76;:::i;:::-;8232:2;8211:15;-1:-1:-1;;8207:29:120;8198:39;;;;8239:4;8194:50;;7979:271;-1:-1:-1;;7979:271:120:o;8255:588::-;-1:-1:-1;;;;;8532:32:120;;8514:51;;8613:4;8601:17;;8596:2;8581:18;;8574:45;8655:3;8650:2;8635:18;;8628:31;;;-1:-1:-1;;8682:46:120;;8708:19;;8700:6;8682:46;:::i;:::-;8776:9;8768:6;8764:22;8759:2;8748:9;8744:18;8737:50;8804:33;8830:6;8822;8804:33;:::i;8848:300::-;8947:6;9000:2;8988:9;8979:7;8975:23;8971:32;8968:52;;;9016:1;9013;9006:12;8968:52;9048:9;9042:16;9067:51;9112:5;9067:51;:::i;10654:127::-;10715:10;10710:3;10706:20;10703:1;10696:31;10746:4;10743:1;10736:15;10770:4;10767:1;10760:15;10786:232;10825:3;10846:17;;;10843:140;;10905:10;10900:3;10896:20;10893:1;10886:31;10940:4;10937:1;10930:15;10968:4;10965:1;10958:15;10843:140;-1:-1:-1;11010:1:120;10999:13;;10786:232::o;11023:127::-;11084:10;11079:3;11075:20;11072:1;11065:31;11115:4;11112:1;11105:15;11139:4;11136:1;11129:15;11155:267;11244:6;11239:3;11232:19;11296:6;11289:5;11282:4;11277:3;11273:14;11260:43;-1:-1:-1;11348:1:120;11323:16;;;11341:4;11319:27;;;11312:38;;;;11404:2;11383:15;;;-1:-1:-1;;11379:29:120;11370:39;;;11366:50;;11155:267::o;11427:629::-;-1:-1:-1;;;;;11711:32:120;;11693:51;;11792:4;11780:17;;11775:2;11760:18;;11753:45;11834:3;11829:2;11814:18;;11807:31;;;-1:-1:-1;;11861:63:120;;11904:19;;11896:6;11888;11861:63;:::i;:::-;11972:9;11964:6;11960:22;11955:2;11944:9;11940:18;11933:50;12000;12043:6;12035;12027;12000:50;:::i;:::-;11992:58;11427:629;-1:-1:-1;;;;;;;;;11427:629:120:o;12865:184::-;12935:6;12988:2;12976:9;12967:7;12963:23;12959:32;12956:52;;;13004:1;13001;12994:12;12956:52;-1:-1:-1;13027:16:120;;12865:184;-1:-1:-1;12865:184:120:o",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.8.19;\n\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {\n    ISuperTokenFactory,\n    ISuperToken,\n    IERC20,\n    ERC20WithTokenInfo\n} from \"../interfaces/superfluid/ISuperTokenFactory.sol\";\nimport { ISuperfluid } from \"../interfaces/superfluid/ISuperfluid.sol\";\nimport { UUPSProxy } from \"../upgradability/UUPSProxy.sol\";\nimport { UUPSProxiable } from \"../upgradability/UUPSProxiable.sol\";\nimport { SuperToken } from \"../superfluid/SuperToken.sol\";\nimport { FullUpgradableSuperTokenProxy } from \"./FullUpgradableSuperTokenProxy.sol\";\nimport { ConstantOutflowNFT, IConstantOutflowNFT } from \"../superfluid/ConstantOutflowNFT.sol\";\nimport { ConstantInflowNFT, IConstantInflowNFT } from \"../superfluid/ConstantInflowNFT.sol\";\n\nabstract contract SuperTokenFactoryBase is\n    UUPSProxiable,\n    ISuperTokenFactory\n{\n    struct InitializeData {\n        address underlyingToken;\n        address superToken;\n    }\n\n    /**************************************************************************\n    * Immutable Variables\n    **************************************************************************/\n\n    // solhint-disable-next-line var-name-mixedcase\n    ISuperToken immutable public _SUPER_TOKEN_LOGIC;\n\n    ISuperfluid immutable internal _host;\n\n    // solhint-disable-next-line var-name-mixedcase\n    IConstantOutflowNFT immutable public CONSTANT_OUTFLOW_NFT_LOGIC;\n\n    // solhint-disable-next-line var-name-mixedcase\n    IConstantInflowNFT immutable public CONSTANT_INFLOW_NFT_LOGIC;\n\n    /**************************************************************************\n    * Storage Variables\n    **************************************************************************/\n\n    /* WARNING: NEVER RE-ORDER VARIABLES! Including the base contracts.\n        Always double-check that new\n        variables are added APPEND-ONLY. Re-ordering variables can\n        permanently BREAK the deployed proxy contract. */\n\n    // @dev This is the old SuperToken logic contract that is no longer used\n    // It is kept here for backwards compatibility due to the fact that we cannot\n    // change the storage layout of the contract\n    ISuperToken internal _superTokenLogicDeprecated;\n\n    /// @notice A mapping from underlying token addresses to canonical wrapper super token addresses\n    /// @dev Reasoning: (1) provide backwards compatibility for existing listed wrapper super tokens\n    /// @dev (2) prevent address retrieval issues if we ever choose to modify the bytecode of the UUPSProxy contract\n    /// @dev NOTE: address(0) key points to the NativeAssetSuperToken on the network.\n    mapping(address => address) internal _canonicalWrapperSuperTokens;\n\n    /// NOTE: Whenever modifying the storage layout here it is important to update the validateStorageLayout\n    /// function in its respective mock contract to ensure that it doesn't break anything or lead to unexpected\n    /// behaviors/layout when upgrading\n\n    error SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER();\n\n    constructor(\n        ISuperfluid host,\n        ISuperToken superTokenLogic,\n        IConstantOutflowNFT constantOutflowNFTLogic,\n        IConstantInflowNFT constantInflowNFTLogic\n    ) {\n        _host = host;\n\n        // SuperToken logic is now deployed prior to new factory logic deployment\n        // and passed in as a parameter to SuperTokenFactory constructor\n        _SUPER_TOKEN_LOGIC = superTokenLogic;\n\n        UUPSProxiable(address(_SUPER_TOKEN_LOGIC)).castrate();\n\n        CONSTANT_OUTFLOW_NFT_LOGIC = constantOutflowNFTLogic;\n\n        CONSTANT_INFLOW_NFT_LOGIC = constantInflowNFTLogic;\n\n        // emit SuperTokenLogicCreated event\n        // note that creation here means the setting of the super token logic contract\n        // as the canonical super token logic for the Superfluid framework and not the\n        // actual contract creation\n        emit SuperTokenLogicCreated(_SUPER_TOKEN_LOGIC);\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function getHost()\n       external view\n       override(ISuperTokenFactory)\n       returns(address host)\n    {\n       return address(_host);\n    }\n\n    /**************************************************************************\n    * UUPSProxiable\n    **************************************************************************/\n    /// @inheritdoc ISuperTokenFactory\n    function initialize()\n        external\n        override\n        initializer // OpenZeppelin Initializable\n    // solhint-disable-next-line no-empty-blocks\n    {\n\n    }\n\n    function proxiableUUID() public pure override returns (bytes32) {\n        return keccak256(\"org.superfluid-finance.contracts.SuperTokenFactory.implementation\");\n    }\n\n    /// @notice Updates the logic contract for the SuperTokenFactory\n    /// @dev This function updates the logic contract for the SuperTokenFactory\n    /// @param newAddress the new address of the SuperTokenFactory logic contract\n    function updateCode(address newAddress) external override {\n        if (msg.sender != address(_host)) {\n            revert SUPER_TOKEN_FACTORY_ONLY_HOST();\n        }\n        _updateCodeAddress(newAddress);\n\n        // Upgrade the Flow NFT logic contracts on the canonical proxies\n        // We only do this if the new logic contracts passed in updating the SuperTokenFactory\n        // are different from the current logic contracts\n        if (\n            address(CONSTANT_OUTFLOW_NFT_LOGIC) !=\n            UUPSProxiable(address(_SUPER_TOKEN_LOGIC.CONSTANT_OUTFLOW_NFT()))\n                .getCodeAddress() ||\n            address(CONSTANT_INFLOW_NFT_LOGIC) !=\n            UUPSProxiable(address(_SUPER_TOKEN_LOGIC.CONSTANT_INFLOW_NFT()))\n                .getCodeAddress()\n        ) {\n            UUPSProxiable(address(_SUPER_TOKEN_LOGIC.CONSTANT_OUTFLOW_NFT()))\n                .updateCode(address(CONSTANT_OUTFLOW_NFT_LOGIC));\n            UUPSProxiable(address(_SUPER_TOKEN_LOGIC.CONSTANT_INFLOW_NFT()))\n                .updateCode(address(CONSTANT_INFLOW_NFT_LOGIC));\n        }\n    }\n\n    /**************************************************************************\n    * ISuperTokenFactory\n    **************************************************************************/\n    /// @inheritdoc ISuperTokenFactory\n    function getSuperTokenLogic()\n        external view override\n        returns (ISuperToken)\n    {\n        return _SUPER_TOKEN_LOGIC;\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function createCanonicalERC20Wrapper(ERC20WithTokenInfo _underlyingToken)\n        external\n        returns (ISuperToken)\n    {\n        // we use this to check if we have initialized the _canonicalWrapperSuperTokens mapping\n        // @note we must set this during initialization\n        if (_canonicalWrapperSuperTokens[address(0)] == address(0)) {\n            revert SUPER_TOKEN_FACTORY_UNINITIALIZED();\n        }\n\n        address underlyingTokenAddress = address(_underlyingToken);\n        address canonicalSuperTokenAddress = _canonicalWrapperSuperTokens[\n                underlyingTokenAddress\n            ];\n\n        // if the canonical super token address exists, revert with custom error\n        if (canonicalSuperTokenAddress != address(0)) {\n            revert SUPER_TOKEN_FACTORY_ALREADY_EXISTS();\n        }\n\n        // use create2 to deterministically create the proxy contract for the wrapper super token\n        bytes32 salt = keccak256(abi.encode(underlyingTokenAddress));\n        UUPSProxy proxy = new UUPSProxy{ salt: salt }();\n\n        // NOTE: address(proxy) is equivalent to address(superToken)\n        _canonicalWrapperSuperTokens[underlyingTokenAddress] = address(\n            proxy\n        );\n\n        // set the implementation/logic contract address for the newly deployed proxy\n        proxy.initializeProxy(address(_SUPER_TOKEN_LOGIC));\n\n        // cast it as the same type as the logic contract\n        ISuperToken superToken = ISuperToken(address(proxy));\n\n        // get underlying token info\n        uint8 underlyingDecimals = _underlyingToken.decimals();\n        string memory underlyingName = _underlyingToken.name();\n        string memory underlyingSymbol = _underlyingToken.symbol();\n        // initialize the contract (proxy constructor)\n        superToken.initialize(\n            _underlyingToken,\n            underlyingDecimals,\n            string.concat(\"Super \", underlyingName),\n            string.concat(underlyingSymbol, \"x\")\n        );\n\n        emit SuperTokenCreated(superToken);\n\n        return superToken;\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function createERC20Wrapper(\n        IERC20 underlyingToken,\n        uint8 underlyingDecimals,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        public override\n        returns (ISuperToken superToken)\n    {\n        if (address(underlyingToken) == address(0)) {\n            revert SUPER_TOKEN_FACTORY_ZERO_ADDRESS();\n        }\n\n        if (upgradability == Upgradability.NON_UPGRADABLE) {\n            revert SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED();\n        } else if (upgradability == Upgradability.SEMI_UPGRADABLE) {\n            UUPSProxy proxy = new UUPSProxy();\n            // initialize the wrapper\n            proxy.initializeProxy(address(_SUPER_TOKEN_LOGIC));\n            superToken = ISuperToken(address(proxy));\n        } else /* if (type == Upgradability.FULL_UPGRADABLE) */ {\n            FullUpgradableSuperTokenProxy proxy = new FullUpgradableSuperTokenProxy();\n            proxy.initialize();\n            superToken = ISuperToken(address(proxy));\n        }\n\n        // initialize the token\n        superToken.initialize(\n            underlyingToken,\n            underlyingDecimals,\n            name,\n            symbol\n        );\n\n        emit SuperTokenCreated(superToken);\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function createERC20Wrapper(\n        ERC20WithTokenInfo underlyingToken,\n        Upgradability upgradability,\n        string calldata name,\n        string calldata symbol\n    )\n        external override\n        returns (ISuperToken superToken)\n    {\n        return createERC20Wrapper(\n            underlyingToken,\n            underlyingToken.decimals(),\n            upgradability,\n            name,\n            symbol\n        );\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function initializeCustomSuperToken(\n        address customSuperTokenProxy\n    )\n        external override\n    {\n        // odd solidity stuff..\n        // NOTE payable necessary because UUPSProxy has a payable fallback function\n        address payable a = payable(address(uint160(customSuperTokenProxy)));\n        UUPSProxy(a).initializeProxy(address(_SUPER_TOKEN_LOGIC));\n\n        emit CustomSuperTokenCreated(ISuperToken(customSuperTokenProxy));\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function computeCanonicalERC20WrapperAddress(address _underlyingToken)\n        external\n        view\n        returns (address superTokenAddress, bool isDeployed)\n    {\n        address existingAddress = _canonicalWrapperSuperTokens[\n            _underlyingToken\n        ];\n\n        if (existingAddress != address(0)) {\n            superTokenAddress = existingAddress;\n            isDeployed = true;\n        } else {\n            bytes memory bytecode = type(UUPSProxy).creationCode;\n            superTokenAddress = address(\n                uint160(\n                    uint256(\n                        keccak256(\n                            abi.encodePacked(\n                                bytes1(0xff),\n                                address(this),\n                                keccak256(abi.encode(_underlyingToken)),\n                                keccak256(bytecode)\n                            )\n                        )\n                    )\n                )\n            );\n            isDeployed = false;\n        }\n    }\n\n    /// @inheritdoc ISuperTokenFactory\n    function getCanonicalERC20Wrapper(address _underlyingTokenAddress)\n        external\n        view\n        returns (address superTokenAddress)\n    {\n        superTokenAddress = _canonicalWrapperSuperTokens[\n            _underlyingTokenAddress\n        ];\n    }\n\n    /// @notice Initializes list of canonical wrapper super tokens.\n    /// @dev Note that this should also be kind of a throwaway function which will be executed only once.\n    /// @param _data an array of canonical wrappper super tokens to be set\n    function initializeCanonicalWrapperSuperTokens(\n        InitializeData[] calldata _data\n    ) external virtual  {\n        Ownable gov = Ownable(address(_host.getGovernance()));\n        if (msg.sender != gov.owner()) revert SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER();\n\n        // once the list has been set, it cannot be reset\n        // @note this means that we must set the 0 address (Native Asset Super Token) when we call this the first time\n        if (_canonicalWrapperSuperTokens[address(0)] != address(0)) {\n            revert SUPER_TOKEN_FACTORY_ALREADY_EXISTS();\n        }\n\n        // initialize mapping\n        for (uint256 i = 0; i < _data.length; i++) {\n            _canonicalWrapperSuperTokens[_data[i].underlyingToken] = _data[i]\n                .superToken;\n        }\n    }\n}\n\ncontract SuperTokenFactory is SuperTokenFactoryBase\n{\n    /* WARNING: NEVER RE-ORDER VARIABLES! Including the base contracts.\n        Always double-check that new\n        variables are added APPEND-ONLY. Re-ordering variables can\n        permanently BREAK the deployed proxy contract. */\n\n    constructor(\n        ISuperfluid host,\n        ISuperToken superTokenLogic,\n        IConstantOutflowNFT constantOutflowNFT,\n        IConstantInflowNFT constantInflowNFT\n    )\n        SuperTokenFactoryBase(\n            host,\n            superTokenLogic,\n            constantOutflowNFT,\n            constantInflowNFT\n        )\n    // solhint-disable-next-line no-empty-blocks\n    {\n\n    }\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperTokenFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/superfluid/SuperTokenFactory.sol",
    "exportedSymbols": {
      "ConstantInflowNFT": [
        37855
      ],
      "ConstantOutflowNFT": [
        38245
      ],
      "ERC20WithTokenInfo": [
        25533
      ],
      "FullUpgradableSuperTokenProxy": [
        39163
      ],
      "IConstantInflowNFT": [
        23703
      ],
      "IConstantOutflowNFT": [
        23757
      ],
      "IERC20": [
        1540
      ],
      "ISuperToken": [
        24454
      ],
      "ISuperTokenFactory": [
        24584
      ],
      "ISuperfluid": [
        25106
      ],
      "Ownable": [
        651
      ],
      "SuperToken": [
        40945
      ],
      "SuperTokenFactory": [
        41689
      ],
      "SuperTokenFactoryBase": [
        41664
      ],
      "UUPSProxiable": [
        45966
      ],
      "UUPSProxy": [
        46023
      ]
    },
    "id": 41690,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 40947,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:101"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 40949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 652,
        "src": "60:69:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40948,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 651,
              "src": "69:7:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "file": "../interfaces/superfluid/ISuperTokenFactory.sol",
        "id": 40954,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 24585,
        "src": "130:142:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40950,
              "name": "ISuperTokenFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24584,
              "src": "143:18:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40951,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24454,
              "src": "167:11:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40952,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1540,
              "src": "184:6:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40953,
              "name": "ERC20WithTokenInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25533,
              "src": "196:18:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "../interfaces/superfluid/ISuperfluid.sol",
        "id": 40956,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 25107,
        "src": "273:71:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40955,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25106,
              "src": "282:11:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxy.sol",
        "file": "../upgradability/UUPSProxy.sol",
        "id": 40958,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 46024,
        "src": "345:59:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40957,
              "name": "UUPSProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46023,
              "src": "354:9:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxiable.sol",
        "file": "../upgradability/UUPSProxiable.sol",
        "id": 40960,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 45967,
        "src": "405:67:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40959,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45966,
              "src": "414:13:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/SuperToken.sol",
        "file": "../superfluid/SuperToken.sol",
        "id": 40962,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 40946,
        "src": "473:58:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40961,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40945,
              "src": "482:10:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/FullUpgradableSuperTokenProxy.sol",
        "file": "./FullUpgradableSuperTokenProxy.sol",
        "id": 40964,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 39164,
        "src": "532:84:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40963,
              "name": "FullUpgradableSuperTokenProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39163,
              "src": "541:29:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/ConstantOutflowNFT.sol",
        "file": "../superfluid/ConstantOutflowNFT.sol",
        "id": 40967,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 38246,
        "src": "617:95:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40965,
              "name": "ConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38245,
              "src": "626:18:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40966,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23757,
              "src": "646:19:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/ConstantInflowNFT.sol",
        "file": "../superfluid/ConstantInflowNFT.sol",
        "id": 40970,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 41690,
        "sourceUnit": 37856,
        "src": "713:92:101",
        "symbolAliases": [
          {
            "foreign": {
              "id": 40968,
              "name": "ConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37855,
              "src": "722:17:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 40969,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23703,
              "src": "741:18:101",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 40971,
              "name": "UUPSProxiable",
              "nameLocations": [
                "854:13:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45966,
              "src": "854:13:101"
            },
            "id": 40972,
            "nodeType": "InheritanceSpecifier",
            "src": "854:13:101"
          },
          {
            "baseName": {
              "id": 40973,
              "name": "ISuperTokenFactory",
              "nameLocations": [
                "873:18:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24584,
              "src": "873:18:101"
            },
            "id": 40974,
            "nodeType": "InheritanceSpecifier",
            "src": "873:18:101"
          }
        ],
        "canonicalName": "SuperTokenFactoryBase",
        "contractDependencies": [
          39163,
          46023
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 41664,
        "linearizedBaseContracts": [
          41664,
          24584,
          45966,
          875
        ],
        "name": "SuperTokenFactoryBase",
        "nameLocation": "825:21:101",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SuperTokenFactoryBase.InitializeData",
            "id": 40979,
            "members": [
              {
                "constant": false,
                "id": 40976,
                "mutability": "mutable",
                "name": "underlyingToken",
                "nameLocation": "938:15:101",
                "nodeType": "VariableDeclaration",
                "scope": 40979,
                "src": "930:23:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 40975,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "930:7:101",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40978,
                "mutability": "mutable",
                "name": "superToken",
                "nameLocation": "971:10:101",
                "nodeType": "VariableDeclaration",
                "scope": 40979,
                "src": "963:18:101",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 40977,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "963:7:101",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "InitializeData",
            "nameLocation": "905:14:101",
            "nodeType": "StructDefinition",
            "scope": 41664,
            "src": "898:90:101",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cbf927b3",
            "id": 40982,
            "mutability": "immutable",
            "name": "_SUPER_TOKEN_LOGIC",
            "nameLocation": "1262:18:101",
            "nodeType": "VariableDeclaration",
            "scope": 41664,
            "src": "1233:47:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperToken_$24454",
              "typeString": "contract ISuperToken"
            },
            "typeName": {
              "id": 40981,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40980,
                "name": "ISuperToken",
                "nameLocations": [
                  "1233:11:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24454,
                "src": "1233:11:101"
              },
              "referencedDeclaration": 24454,
              "src": "1233:11:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$24454",
                "typeString": "contract ISuperToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40985,
            "mutability": "immutable",
            "name": "_host",
            "nameLocation": "1318:5:101",
            "nodeType": "VariableDeclaration",
            "scope": 41664,
            "src": "1287:36:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperfluid_$25106",
              "typeString": "contract ISuperfluid"
            },
            "typeName": {
              "id": 40984,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40983,
                "name": "ISuperfluid",
                "nameLocations": [
                  "1287:11:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25106,
                "src": "1287:11:101"
              },
              "referencedDeclaration": 25106,
              "src": "1287:11:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                "typeString": "contract ISuperfluid"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "5365d19f",
            "id": 40988,
            "mutability": "immutable",
            "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
            "nameLocation": "1419:26:101",
            "nodeType": "VariableDeclaration",
            "scope": 41664,
            "src": "1382:63:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
              "typeString": "contract IConstantOutflowNFT"
            },
            "typeName": {
              "id": 40987,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40986,
                "name": "IConstantOutflowNFT",
                "nameLocations": [
                  "1382:19:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23757,
                "src": "1382:19:101"
              },
              "referencedDeclaration": 23757,
              "src": "1382:19:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                "typeString": "contract IConstantOutflowNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5a7792df",
            "id": 40991,
            "mutability": "immutable",
            "name": "CONSTANT_INFLOW_NFT_LOGIC",
            "nameLocation": "1540:25:101",
            "nodeType": "VariableDeclaration",
            "scope": 41664,
            "src": "1504:61:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
              "typeString": "contract IConstantInflowNFT"
            },
            "typeName": {
              "id": 40990,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40989,
                "name": "IConstantInflowNFT",
                "nameLocations": [
                  "1504:18:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 23703,
                "src": "1504:18:101"
              },
              "referencedDeclaration": 23703,
              "src": "1504:18:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                "typeString": "contract IConstantInflowNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 40994,
            "mutability": "mutable",
            "name": "_superTokenLogicDeprecated",
            "nameLocation": "2221:26:101",
            "nodeType": "VariableDeclaration",
            "scope": 41664,
            "src": "2200:47:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperToken_$24454",
              "typeString": "contract ISuperToken"
            },
            "typeName": {
              "id": 40993,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40992,
                "name": "ISuperToken",
                "nameLocations": [
                  "2200:11:101"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24454,
                "src": "2200:11:101"
              },
              "referencedDeclaration": 24454,
              "src": "2200:11:101",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$24454",
                "typeString": "contract ISuperToken"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 40995,
              "nodeType": "StructuredDocumentation",
              "src": "2254:400:101",
              "text": "@notice A mapping from underlying token addresses to canonical wrapper super token addresses\n @dev Reasoning: (1) provide backwards compatibility for existing listed wrapper super tokens\n @dev (2) prevent address retrieval issues if we ever choose to modify the bytecode of the UUPSProxy contract\n @dev NOTE: address(0) key points to the NativeAssetSuperToken on the network."
            },
            "id": 40999,
            "mutability": "mutable",
            "name": "_canonicalWrapperSuperTokens",
            "nameLocation": "2696:28:101",
            "nodeType": "VariableDeclaration",
            "scope": 41664,
            "src": "2659:65:101",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 40998,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 40996,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2667:7:101",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2659:27:101",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 40997,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2678:7:101",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 41000,
              "nodeType": "StructuredDocumentation",
              "src": "2731:257:101",
              "text": "NOTE: Whenever modifying the storage layout here it is important to update the validateStorageLayout\n function in its respective mock contract to ensure that it doesn't break anything or lead to unexpected\n behaviors/layout when upgrading"
            },
            "errorSelector": "afca98cc",
            "id": 41002,
            "name": "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER",
            "nameLocation": "2999:41:101",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 41001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3040:2:101"
            },
            "src": "2993:50:101"
          },
          {
            "body": {
              "id": 41046,
              "nodeType": "Block",
              "src": "3234:732:101",
              "statements": [
                {
                  "expression": {
                    "id": 41019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41017,
                      "name": "_host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40985,
                      "src": "3244:5:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41018,
                      "name": "host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41005,
                      "src": "3252:4:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                        "typeString": "contract ISuperfluid"
                      }
                    },
                    "src": "3244:12:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "id": 41020,
                  "nodeType": "ExpressionStatement",
                  "src": "3244:12:101"
                },
                {
                  "expression": {
                    "id": 41023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41021,
                      "name": "_SUPER_TOKEN_LOGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40982,
                      "src": "3422:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$24454",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41022,
                      "name": "superTokenLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41008,
                      "src": "3443:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$24454",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "src": "3422:36:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "id": 41024,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:36:101"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41028,
                                "name": "_SUPER_TOKEN_LOGIC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40982,
                                "src": "3491:18:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                  "typeString": "contract ISuperToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                  "typeString": "contract ISuperToken"
                                }
                              ],
                              "id": 41027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3483:7:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41026,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3483:7:101",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3483:27:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 41025,
                          "name": "UUPSProxiable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45966,
                          "src": "3469:13:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$45966_$",
                            "typeString": "type(contract UUPSProxiable)"
                          }
                        },
                        "id": 41030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3469:42:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxiable_$45966",
                          "typeString": "contract UUPSProxiable"
                        }
                      },
                      "id": 41031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3512:8:101",
                      "memberName": "castrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45900,
                      "src": "3469:51:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 41032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3469:53:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41033,
                  "nodeType": "ExpressionStatement",
                  "src": "3469:53:101"
                },
                {
                  "expression": {
                    "id": 41036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41034,
                      "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40988,
                      "src": "3533:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                        "typeString": "contract IConstantOutflowNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41035,
                      "name": "constantOutflowNFTLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41011,
                      "src": "3562:23:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                        "typeString": "contract IConstantOutflowNFT"
                      }
                    },
                    "src": "3533:52:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "id": 41037,
                  "nodeType": "ExpressionStatement",
                  "src": "3533:52:101"
                },
                {
                  "expression": {
                    "id": 41040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41038,
                      "name": "CONSTANT_INFLOW_NFT_LOGIC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40991,
                      "src": "3596:25:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                        "typeString": "contract IConstantInflowNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41039,
                      "name": "constantInflowNFTLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41014,
                      "src": "3624:22:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                        "typeString": "contract IConstantInflowNFT"
                      }
                    },
                    "src": "3596:50:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "id": 41041,
                  "nodeType": "ExpressionStatement",
                  "src": "3596:50:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 41043,
                        "name": "_SUPER_TOKEN_LOGIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40982,
                        "src": "3940:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 41042,
                      "name": "SuperTokenLogicCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24571,
                      "src": "3917:22:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ISuperToken_$24454_$returns$__$",
                        "typeString": "function (contract ISuperToken)"
                      }
                    },
                    "id": 41044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3917:42:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41045,
                  "nodeType": "EmitStatement",
                  "src": "3912:47:101"
                }
              ]
            },
            "id": 41047,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41005,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "3082:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41047,
                  "src": "3070:16:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 41004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41003,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "3070:11:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25106,
                      "src": "3070:11:101"
                    },
                    "referencedDeclaration": 25106,
                    "src": "3070:11:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41008,
                  "mutability": "mutable",
                  "name": "superTokenLogic",
                  "nameLocation": "3108:15:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41047,
                  "src": "3096:27:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24454",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 41007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41006,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "3096:11:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24454,
                      "src": "3096:11:101"
                    },
                    "referencedDeclaration": 24454,
                    "src": "3096:11:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41011,
                  "mutability": "mutable",
                  "name": "constantOutflowNFTLogic",
                  "nameLocation": "3153:23:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41047,
                  "src": "3133:43:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 41010,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41009,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "3133:19:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23757,
                      "src": "3133:19:101"
                    },
                    "referencedDeclaration": 23757,
                    "src": "3133:19:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41014,
                  "mutability": "mutable",
                  "name": "constantInflowNFTLogic",
                  "nameLocation": "3205:22:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41047,
                  "src": "3186:41:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 41013,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41012,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "3186:18:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23703,
                      "src": "3186:18:101"
                    },
                    "referencedDeclaration": 23703,
                    "src": "3186:18:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3060:173:101"
            },
            "returnParameters": {
              "id": 41016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3234:0:101"
            },
            "scope": 41664,
            "src": "3049:917:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              24480
            ],
            "body": {
              "id": 41060,
              "nodeType": "Block",
              "src": "4120:37:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41057,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40985,
                        "src": "4144:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                          "typeString": "contract ISuperfluid"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                          "typeString": "contract ISuperfluid"
                        }
                      ],
                      "id": 41056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4136:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 41055,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4136:7:101",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 41058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4136:14:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 41054,
                  "id": 41059,
                  "nodeType": "Return",
                  "src": "4129:21:101"
                }
              ]
            },
            "documentation": {
              "id": 41048,
              "nodeType": "StructuredDocumentation",
              "src": "3972:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "20bc4425",
            "id": 41061,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getHost",
            "nameLocation": "4020:7:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 41051,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 41050,
                  "name": "ISuperTokenFactory",
                  "nameLocations": [
                    "4067:18:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24584,
                  "src": "4067:18:101"
                }
              ],
              "src": "4058:28:101"
            },
            "parameters": {
              "id": 41049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4027:2:101"
            },
            "returnParameters": {
              "id": 41054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41053,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "4110:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41061,
                  "src": "4102:12:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4102:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4101:14:101"
            },
            "scope": 41664,
            "src": "4011:146:101",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24484
            ],
            "body": {
              "id": 41068,
              "nodeType": "Block",
              "src": "4541:8:101",
              "statements": []
            },
            "documentation": {
              "id": 41062,
              "nodeType": "StructuredDocumentation",
              "src": "4343:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "8129fc1c",
            "id": 41069,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41066,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41065,
                  "name": "initializer",
                  "nameLocations": [
                    "4446:11:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 777,
                  "src": "4446:11:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "4446:11:101"
              }
            ],
            "name": "initialize",
            "nameLocation": "4391:10:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 41064,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4429:8:101"
            },
            "parameters": {
              "id": 41063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4401:2:101"
            },
            "returnParameters": {
              "id": 41067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4541:0:101"
            },
            "scope": 41664,
            "src": "4382:167:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              45906
            ],
            "body": {
              "id": 41079,
              "nodeType": "Block",
              "src": "4619:102:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e5375706572546f6b656e466163746f72792e696d706c656d656e746174696f6e",
                        "id": 41076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4646:67:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperTokenFactory.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.SuperTokenFactory.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperTokenFactory.implementation\""
                        }
                      ],
                      "id": 41075,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "4636:9:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 41077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:78:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 41074,
                  "id": 41078,
                  "nodeType": "Return",
                  "src": "4629:85:101"
                }
              ]
            },
            "functionSelector": "52d1902d",
            "id": 41080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "4564:13:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 41071,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4592:8:101"
            },
            "parameters": {
              "id": 41070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4577:2:101"
            },
            "returnParameters": {
              "id": 41074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41080,
                  "src": "4610:7:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 41072,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4610:7:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4609:9:101"
            },
            "scope": 41664,
            "src": "4555:166:101",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              45894
            ],
            "body": {
              "id": 41166,
              "nodeType": "Block",
              "src": "5016:1028:101",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 41093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 41087,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5030:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 41088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5034:6:101",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5030:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 41091,
                          "name": "_host",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40985,
                          "src": "5052:5:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                            "typeString": "contract ISuperfluid"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                            "typeString": "contract ISuperfluid"
                          }
                        ],
                        "id": 41090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5044:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41089,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5044:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5044:14:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5030:28:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41098,
                  "nodeType": "IfStatement",
                  "src": "5026:97:101",
                  "trueBody": {
                    "id": 41097,
                    "nodeType": "Block",
                    "src": "5060:63:101",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41094,
                            "name": "SUPER_TOKEN_FACTORY_ONLY_HOST",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24470,
                            "src": "5081:29:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 41095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5081:31:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41096,
                        "nodeType": "RevertStatement",
                        "src": "5074:38:101"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41100,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41083,
                        "src": "5151:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41099,
                      "name": "_updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45959,
                      "src": "5132:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 41101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:30:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41102,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:30:101"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 41133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 41117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 41105,
                            "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40988,
                            "src": "5424:26:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                              "typeString": "contract IConstantOutflowNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                              "typeString": "contract IConstantOutflowNFT"
                            }
                          ],
                          "id": 41104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5416:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41103,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5416:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5416:35:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 41110,
                                        "name": "_SUPER_TOKEN_LOGIC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40982,
                                        "src": "5489:18:101",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                          "typeString": "contract ISuperToken"
                                        }
                                      },
                                      "id": 41111,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5508:20:101",
                                      "memberName": "CONSTANT_OUTFLOW_NFT",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 24056,
                                      "src": "5489:39:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantOutflowNFT_$23757_$",
                                        "typeString": "function () view external returns (contract IConstantOutflowNFT)"
                                      }
                                    },
                                    "id": 41112,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5489:41:101",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                                      "typeString": "contract IConstantOutflowNFT"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                                      "typeString": "contract IConstantOutflowNFT"
                                    }
                                  ],
                                  "id": 41109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5481:7:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 41108,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5481:7:101",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 41113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5481:50:101",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 41107,
                              "name": "UUPSProxiable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45966,
                              "src": "5467:13:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$45966_$",
                                "typeString": "type(contract UUPSProxiable)"
                              }
                            },
                            "id": 41114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5467:65:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UUPSProxiable_$45966",
                              "typeString": "contract UUPSProxiable"
                            }
                          },
                          "id": 41115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5550:14:101",
                          "memberName": "getCodeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45889,
                          "src": "5467:97:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 41116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5467:99:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5416:150:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 41132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 41120,
                            "name": "CONSTANT_INFLOW_NFT_LOGIC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40991,
                            "src": "5590:25:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                              "typeString": "contract IConstantInflowNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                              "typeString": "contract IConstantInflowNFT"
                            }
                          ],
                          "id": 41119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5582:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41118,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5582:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5582:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 41125,
                                        "name": "_SUPER_TOKEN_LOGIC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40982,
                                        "src": "5654:18:101",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                          "typeString": "contract ISuperToken"
                                        }
                                      },
                                      "id": 41126,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5673:19:101",
                                      "memberName": "CONSTANT_INFLOW_NFT",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 24062,
                                      "src": "5654:38:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantInflowNFT_$23703_$",
                                        "typeString": "function () view external returns (contract IConstantInflowNFT)"
                                      }
                                    },
                                    "id": 41127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5654:40:101",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                                      "typeString": "contract IConstantInflowNFT"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                                      "typeString": "contract IConstantInflowNFT"
                                    }
                                  ],
                                  "id": 41124,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5646:7:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 41123,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5646:7:101",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 41128,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5646:49:101",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 41122,
                              "name": "UUPSProxiable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45966,
                              "src": "5632:13:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$45966_$",
                                "typeString": "type(contract UUPSProxiable)"
                              }
                            },
                            "id": 41129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5632:64:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UUPSProxiable_$45966",
                              "typeString": "contract UUPSProxiable"
                            }
                          },
                          "id": 41130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5714:14:101",
                          "memberName": "getCodeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 45889,
                          "src": "5632:96:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 41131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5632:98:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5582:148:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5416:314:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41165,
                  "nodeType": "IfStatement",
                  "src": "5399:639:101",
                  "trueBody": {
                    "id": 41164,
                    "nodeType": "Block",
                    "src": "5741:297:101",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 41145,
                                  "name": "CONSTANT_OUTFLOW_NFT_LOGIC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40988,
                                  "src": "5857:26:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                                    "typeString": "contract IConstantOutflowNFT"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                                    "typeString": "contract IConstantOutflowNFT"
                                  }
                                ],
                                "id": 41144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5849:7:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 41143,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5849:7:101",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 41146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5849:35:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 41137,
                                          "name": "_SUPER_TOKEN_LOGIC",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40982,
                                          "src": "5777:18:101",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                            "typeString": "contract ISuperToken"
                                          }
                                        },
                                        "id": 41138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5796:20:101",
                                        "memberName": "CONSTANT_OUTFLOW_NFT",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 24056,
                                        "src": "5777:39:101",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantOutflowNFT_$23757_$",
                                          "typeString": "function () view external returns (contract IConstantOutflowNFT)"
                                        }
                                      },
                                      "id": 41139,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5777:41:101",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                                        "typeString": "contract IConstantOutflowNFT"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                                        "typeString": "contract IConstantOutflowNFT"
                                      }
                                    ],
                                    "id": 41136,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5769:7:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 41135,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5769:7:101",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 41140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5769:50:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 41134,
                                "name": "UUPSProxiable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45966,
                                "src": "5755:13:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$45966_$",
                                  "typeString": "type(contract UUPSProxiable)"
                                }
                              },
                              "id": 41141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5755:65:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSProxiable_$45966",
                                "typeString": "contract UUPSProxiable"
                              }
                            },
                            "id": 41142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5838:10:101",
                            "memberName": "updateCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45894,
                            "src": "5755:93:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 41147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5755:130:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41148,
                        "nodeType": "ExpressionStatement",
                        "src": "5755:130:101"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 41160,
                                  "name": "CONSTANT_INFLOW_NFT_LOGIC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40991,
                                  "src": "6000:25:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                                    "typeString": "contract IConstantInflowNFT"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                                    "typeString": "contract IConstantInflowNFT"
                                  }
                                ],
                                "id": 41159,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5992:7:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 41158,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5992:7:101",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 41161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5992:34:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 41152,
                                          "name": "_SUPER_TOKEN_LOGIC",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40982,
                                          "src": "5921:18:101",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                            "typeString": "contract ISuperToken"
                                          }
                                        },
                                        "id": 41153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5940:19:101",
                                        "memberName": "CONSTANT_INFLOW_NFT",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 24062,
                                        "src": "5921:38:101",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantInflowNFT_$23703_$",
                                          "typeString": "function () view external returns (contract IConstantInflowNFT)"
                                        }
                                      },
                                      "id": 41154,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5921:40:101",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                                        "typeString": "contract IConstantInflowNFT"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                                        "typeString": "contract IConstantInflowNFT"
                                      }
                                    ],
                                    "id": 41151,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5913:7:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 41150,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5913:7:101",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 41155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5913:49:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 41149,
                                "name": "UUPSProxiable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45966,
                                "src": "5899:13:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$45966_$",
                                  "typeString": "type(contract UUPSProxiable)"
                                }
                              },
                              "id": 41156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5899:64:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSProxiable_$45966",
                                "typeString": "contract UUPSProxiable"
                              }
                            },
                            "id": 41157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5981:10:101",
                            "memberName": "updateCode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 45894,
                            "src": "5899:92:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 41162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5899:128:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41163,
                        "nodeType": "ExpressionStatement",
                        "src": "5899:128:101"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 41081,
              "nodeType": "StructuredDocumentation",
              "src": "4727:226:101",
              "text": "@notice Updates the logic contract for the SuperTokenFactory\n @dev This function updates the logic contract for the SuperTokenFactory\n @param newAddress the new address of the SuperTokenFactory logic contract"
            },
            "functionSelector": "46951954",
            "id": 41167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCode",
            "nameLocation": "4967:10:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 41085,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5007:8:101"
            },
            "parameters": {
              "id": 41084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41083,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "4986:10:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41167,
                  "src": "4978:18:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4977:20:101"
            },
            "returnParameters": {
              "id": 41086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5016:0:101"
            },
            "scope": 41664,
            "src": "4958:1086:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24491
            ],
            "body": {
              "id": 41177,
              "nodeType": "Block",
              "src": "6369:42:101",
              "statements": [
                {
                  "expression": {
                    "id": 41175,
                    "name": "_SUPER_TOKEN_LOGIC",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40982,
                    "src": "6386:18:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "functionReturnParameters": 41174,
                  "id": 41176,
                  "nodeType": "Return",
                  "src": "6379:25:101"
                }
              ]
            },
            "documentation": {
              "id": 41168,
              "nodeType": "StructuredDocumentation",
              "src": "6235:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "9470a5b2",
            "id": 41178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSuperTokenLogic",
            "nameLocation": "6283:18:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 41170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6326:8:101"
            },
            "parameters": {
              "id": 41169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6301:2:101"
            },
            "returnParameters": {
              "id": 41174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41173,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41178,
                  "src": "6352:11:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24454",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 41172,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41171,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "6352:11:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24454,
                      "src": "6352:11:101"
                    },
                    "referencedDeclaration": 24454,
                    "src": "6352:11:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6351:13:101"
            },
            "scope": 41664,
            "src": "6274:137:101",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24541
            ],
            "body": {
              "id": 41318,
              "nodeType": "Block",
              "src": "6581:1931:101",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 41198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 41188,
                        "name": "_canonicalWrapperSuperTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40999,
                        "src": "6747:28:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 41193,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 41191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6784:1:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 41190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6776:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41189,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6776:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6776:10:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6747:40:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 41196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6799:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 41195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6791:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6791:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6791:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6747:54:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41203,
                  "nodeType": "IfStatement",
                  "src": "6743:127:101",
                  "trueBody": {
                    "id": 41202,
                    "nodeType": "Block",
                    "src": "6803:67:101",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41199,
                            "name": "SUPER_TOKEN_FACTORY_UNINITIALIZED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24468,
                            "src": "6824:33:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 41200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6824:35:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41201,
                        "nodeType": "RevertStatement",
                        "src": "6817:42:101"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    41205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41205,
                      "mutability": "mutable",
                      "name": "underlyingTokenAddress",
                      "nameLocation": "6888:22:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41318,
                      "src": "6880:30:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41204,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6880:7:101",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41210,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41208,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41182,
                        "src": "6921:16:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      ],
                      "id": 41207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6913:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 41206,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6913:7:101",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 41209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6913:25:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6880:58:101"
                },
                {
                  "assignments": [
                    41212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41212,
                      "mutability": "mutable",
                      "name": "canonicalSuperTokenAddress",
                      "nameLocation": "6956:26:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41318,
                      "src": "6948:34:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41211,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6948:7:101",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41216,
                  "initialValue": {
                    "baseExpression": {
                      "id": 41213,
                      "name": "_canonicalWrapperSuperTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40999,
                      "src": "6985:28:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 41215,
                    "indexExpression": {
                      "id": 41214,
                      "name": "underlyingTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41205,
                      "src": "7031:22:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6985:82:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6948:119:101"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 41222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41217,
                      "name": "canonicalSuperTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41212,
                      "src": "7163:26:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 41220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7201:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 41219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7193:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7193:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7193:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7163:40:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41227,
                  "nodeType": "IfStatement",
                  "src": "7159:114:101",
                  "trueBody": {
                    "id": 41226,
                    "nodeType": "Block",
                    "src": "7205:68:101",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41223,
                            "name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24464,
                            "src": "7226:34:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 41224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7226:36:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41225,
                        "nodeType": "RevertStatement",
                        "src": "7219:43:101"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    41229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41229,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "7389:4:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41318,
                      "src": "7381:12:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 41228,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7381:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41236,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41233,
                            "name": "underlyingTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41205,
                            "src": "7417:22:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 41231,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "7406:3:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 41232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7410:6:101",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7406:10:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 41234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7406:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 41230,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "7396:9:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 41235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7396:45:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7381:60:101"
                },
                {
                  "assignments": [
                    41239
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41239,
                      "mutability": "mutable",
                      "name": "proxy",
                      "nameLocation": "7461:5:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41318,
                      "src": "7451:15:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                        "typeString": "contract UUPSProxy"
                      },
                      "typeName": {
                        "id": 41238,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41237,
                          "name": "UUPSProxy",
                          "nameLocations": [
                            "7451:9:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46023,
                          "src": "7451:9:101"
                        },
                        "referencedDeclaration": 46023,
                        "src": "7451:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41246,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7469:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$46023_$",
                          "typeString": "function () returns (contract UUPSProxy)"
                        },
                        "typeName": {
                          "id": 41241,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41240,
                            "name": "UUPSProxy",
                            "nameLocations": [
                              "7473:9:101"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 46023,
                            "src": "7473:9:101"
                          },
                          "referencedDeclaration": 46023,
                          "src": "7473:9:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                            "typeString": "contract UUPSProxy"
                          }
                        }
                      },
                      "id": 41244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "salt"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 41243,
                          "name": "salt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41229,
                          "src": "7490:4:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "src": "7469:27:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$46023_$salt",
                        "typeString": "function () returns (contract UUPSProxy)"
                      }
                    },
                    "id": 41245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7469:29:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                      "typeString": "contract UUPSProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7451:47:101"
                },
                {
                  "expression": {
                    "id": 41254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41247,
                        "name": "_canonicalWrapperSuperTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40999,
                        "src": "7578:28:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 41249,
                      "indexExpression": {
                        "id": 41248,
                        "name": "underlyingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41205,
                        "src": "7607:22:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7578:52:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 41252,
                          "name": "proxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41239,
                          "src": "7654:5:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                            "typeString": "contract UUPSProxy"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                            "typeString": "contract UUPSProxy"
                          }
                        ],
                        "id": 41251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7633:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41250,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7633:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7633:36:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7578:91:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41255,
                  "nodeType": "ExpressionStatement",
                  "src": "7578:91:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41261,
                            "name": "_SUPER_TOKEN_LOGIC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40982,
                            "src": "7796:18:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$24454",
                              "typeString": "contract ISuperToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$24454",
                              "typeString": "contract ISuperToken"
                            }
                          ],
                          "id": 41260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7788:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7788:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7788:27:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41256,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41239,
                        "src": "7766:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "id": 41258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7772:15:101",
                      "memberName": "initializeProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46010,
                      "src": "7766:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7766:50:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41264,
                  "nodeType": "ExpressionStatement",
                  "src": "7766:50:101"
                },
                {
                  "assignments": [
                    41267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41267,
                      "mutability": "mutable",
                      "name": "superToken",
                      "nameLocation": "7897:10:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41318,
                      "src": "7885:22:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$24454",
                        "typeString": "contract ISuperToken"
                      },
                      "typeName": {
                        "id": 41266,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41265,
                          "name": "ISuperToken",
                          "nameLocations": [
                            "7885:11:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24454,
                          "src": "7885:11:101"
                        },
                        "referencedDeclaration": 24454,
                        "src": "7885:11:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41274,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41271,
                            "name": "proxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41239,
                            "src": "7930:5:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                              "typeString": "contract UUPSProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                              "typeString": "contract UUPSProxy"
                            }
                          ],
                          "id": 41270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7922:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41269,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7922:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7922:14:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41268,
                      "name": "ISuperToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24454,
                      "src": "7910:11:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ISuperToken_$24454_$",
                        "typeString": "type(contract ISuperToken)"
                      }
                    },
                    "id": 41273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7910:27:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7885:52:101"
                },
                {
                  "assignments": [
                    41276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41276,
                      "mutability": "mutable",
                      "name": "underlyingDecimals",
                      "nameLocation": "7991:18:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41318,
                      "src": "7985:24:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 41275,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "7985:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41280,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41277,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41182,
                        "src": "8012:16:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      "id": 41278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8029:8:101",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25600,
                      "src": "8012:25:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 41279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8012:27:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7985:54:101"
                },
                {
                  "assignments": [
                    41282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41282,
                      "mutability": "mutable",
                      "name": "underlyingName",
                      "nameLocation": "8063:14:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41318,
                      "src": "8049:28:101",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 41281,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8049:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41286,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41283,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41182,
                        "src": "8080:16:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      "id": 41284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8097:4:101",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25588,
                      "src": "8080:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 41285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8080:23:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8049:54:101"
                },
                {
                  "assignments": [
                    41288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41288,
                      "mutability": "mutable",
                      "name": "underlyingSymbol",
                      "nameLocation": "8127:16:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41318,
                      "src": "8113:30:101",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 41287,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "8113:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41292,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41289,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41182,
                        "src": "8146:16:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      "id": 41290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8163:6:101",
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25594,
                      "src": "8146:23:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view external returns (string memory)"
                      }
                    },
                    "id": 41291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8146:25:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8113:58:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41296,
                        "name": "_underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41182,
                        "src": "8271:16:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      {
                        "id": 41297,
                        "name": "underlyingDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41276,
                        "src": "8301:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "537570657220",
                            "id": 41301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8347:8:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ebd27962ce5590c269f1456623323f17a34c644eb379ed98ba3fc280518c503d",
                              "typeString": "literal_string \"Super \""
                            },
                            "value": "Super "
                          },
                          {
                            "id": 41302,
                            "name": "underlyingName",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41282,
                            "src": "8357:14:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ebd27962ce5590c269f1456623323f17a34c644eb379ed98ba3fc280518c503d",
                              "typeString": "literal_string \"Super \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 41299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8333:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 41298,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "8333:6:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8340:6:101",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "8333:13:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 41303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8333:39:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41307,
                            "name": "underlyingSymbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41288,
                            "src": "8400:16:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "78",
                            "id": 41308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8418:3:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                              "typeString": "literal_string \"x\""
                            },
                            "value": "x"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                              "typeString": "literal_string \"x\""
                            }
                          ],
                          "expression": {
                            "id": 41305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8386:6:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 41304,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "8386:6:101",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8393:6:101",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "8386:13:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 41309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8386:36:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 41293,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41267,
                        "src": "8236:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 41295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8247:10:101",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24050,
                      "src": "8236:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$1540_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 41310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8236:196:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41311,
                  "nodeType": "ExpressionStatement",
                  "src": "8236:196:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 41313,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41267,
                        "src": "8466:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 41312,
                      "name": "SuperTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24577,
                      "src": "8448:17:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ISuperToken_$24454_$returns$__$",
                        "typeString": "function (contract ISuperToken)"
                      }
                    },
                    "id": 41314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8448:29:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41315,
                  "nodeType": "EmitStatement",
                  "src": "8443:34:101"
                },
                {
                  "expression": {
                    "id": 41316,
                    "name": "superToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41267,
                    "src": "8495:10:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "functionReturnParameters": 41187,
                  "id": 41317,
                  "nodeType": "Return",
                  "src": "8488:17:101"
                }
              ]
            },
            "documentation": {
              "id": 41179,
              "nodeType": "StructuredDocumentation",
              "src": "6417:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "151188dc",
            "id": 41319,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCanonicalERC20Wrapper",
            "nameLocation": "6465:27:101",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41182,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "6512:16:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41319,
                  "src": "6493:35:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                    "typeString": "contract ERC20WithTokenInfo"
                  },
                  "typeName": {
                    "id": 41181,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41180,
                      "name": "ERC20WithTokenInfo",
                      "nameLocations": [
                        "6493:18:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25533,
                      "src": "6493:18:101"
                    },
                    "referencedDeclaration": 25533,
                    "src": "6493:18:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                      "typeString": "contract ERC20WithTokenInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6492:37:101"
            },
            "returnParameters": {
              "id": 41187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41319,
                  "src": "6564:11:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24454",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 41185,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41184,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "6564:11:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24454,
                      "src": "6564:11:101"
                    },
                    "referencedDeclaration": 24454,
                    "src": "6564:11:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6563:13:101"
            },
            "scope": 41664,
            "src": "6456:2056:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24514
            ],
            "body": {
              "id": 41430,
              "nodeType": "Block",
              "src": "8825:999:101",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 41347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 41341,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41323,
                          "src": "8847:15:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1540",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$1540",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 41340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8839:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8839:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8839:24:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 41345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8875:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 41344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8867:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41343,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8867:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8867:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8839:38:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41352,
                  "nodeType": "IfStatement",
                  "src": "8835:110:101",
                  "trueBody": {
                    "id": 41351,
                    "nodeType": "Block",
                    "src": "8879:66:101",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41348,
                            "name": "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24474,
                            "src": "8900:32:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 41349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8900:34:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41350,
                        "nodeType": "RevertStatement",
                        "src": "8893:41:101"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Upgradability_$24495",
                      "typeString": "enum ISuperTokenFactory.Upgradability"
                    },
                    "id": 41356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41353,
                      "name": "upgradability",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41328,
                      "src": "8959:13:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Upgradability_$24495",
                        "typeString": "enum ISuperTokenFactory.Upgradability"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 41354,
                        "name": "Upgradability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24495,
                        "src": "8976:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Upgradability_$24495_$",
                          "typeString": "type(enum ISuperTokenFactory.Upgradability)"
                        }
                      },
                      "id": 41355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "8990:14:101",
                      "memberName": "NON_UPGRADABLE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24492,
                      "src": "8976:28:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Upgradability_$24495",
                        "typeString": "enum ISuperTokenFactory.Upgradability"
                      }
                    },
                    "src": "8959:45:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Upgradability_$24495",
                        "typeString": "enum ISuperTokenFactory.Upgradability"
                      },
                      "id": 41364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 41361,
                        "name": "upgradability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41328,
                        "src": "9099:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$24495",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 41362,
                          "name": "Upgradability",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24495,
                          "src": "9116:13:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Upgradability_$24495_$",
                            "typeString": "type(enum ISuperTokenFactory.Upgradability)"
                          }
                        },
                        "id": 41363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "9130:15:101",
                        "memberName": "SEMI_UPGRADABLE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24493,
                        "src": "9116:29:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$24495",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        }
                      },
                      "src": "9099:46:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 41414,
                      "nodeType": "Block",
                      "src": "9416:184:101",
                      "statements": [
                        {
                          "assignments": [
                            41394
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 41394,
                              "mutability": "mutable",
                              "name": "proxy",
                              "nameLocation": "9460:5:101",
                              "nodeType": "VariableDeclaration",
                              "scope": 41414,
                              "src": "9430:35:101",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$39163",
                                "typeString": "contract FullUpgradableSuperTokenProxy"
                              },
                              "typeName": {
                                "id": 41393,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 41392,
                                  "name": "FullUpgradableSuperTokenProxy",
                                  "nameLocations": [
                                    "9430:29:101"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 39163,
                                  "src": "9430:29:101"
                                },
                                "referencedDeclaration": 39163,
                                "src": "9430:29:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$39163",
                                  "typeString": "contract FullUpgradableSuperTokenProxy"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 41399,
                          "initialValue": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "9468:33:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FullUpgradableSuperTokenProxy_$39163_$",
                                "typeString": "function () returns (contract FullUpgradableSuperTokenProxy)"
                              },
                              "typeName": {
                                "id": 41396,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 41395,
                                  "name": "FullUpgradableSuperTokenProxy",
                                  "nameLocations": [
                                    "9472:29:101"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 39163,
                                  "src": "9472:29:101"
                                },
                                "referencedDeclaration": 39163,
                                "src": "9472:29:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$39163",
                                  "typeString": "contract FullUpgradableSuperTokenProxy"
                                }
                              }
                            },
                            "id": 41398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9468:35:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$39163",
                              "typeString": "contract FullUpgradableSuperTokenProxy"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9430:73:101"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 41400,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41394,
                                "src": "9517:5:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$39163",
                                  "typeString": "contract FullUpgradableSuperTokenProxy"
                                }
                              },
                              "id": 41402,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9523:10:101",
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39131,
                              "src": "9517:16:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                "typeString": "function () external"
                              }
                            },
                            "id": 41403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9517:18:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 41404,
                          "nodeType": "ExpressionStatement",
                          "src": "9517:18:101"
                        },
                        {
                          "expression": {
                            "id": 41412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 41405,
                              "name": "superToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41337,
                              "src": "9549:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 41409,
                                      "name": "proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41394,
                                      "src": "9582:5:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$39163",
                                        "typeString": "contract FullUpgradableSuperTokenProxy"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_FullUpgradableSuperTokenProxy_$39163",
                                        "typeString": "contract FullUpgradableSuperTokenProxy"
                                      }
                                    ],
                                    "id": 41408,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9574:7:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 41407,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9574:7:101",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 41410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9574:14:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 41406,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24454,
                                "src": "9562:11:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$24454_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 41411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9562:27:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "src": "9549:40:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$24454",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 41413,
                          "nodeType": "ExpressionStatement",
                          "src": "9549:40:101"
                        }
                      ]
                    },
                    "id": 41415,
                    "nodeType": "IfStatement",
                    "src": "9095:505:101",
                    "trueBody": {
                      "id": 41391,
                      "nodeType": "Block",
                      "src": "9147:214:101",
                      "statements": [
                        {
                          "assignments": [
                            41367
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 41367,
                              "mutability": "mutable",
                              "name": "proxy",
                              "nameLocation": "9171:5:101",
                              "nodeType": "VariableDeclaration",
                              "scope": 41391,
                              "src": "9161:15:101",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                "typeString": "contract UUPSProxy"
                              },
                              "typeName": {
                                "id": 41366,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 41365,
                                  "name": "UUPSProxy",
                                  "nameLocations": [
                                    "9161:9:101"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 46023,
                                  "src": "9161:9:101"
                                },
                                "referencedDeclaration": 46023,
                                "src": "9161:9:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 41372,
                          "initialValue": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 41370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "9179:13:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$46023_$",
                                "typeString": "function () returns (contract UUPSProxy)"
                              },
                              "typeName": {
                                "id": 41369,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 41368,
                                  "name": "UUPSProxy",
                                  "nameLocations": [
                                    "9183:9:101"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 46023,
                                  "src": "9183:9:101"
                                },
                                "referencedDeclaration": 46023,
                                "src": "9183:9:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              }
                            },
                            "id": 41371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9179:15:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                              "typeString": "contract UUPSProxy"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9161:33:101"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 41378,
                                    "name": "_SUPER_TOKEN_LOGIC",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40982,
                                    "src": "9276:18:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                      "typeString": "contract ISuperToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                      "typeString": "contract ISuperToken"
                                    }
                                  ],
                                  "id": 41377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9268:7:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 41376,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9268:7:101",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 41379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9268:27:101",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 41373,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41367,
                                "src": "9246:5:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              },
                              "id": 41375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9252:15:101",
                              "memberName": "initializeProxy",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 46010,
                              "src": "9246:21:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 41380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9246:50:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 41381,
                          "nodeType": "ExpressionStatement",
                          "src": "9246:50:101"
                        },
                        {
                          "expression": {
                            "id": 41389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 41382,
                              "name": "superToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41337,
                              "src": "9310:10:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 41386,
                                      "name": "proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41367,
                                      "src": "9343:5:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                        "typeString": "contract UUPSProxy"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                        "typeString": "contract UUPSProxy"
                                      }
                                    ],
                                    "id": 41385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9335:7:101",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 41384,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9335:7:101",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 41387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9335:14:101",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 41383,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24454,
                                "src": "9323:11:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$24454_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 41388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9323:27:101",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$24454",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "src": "9310:40:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$24454",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 41390,
                          "nodeType": "ExpressionStatement",
                          "src": "9310:40:101"
                        }
                      ]
                    }
                  },
                  "id": 41416,
                  "nodeType": "IfStatement",
                  "src": "8955:645:101",
                  "trueBody": {
                    "id": 41360,
                    "nodeType": "Block",
                    "src": "9006:83:101",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41357,
                            "name": "SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24472,
                            "src": "9027:49:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 41358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9027:51:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41359,
                        "nodeType": "RevertStatement",
                        "src": "9020:58:101"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41420,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41323,
                        "src": "9677:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1540",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 41421,
                        "name": "underlyingDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41325,
                        "src": "9706:18:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 41422,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41330,
                        "src": "9738:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 41423,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41332,
                        "src": "9756:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$1540",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 41417,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41337,
                        "src": "9642:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 41419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9653:10:101",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24050,
                      "src": "9642:21:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$1540_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 41424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9642:130:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41425,
                  "nodeType": "ExpressionStatement",
                  "src": "9642:130:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 41427,
                        "name": "superToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41337,
                        "src": "9806:10:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 41426,
                      "name": "SuperTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24577,
                      "src": "9788:17:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ISuperToken_$24454_$returns$__$",
                        "typeString": "function (contract ISuperToken)"
                      }
                    },
                    "id": 41428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9788:29:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41429,
                  "nodeType": "EmitStatement",
                  "src": "9783:34:101"
                }
              ]
            },
            "documentation": {
              "id": 41320,
              "nodeType": "StructuredDocumentation",
              "src": "8518:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "a6d0c534",
            "id": 41431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20Wrapper",
            "nameLocation": "8566:18:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 41334,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8771:8:101"
            },
            "parameters": {
              "id": 41333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41323,
                  "mutability": "mutable",
                  "name": "underlyingToken",
                  "nameLocation": "8601:15:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41431,
                  "src": "8594:22:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1540",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 41322,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41321,
                      "name": "IERC20",
                      "nameLocations": [
                        "8594:6:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1540,
                      "src": "8594:6:101"
                    },
                    "referencedDeclaration": 1540,
                    "src": "8594:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1540",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41325,
                  "mutability": "mutable",
                  "name": "underlyingDecimals",
                  "nameLocation": "8632:18:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41431,
                  "src": "8626:24:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 41324,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "8626:5:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41328,
                  "mutability": "mutable",
                  "name": "upgradability",
                  "nameLocation": "8674:13:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41431,
                  "src": "8660:27:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Upgradability_$24495",
                    "typeString": "enum ISuperTokenFactory.Upgradability"
                  },
                  "typeName": {
                    "id": 41327,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41326,
                      "name": "Upgradability",
                      "nameLocations": [
                        "8660:13:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24495,
                      "src": "8660:13:101"
                    },
                    "referencedDeclaration": 24495,
                    "src": "8660:13:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Upgradability_$24495",
                      "typeString": "enum ISuperTokenFactory.Upgradability"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41330,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "8713:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41431,
                  "src": "8697:20:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41329,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8697:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41332,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "8743:6:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41431,
                  "src": "8727:22:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41331,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8727:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8584:171:101"
            },
            "returnParameters": {
              "id": 41338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41337,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nameLocation": "8809:10:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41431,
                  "src": "8797:22:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24454",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 41336,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41335,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "8797:11:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24454,
                      "src": "8797:11:101"
                    },
                    "referencedDeclaration": 24454,
                    "src": "8797:11:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8796:24:101"
            },
            "scope": 41664,
            "src": "8557:1267:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              24531
            ],
            "body": {
              "id": 41459,
              "nodeType": "Block",
              "src": "10117:186:101",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41450,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41435,
                        "src": "10166:15:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 41451,
                            "name": "underlyingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41435,
                            "src": "10195:15:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                              "typeString": "contract ERC20WithTokenInfo"
                            }
                          },
                          "id": 41452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10211:8:101",
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25600,
                          "src": "10195:24:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 41453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10195:26:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 41454,
                        "name": "upgradability",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41438,
                        "src": "10235:13:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Upgradability_$24495",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        }
                      },
                      {
                        "id": 41455,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41440,
                        "src": "10262:4:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 41456,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41442,
                        "src": "10280:6:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                          "typeString": "contract ERC20WithTokenInfo"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_enum$_Upgradability_$24495",
                          "typeString": "enum ISuperTokenFactory.Upgradability"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 41449,
                      "name": "createERC20Wrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41431,
                      "src": "10134:18:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1540_$_t_uint8_$_t_enum$_Upgradability_$24495_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$returns$_t_contract$_ISuperToken_$24454_$",
                        "typeString": "function (contract IERC20,uint8,enum ISuperTokenFactory.Upgradability,string calldata,string calldata) returns (contract ISuperToken)"
                      }
                    },
                    "id": 41457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10134:162:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "functionReturnParameters": 41448,
                  "id": 41458,
                  "nodeType": "Return",
                  "src": "10127:169:101"
                }
              ]
            },
            "documentation": {
              "id": 41432,
              "nodeType": "StructuredDocumentation",
              "src": "9830:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "431f1481",
            "id": 41460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20Wrapper",
            "nameLocation": "9878:18:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 41444,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10063:8:101"
            },
            "parameters": {
              "id": 41443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41435,
                  "mutability": "mutable",
                  "name": "underlyingToken",
                  "nameLocation": "9925:15:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41460,
                  "src": "9906:34:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                    "typeString": "contract ERC20WithTokenInfo"
                  },
                  "typeName": {
                    "id": 41434,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41433,
                      "name": "ERC20WithTokenInfo",
                      "nameLocations": [
                        "9906:18:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25533,
                      "src": "9906:18:101"
                    },
                    "referencedDeclaration": 25533,
                    "src": "9906:18:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20WithTokenInfo_$25533",
                      "typeString": "contract ERC20WithTokenInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41438,
                  "mutability": "mutable",
                  "name": "upgradability",
                  "nameLocation": "9964:13:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41460,
                  "src": "9950:27:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Upgradability_$24495",
                    "typeString": "enum ISuperTokenFactory.Upgradability"
                  },
                  "typeName": {
                    "id": 41437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41436,
                      "name": "Upgradability",
                      "nameLocations": [
                        "9950:13:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24495,
                      "src": "9950:13:101"
                    },
                    "referencedDeclaration": 24495,
                    "src": "9950:13:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Upgradability_$24495",
                      "typeString": "enum ISuperTokenFactory.Upgradability"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41440,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "10003:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41460,
                  "src": "9987:20:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9987:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41442,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "10033:6:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41460,
                  "src": "10017:22:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41441,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10017:6:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9896:149:101"
            },
            "returnParameters": {
              "id": 41448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41447,
                  "mutability": "mutable",
                  "name": "superToken",
                  "nameLocation": "10101:10:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41460,
                  "src": "10089:22:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24454",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 41446,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41445,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "10089:11:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24454,
                      "src": "10089:11:101"
                    },
                    "referencedDeclaration": 24454,
                    "src": "10089:11:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10088:24:101"
            },
            "scope": 41664,
            "src": "9869:434:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24565
            ],
            "body": {
              "id": 41496,
              "nodeType": "Block",
              "src": "10459:343:101",
              "statements": [
                {
                  "assignments": [
                    41468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41468,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "10601:1:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41496,
                      "src": "10585:17:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 41467,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10585:15:101",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41479,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41475,
                                "name": "customSuperTokenProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41463,
                                "src": "10629:21:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 41474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10621:7:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 41473,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "10621:7:101",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10621:30:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 41472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10613:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41471,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10613:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10613:39:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10605:8:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 41469,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10605:8:101",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 41478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10605:48:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10585:68:101"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41486,
                            "name": "_SUPER_TOKEN_LOGIC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40982,
                            "src": "10700:18:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$24454",
                              "typeString": "contract ISuperToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperToken_$24454",
                              "typeString": "contract ISuperToken"
                            }
                          ],
                          "id": 41485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10692:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41484,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10692:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10692:27:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 41481,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41468,
                            "src": "10673:1:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 41480,
                          "name": "UUPSProxy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46023,
                          "src": "10663:9:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UUPSProxy_$46023_$",
                            "typeString": "type(contract UUPSProxy)"
                          }
                        },
                        "id": 41482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10663:12:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "id": 41483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10676:15:101",
                      "memberName": "initializeProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46010,
                      "src": "10663:28:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 41488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10663:57:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41489,
                  "nodeType": "ExpressionStatement",
                  "src": "10663:57:101"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41492,
                            "name": "customSuperTokenProxy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41463,
                            "src": "10772:21:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 41491,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24454,
                          "src": "10760:11:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$24454_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 41493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10760:34:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 41490,
                      "name": "CustomSuperTokenCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24583,
                      "src": "10736:23:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ISuperToken_$24454_$returns$__$",
                        "typeString": "function (contract ISuperToken)"
                      }
                    },
                    "id": 41494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10736:59:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41495,
                  "nodeType": "EmitStatement",
                  "src": "10731:64:101"
                }
              ]
            },
            "documentation": {
              "id": 41461,
              "nodeType": "StructuredDocumentation",
              "src": "10309:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "d412d344",
            "id": 41497,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeCustomSuperToken",
            "nameLocation": "10357:26:101",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 41465,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10446:8:101"
            },
            "parameters": {
              "id": 41464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41463,
                  "mutability": "mutable",
                  "name": "customSuperTokenProxy",
                  "nameLocation": "10401:21:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41497,
                  "src": "10393:29:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10393:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10383:45:101"
            },
            "returnParameters": {
              "id": 41466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10459:0:101"
            },
            "scope": 41664,
            "src": "10348:454:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24551
            ],
            "body": {
              "id": 41575,
              "nodeType": "Block",
              "src": "11013:867:101",
              "statements": [
                {
                  "assignments": [
                    41508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41508,
                      "mutability": "mutable",
                      "name": "existingAddress",
                      "nameLocation": "11031:15:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41575,
                      "src": "11023:23:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41507,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11023:7:101",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41512,
                  "initialValue": {
                    "baseExpression": {
                      "id": 41509,
                      "name": "_canonicalWrapperSuperTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40999,
                      "src": "11049:28:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 41511,
                    "indexExpression": {
                      "id": 41510,
                      "name": "_underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41500,
                      "src": "11091:16:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11049:68:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11023:94:101"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 41518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41513,
                      "name": "existingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41508,
                      "src": "11132:15:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 41516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11159:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 41515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11151:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41514,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11151:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11151:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11132:29:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 41573,
                    "nodeType": "Block",
                    "src": "11260:614:101",
                    "statements": [
                      {
                        "assignments": [
                          41529
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41529,
                            "mutability": "mutable",
                            "name": "bytecode",
                            "nameLocation": "11287:8:101",
                            "nodeType": "VariableDeclaration",
                            "scope": 41573,
                            "src": "11274:21:101",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 41528,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "11274:5:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41534,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 41531,
                                "name": "UUPSProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46023,
                                "src": "11303:9:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UUPSProxy_$46023_$",
                                  "typeString": "type(contract UUPSProxy)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_UUPSProxy_$46023_$",
                                  "typeString": "type(contract UUPSProxy)"
                                }
                              ],
                              "id": 41530,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967269,
                              "src": "11298:4:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 41532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11298:15:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_UUPSProxy_$46023",
                              "typeString": "type(contract UUPSProxy)"
                            }
                          },
                          "id": 41533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11314:12:101",
                          "memberName": "creationCode",
                          "nodeType": "MemberAccess",
                          "src": "11298:28:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11274:52:101"
                      },
                      {
                        "expression": {
                          "id": 41567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 41535,
                            "name": "superTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41503,
                            "src": "11340:17:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "hexValue": "30786666",
                                                    "id": 41547,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "11543:4:101",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    },
                                                    "value": "0xff"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_rational_255_by_1",
                                                      "typeString": "int_const 255"
                                                    }
                                                  ],
                                                  "id": 41546,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "11536:6:101",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_bytes1_$",
                                                    "typeString": "type(bytes1)"
                                                  },
                                                  "typeName": {
                                                    "id": 41545,
                                                    "name": "bytes1",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "11536:6:101",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 41548,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11536:12:101",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 41551,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "11590:4:101",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_SuperTokenFactoryBase_$41664",
                                                      "typeString": "contract SuperTokenFactoryBase"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_SuperTokenFactoryBase_$41664",
                                                      "typeString": "contract SuperTokenFactoryBase"
                                                    }
                                                  ],
                                                  "id": 41550,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "11582:7:101",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 41549,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "11582:7:101",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 41552,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11582:13:101",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "id": 41556,
                                                        "name": "_underlyingToken",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 41500,
                                                        "src": "11650:16:101",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_address",
                                                          "typeString": "address"
                                                        }
                                                      ],
                                                      "expression": {
                                                        "id": 41554,
                                                        "name": "abi",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967295,
                                                        "src": "11639:3:101",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_magic_abi",
                                                          "typeString": "abi"
                                                        }
                                                      },
                                                      "id": 41555,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "memberLocation": "11643:6:101",
                                                      "memberName": "encode",
                                                      "nodeType": "MemberAccess",
                                                      "src": "11639:10:101",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                        "typeString": "function () pure returns (bytes memory)"
                                                      }
                                                    },
                                                    "id": 41557,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "11639:28:101",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  ],
                                                  "id": 41553,
                                                  "name": "keccak256",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967288,
                                                  "src": "11629:9:101",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                  }
                                                },
                                                "id": 41558,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11629:39:101",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 41560,
                                                    "name": "bytecode",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 41529,
                                                    "src": "11712:8:101",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  ],
                                                  "id": 41559,
                                                  "name": "keccak256",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 4294967288,
                                                  "src": "11702:9:101",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                                  }
                                                },
                                                "id": 41561,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "nameLocations": [],
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "11702:19:101",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes1",
                                                  "typeString": "bytes1"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "id": 41543,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967295,
                                                "src": "11486:3:101",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 41544,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberLocation": "11490:12:101",
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "11486:16:101",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 41562,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "11486:265:101",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 41542,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967288,
                                          "src": "11447:9:101",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 41563,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "11447:330:101",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "id": 41541,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11414:7:101",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 41540,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11414:7:101",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 41564,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11414:385:101",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 41539,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11385:7:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint160_$",
                                    "typeString": "type(uint160)"
                                  },
                                  "typeName": {
                                    "id": 41538,
                                    "name": "uint160",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11385:7:101",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 41565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11385:432:101",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              ],
                              "id": 41537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11360:7:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41536,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11360:7:101",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11360:471:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11340:491:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 41568,
                        "nodeType": "ExpressionStatement",
                        "src": "11340:491:101"
                      },
                      {
                        "expression": {
                          "id": 41571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 41569,
                            "name": "isDeployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41505,
                            "src": "11845:10:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 41570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11858:5:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "11845:18:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41572,
                        "nodeType": "ExpressionStatement",
                        "src": "11845:18:101"
                      }
                    ]
                  },
                  "id": 41574,
                  "nodeType": "IfStatement",
                  "src": "11128:746:101",
                  "trueBody": {
                    "id": 41527,
                    "nodeType": "Block",
                    "src": "11163:91:101",
                    "statements": [
                      {
                        "expression": {
                          "id": 41521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 41519,
                            "name": "superTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41503,
                            "src": "11177:17:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 41520,
                            "name": "existingAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41508,
                            "src": "11197:15:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11177:35:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 41522,
                        "nodeType": "ExpressionStatement",
                        "src": "11177:35:101"
                      },
                      {
                        "expression": {
                          "id": 41525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 41523,
                            "name": "isDeployed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41505,
                            "src": "11226:10:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 41524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11239:4:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "11226:17:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41526,
                        "nodeType": "ExpressionStatement",
                        "src": "11226:17:101"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 41498,
              "nodeType": "StructuredDocumentation",
              "src": "10808:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "bab74c89",
            "id": 41576,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "computeCanonicalERC20WrapperAddress",
            "nameLocation": "10856:35:101",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41500,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "10900:16:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41576,
                  "src": "10892:24:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10892:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10891:26:101"
            },
            "returnParameters": {
              "id": 41506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41503,
                  "mutability": "mutable",
                  "name": "superTokenAddress",
                  "nameLocation": "10973:17:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41576,
                  "src": "10965:25:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41502,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10965:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41505,
                  "mutability": "mutable",
                  "name": "isDeployed",
                  "nameLocation": "10997:10:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41576,
                  "src": "10992:15:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10992:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10964:44:101"
            },
            "scope": 41664,
            "src": "10847:1033:101",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              24559
            ],
            "body": {
              "id": 41590,
              "nodeType": "Block",
              "src": "12070:112:101",
              "statements": [
                {
                  "expression": {
                    "id": 41588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41584,
                      "name": "superTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41582,
                      "src": "12080:17:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 41585,
                        "name": "_canonicalWrapperSuperTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40999,
                        "src": "12100:28:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 41587,
                      "indexExpression": {
                        "id": 41586,
                        "name": "_underlyingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41579,
                        "src": "12142:23:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12100:75:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12080:95:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 41589,
                  "nodeType": "ExpressionStatement",
                  "src": "12080:95:101"
                }
              ]
            },
            "documentation": {
              "id": 41577,
              "nodeType": "StructuredDocumentation",
              "src": "11886:34:101",
              "text": "@inheritdoc ISuperTokenFactory"
            },
            "functionSelector": "eff0a89d",
            "id": 41591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCanonicalERC20Wrapper",
            "nameLocation": "11934:24:101",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41579,
                  "mutability": "mutable",
                  "name": "_underlyingTokenAddress",
                  "nameLocation": "11967:23:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41591,
                  "src": "11959:31:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11959:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11958:33:101"
            },
            "returnParameters": {
              "id": 41583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41582,
                  "mutability": "mutable",
                  "name": "superTokenAddress",
                  "nameLocation": "12047:17:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41591,
                  "src": "12039:25:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12039:7:101",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12038:27:101"
            },
            "scope": 41664,
            "src": "11925:257:101",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 41662,
              "nodeType": "Block",
              "src": "12549:677:101",
              "statements": [
                {
                  "assignments": [
                    41601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41601,
                      "mutability": "mutable",
                      "name": "gov",
                      "nameLocation": "12567:3:101",
                      "nodeType": "VariableDeclaration",
                      "scope": 41662,
                      "src": "12559:11:101",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ownable_$651",
                        "typeString": "contract Ownable"
                      },
                      "typeName": {
                        "id": 41600,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41599,
                          "name": "Ownable",
                          "nameLocations": [
                            "12559:7:101"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 651,
                          "src": "12559:7:101"
                        },
                        "referencedDeclaration": 651,
                        "src": "12559:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ownable_$651",
                          "typeString": "contract Ownable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41610,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 41605,
                                "name": "_host",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40985,
                                "src": "12589:5:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                                  "typeString": "contract ISuperfluid"
                                }
                              },
                              "id": 41606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12595:13:101",
                              "memberName": "getGovernance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 24673,
                              "src": "12589:19:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ISuperfluidGovernance_$25235_$",
                                "typeString": "function () view external returns (contract ISuperfluidGovernance)"
                              }
                            },
                            "id": 41607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12589:21:101",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperfluidGovernance_$25235",
                              "typeString": "contract ISuperfluidGovernance"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperfluidGovernance_$25235",
                              "typeString": "contract ISuperfluidGovernance"
                            }
                          ],
                          "id": 41604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12581:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41603,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12581:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12581:30:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41602,
                      "name": "Ownable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 651,
                      "src": "12573:7:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Ownable_$651_$",
                        "typeString": "type(contract Ownable)"
                      }
                    },
                    "id": 41609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12573:39:101",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$651",
                      "typeString": "contract Ownable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12559:53:101"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 41616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 41611,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "12626:3:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 41612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12630:6:101",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "12626:10:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 41613,
                          "name": "gov",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41601,
                          "src": "12640:3:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ownable_$651",
                            "typeString": "contract Ownable"
                          }
                        },
                        "id": 41614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12644:5:101",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 579,
                        "src": "12640:9:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 41615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12640:11:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12626:25:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41620,
                  "nodeType": "IfStatement",
                  "src": "12622:81:101",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 41617,
                        "name": "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41002,
                        "src": "12660:41:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 41618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12660:43:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 41619,
                    "nodeType": "RevertStatement",
                    "src": "12653:50:101"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 41631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 41621,
                        "name": "_canonicalWrapperSuperTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40999,
                        "src": "12895:28:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 41626,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 41624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12932:1:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 41623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12924:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41622,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12924:7:101",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12924:10:101",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12895:40:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 41629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12947:1:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 41628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12939:7:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 41627,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12939:7:101",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 41630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12939:10:101",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12895:54:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41636,
                  "nodeType": "IfStatement",
                  "src": "12891:128:101",
                  "trueBody": {
                    "id": 41635,
                    "nodeType": "Block",
                    "src": "12951:68:101",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41632,
                            "name": "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24464,
                            "src": "12972:34:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 41633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12972:36:101",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41634,
                        "nodeType": "RevertStatement",
                        "src": "12965:43:101"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 41660,
                    "nodeType": "Block",
                    "src": "13102:118:101",
                    "statements": [
                      {
                        "expression": {
                          "id": 41658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 41648,
                              "name": "_canonicalWrapperSuperTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40999,
                              "src": "13116:28:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                "typeString": "mapping(address => address)"
                              }
                            },
                            "id": 41653,
                            "indexExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 41649,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41596,
                                  "src": "13145:5:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_InitializeData_$40979_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct SuperTokenFactoryBase.InitializeData calldata[] calldata"
                                  }
                                },
                                "id": 41651,
                                "indexExpression": {
                                  "id": 41650,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41638,
                                  "src": "13151:1:101",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13145:8:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializeData_$40979_calldata_ptr",
                                  "typeString": "struct SuperTokenFactoryBase.InitializeData calldata"
                                }
                              },
                              "id": 41652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13154:15:101",
                              "memberName": "underlyingToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40976,
                              "src": "13145:24:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13116:54:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 41654,
                                "name": "_data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41596,
                                "src": "13173:5:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_InitializeData_$40979_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct SuperTokenFactoryBase.InitializeData calldata[] calldata"
                                }
                              },
                              "id": 41656,
                              "indexExpression": {
                                "id": 41655,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41638,
                                "src": "13179:1:101",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13173:8:101",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializeData_$40979_calldata_ptr",
                                "typeString": "struct SuperTokenFactoryBase.InitializeData calldata"
                              }
                            },
                            "id": 41657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13199:10:101",
                            "memberName": "superToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40978,
                            "src": "13173:36:101",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13116:93:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 41659,
                        "nodeType": "ExpressionStatement",
                        "src": "13116:93:101"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41641,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41638,
                      "src": "13079:1:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41642,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41596,
                        "src": "13083:5:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_InitializeData_$40979_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SuperTokenFactoryBase.InitializeData calldata[] calldata"
                        }
                      },
                      "id": 41643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13089:6:101",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13083:12:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13079:16:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41661,
                  "initializationExpression": {
                    "assignments": [
                      41638
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41638,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "13072:1:101",
                        "nodeType": "VariableDeclaration",
                        "scope": 41661,
                        "src": "13064:9:101",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41637,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13064:7:101",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41640,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13076:1:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13064:13:101"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13097:3:101",
                      "subExpression": {
                        "id": 41645,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41638,
                        "src": "13097:1:101",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41647,
                    "nodeType": "ExpressionStatement",
                    "src": "13097:3:101"
                  },
                  "nodeType": "ForStatement",
                  "src": "13059:161:101"
                }
              ]
            },
            "documentation": {
              "id": 41592,
              "nodeType": "StructuredDocumentation",
              "src": "12188:244:101",
              "text": "@notice Initializes list of canonical wrapper super tokens.\n @dev Note that this should also be kind of a throwaway function which will be executed only once.\n @param _data an array of canonical wrappper super tokens to be set"
            },
            "functionSelector": "97e011ed",
            "id": 41663,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeCanonicalWrapperSuperTokens",
            "nameLocation": "12446:37:101",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41596,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12519:5:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41663,
                  "src": "12493:31:101",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_InitializeData_$40979_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct SuperTokenFactoryBase.InitializeData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41594,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41593,
                        "name": "InitializeData",
                        "nameLocations": [
                          "12493:14:101"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40979,
                        "src": "12493:14:101"
                      },
                      "referencedDeclaration": 40979,
                      "src": "12493:14:101",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_InitializeData_$40979_storage_ptr",
                        "typeString": "struct SuperTokenFactoryBase.InitializeData"
                      }
                    },
                    "id": 41595,
                    "nodeType": "ArrayTypeName",
                    "src": "12493:16:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_InitializeData_$40979_storage_$dyn_storage_ptr",
                      "typeString": "struct SuperTokenFactoryBase.InitializeData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12483:47:101"
            },
            "returnParameters": {
              "id": 41598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12549:0:101"
            },
            "scope": 41664,
            "src": "12437:789:101",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 41690,
        "src": "807:12421:101",
        "usedErrors": [
          24464,
          24466,
          24468,
          24470,
          24472,
          24474,
          41002
        ]
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41665,
              "name": "SuperTokenFactoryBase",
              "nameLocations": [
                "13260:21:101"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41664,
              "src": "13260:21:101"
            },
            "id": 41666,
            "nodeType": "InheritanceSpecifier",
            "src": "13260:21:101"
          }
        ],
        "canonicalName": "SuperTokenFactory",
        "contractDependencies": [
          39163,
          46023
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 41689,
        "linearizedBaseContracts": [
          41689,
          41664,
          24584,
          45966,
          875
        ],
        "name": "SuperTokenFactory",
        "nameLocation": "13239:17:101",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 41687,
              "nodeType": "Block",
              "src": "13901:8:101",
              "statements": []
            },
            "id": 41688,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41681,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41669,
                    "src": "13741:4:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 41682,
                    "name": "superTokenLogic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41672,
                    "src": "13759:15:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  {
                    "id": 41683,
                    "name": "constantOutflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41675,
                    "src": "13788:18:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  {
                    "id": 41684,
                    "name": "constantInflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41678,
                    "src": "13820:17:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  }
                ],
                "id": 41685,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41680,
                  "name": "SuperTokenFactoryBase",
                  "nameLocations": [
                    "13706:21:101"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41664,
                  "src": "13706:21:101"
                },
                "nodeType": "ModifierInvocation",
                "src": "13706:141:101"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 41679,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41669,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "13556:4:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41688,
                  "src": "13544:16:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 41668,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41667,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "13544:11:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25106,
                      "src": "13544:11:101"
                    },
                    "referencedDeclaration": 25106,
                    "src": "13544:11:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41672,
                  "mutability": "mutable",
                  "name": "superTokenLogic",
                  "nameLocation": "13582:15:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41688,
                  "src": "13570:27:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24454",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 41671,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41670,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "13570:11:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24454,
                      "src": "13570:11:101"
                    },
                    "referencedDeclaration": 24454,
                    "src": "13570:11:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41675,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "13627:18:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41688,
                  "src": "13607:38:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 41674,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41673,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "13607:19:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23757,
                      "src": "13607:19:101"
                    },
                    "referencedDeclaration": 23757,
                    "src": "13607:19:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41678,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "13674:17:101",
                  "nodeType": "VariableDeclaration",
                  "scope": 41688,
                  "src": "13655:36:101",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 41677,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41676,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "13655:18:101"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23703,
                      "src": "13655:18:101"
                    },
                    "referencedDeclaration": 23703,
                    "src": "13655:18:101",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13534:163:101"
            },
            "returnParameters": {
              "id": 41686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13901:0:101"
            },
            "scope": 41689,
            "src": "13523:386:101",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 41690,
        "src": "13230:681:101",
        "usedErrors": [
          24464,
          24466,
          24468,
          24470,
          24472,
          24474,
          41002
        ]
      }
    ],
    "src": "35:13877:101"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-26T14:22:07.525Z",
  "devdoc": {
    "events": {
      "CustomSuperTokenCreated(address)": {
        "details": "Custom super token created event",
        "params": {
          "token": "Newly created custom super token address"
        }
      },
      "Initialized(uint8)": {
        "details": "Triggered when the contract has been initialized or reinitialized."
      },
      "SuperTokenCreated(address)": {
        "details": "Super token created event",
        "params": {
          "token": "Newly created super token address"
        }
      },
      "SuperTokenLogicCreated(address)": {
        "details": "Super token logic created event",
        "params": {
          "tokenLogic": "Token logic address"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "computeCanonicalERC20WrapperAddress(address)": {
        "details": "We return from our canonical list if it already exists, otherwise we compute itnote that this function only computes addresses for SEMI_UPGRADABLE SuperTokens",
        "params": {
          "_underlyingToken": "Underlying ERC20 token address"
        },
        "returns": {
          "isDeployed": "whether the super token is deployed AND set in the canonical mapping",
          "superTokenAddress": "Super token address"
        }
      },
      "createCanonicalERC20Wrapper(address)": {
        "details": "salt for create2 is the keccak256 hash of abi.encode(address(_underlyingToken))",
        "params": {
          "_underlyingToken": "Underlying ERC20 token"
        },
        "returns": {
          "_0": "ISuperToken the created supertoken"
        }
      },
      "createERC20Wrapper(address,uint8,string,string)": {
        "params": {
          "name": "Super token name",
          "symbol": "Super token symbol",
          "underlyingToken": "Underlying ERC20 token",
          "upgradability": "Upgradability mode"
        },
        "returns": {
          "superToken": "The deployed and initialized wrapper super token NOTE: - It assumes token provide the .decimals() function"
        }
      },
      "createERC20Wrapper(address,uint8,uint8,string,string)": {
        "params": {
          "name": "Super token name",
          "symbol": "Super token symbol",
          "underlyingDecimals": "Underlying token decimals",
          "underlyingToken": "Underlying ERC20 token",
          "upgradability": "Upgradability mode"
        },
        "returns": {
          "superToken": "The deployed and initialized wrapper super token"
        }
      },
      "getCanonicalERC20Wrapper(address)": {
        "details": "We return the address if it exists and the zero address otherwise",
        "params": {
          "_underlyingTokenAddress": "Underlying ERC20 token address"
        },
        "returns": {
          "superTokenAddress": "Super token address"
        }
      },
      "getCodeAddress()": {
        "details": "Get current implementation code address."
      },
      "getHost()": {
        "details": "Get superfluid host contract address"
      },
      "initialize()": {
        "details": "Initialize the contract"
      },
      "initializeCanonicalWrapperSuperTokens((address,address)[])": {
        "details": "Note that this should also be kind of a throwaway function which will be executed only once.",
        "params": {
          "_data": "an array of canonical wrappper super tokens to be set"
        }
      },
      "initializeCustomSuperToken(address)": {
        "details": "Creates a new custom super token",
        "params": {
          "customSuperTokenProxy": "address of the custom supertoken proxy"
        }
      },
      "proxiableUUID()": {
        "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
      },
      "updateCode(address)": {
        "details": "This function updates the logic contract for the SuperTokenFactory",
        "params": {
          "newAddress": "the new address of the SuperTokenFactory logic contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER()": [
        {
          "notice": "NOTE: Whenever modifying the storage layout here it is important to update the validateStorageLayout function in its respective mock contract to ensure that it doesn't break anything or lead to unexpected behaviors/layout when upgrading"
        }
      ]
    },
    "kind": "user",
    "methods": {
      "computeCanonicalERC20WrapperAddress(address)": {
        "notice": "Computes/Retrieves wrapper super token address given the underlying token address"
      },
      "createCanonicalERC20Wrapper(address)": {
        "notice": "Creates a wrapper super token AND sets it in the canonical list OR reverts if it already exists"
      },
      "createERC20Wrapper(address,uint8,string,string)": {
        "notice": "Create new super token wrapper for the underlying ERC20 token with extra token info"
      },
      "createERC20Wrapper(address,uint8,uint8,string,string)": {
        "notice": "Create new super token wrapper for the underlying ERC20 token"
      },
      "getCanonicalERC20Wrapper(address)": {
        "notice": "Gets the canonical ERC20 wrapper super token address given the underlying token address"
      },
      "getSuperTokenLogic()": {
        "notice": "Get the canonical super token logic."
      },
      "initializeCanonicalWrapperSuperTokens((address,address)[])": {
        "notice": "Initializes list of canonical wrapper super tokens."
      },
      "updateCode(address)": {
        "notice": "Updates the logic contract for the SuperTokenFactory"
      }
    },
    "version": 1
  }
}