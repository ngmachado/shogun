{
  "contractName": "SafeGasLibrary",
  "abi": [
    {
      "inputs": [],
      "name": "OUT_OF_GAS",
      "type": "error"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OUT_OF_GAS\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeGasLibrary\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"An internal library used to handle out of gas errors\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libs/SafeGasLibrary.sol\":\"SafeGasLibrary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/libs/SafeGasLibrary.sol\":{\"keccak256\":\"0x7abd4d1f45d303f80a042d8f67122662a56ae17b70bd6e263beb691064efc85e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc8615b2d9740bb2e73812264f176d38b022a80c3f9ef2a358c129e129a92a23\",\"dweb:/ipfs/QmUjaGTJKnvQPx1L9AikP7uYTTnbRCtTZKFdY1fp3ErAqq\"]}},\"version\":1}",
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023d72266de6ce10a853d523fb542d15a8319a5832b94858659f56a48c922b24564736f6c63430008130033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023d72266de6ce10a853d523fb542d15a8319a5832b94858659f56a48c922b24564736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "174:836:71:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;174:836:71;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "174:836:71:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.8.19;\n\n/// @title SafeGasLibrary\n/// @author Superfluid\n/// @notice An internal library used to handle out of gas errors\nlibrary SafeGasLibrary {\n    error OUT_OF_GAS(); // 0x20afada5\n\n    function _isOutOfGas(uint256 gasLeftBefore) internal view returns (bool) {\n        return gasleft() <= gasLeftBefore / 63;\n    }\n\n    /// @dev A function used in the catch block to handle true out of gas errors\n    /// @param gasLeftBefore the gas left before the try/catch block\n    function _revertWhenOutOfGas(uint256 gasLeftBefore) internal view {\n// If the function actually runs out of gas, not just hitting the safety gas limit, we revert the whole transaction.\n// This solves an issue where the gas estimaton didn't provide enough gas by default for the function to succeed.\n// See https://medium.com/@wighawag/ethereum-the-concept-of-gas-and-its-dangers-28d0eb809bb2\n        if (_isOutOfGas(gasLeftBefore)) {\n            revert OUT_OF_GAS();\n        }\n    }\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/libs/SafeGasLibrary.sol",
  "ast": {
    "absolutePath": "project:/contracts/libs/SafeGasLibrary.sol",
    "exportedSymbols": {
      "SafeGasLibrary": [
        26313
      ]
    },
    "id": 26314,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 26279,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:71"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeGasLibrary",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 26280,
          "nodeType": "StructuredDocumentation",
          "src": "60:114:71",
          "text": "@title SafeGasLibrary\n @author Superfluid\n @notice An internal library used to handle out of gas errors"
        },
        "fullyImplemented": true,
        "id": 26313,
        "linearizedBaseContracts": [
          26313
        ],
        "name": "SafeGasLibrary",
        "nameLocation": "182:14:71",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "20afada5",
            "id": 26282,
            "name": "OUT_OF_GAS",
            "nameLocation": "209:10:71",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 26281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "219:2:71"
            },
            "src": "203:19:71"
          },
          {
            "body": {
              "id": 26296,
              "nodeType": "Block",
              "src": "315:55:71",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26289,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967289,
                        "src": "332:7:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 26290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "332:9:71",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 26293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 26291,
                        "name": "gasLeftBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26284,
                        "src": "345:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "3633",
                        "id": 26292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "361:2:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_63_by_1",
                          "typeString": "int_const 63"
                        },
                        "value": "63"
                      },
                      "src": "345:18:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "332:31:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 26288,
                  "id": 26295,
                  "nodeType": "Return",
                  "src": "325:38:71"
                }
              ]
            },
            "id": 26297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isOutOfGas",
            "nameLocation": "251:11:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26284,
                  "mutability": "mutable",
                  "name": "gasLeftBefore",
                  "nameLocation": "271:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 26297,
                  "src": "263:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "262:23:71"
            },
            "returnParameters": {
              "id": 26288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26287,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 26297,
                  "src": "309:4:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 26286,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:4:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "308:6:71"
            },
            "scope": 26313,
            "src": "242:128:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 26311,
              "nodeType": "Block",
              "src": "592:416:71",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 26304,
                        "name": "gasLeftBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26300,
                        "src": "942:13:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 26303,
                      "name": "_isOutOfGas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26297,
                      "src": "930:11:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 26305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "930:26:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26310,
                  "nodeType": "IfStatement",
                  "src": "926:76:71",
                  "trueBody": {
                    "id": 26309,
                    "nodeType": "Block",
                    "src": "958:44:71",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 26306,
                            "name": "OUT_OF_GAS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26282,
                            "src": "979:10:71",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 26307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "979:12:71",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26308,
                        "nodeType": "RevertStatement",
                        "src": "972:19:71"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 26298,
              "nodeType": "StructuredDocumentation",
              "src": "376:145:71",
              "text": "@dev A function used in the catch block to handle true out of gas errors\n @param gasLeftBefore the gas left before the try/catch block"
            },
            "id": 26312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_revertWhenOutOfGas",
            "nameLocation": "535:19:71",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 26301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26300,
                  "mutability": "mutable",
                  "name": "gasLeftBefore",
                  "nameLocation": "563:13:71",
                  "nodeType": "VariableDeclaration",
                  "scope": 26312,
                  "src": "555:21:71",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "555:7:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "554:23:71"
            },
            "returnParameters": {
              "id": 26302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:71"
            },
            "scope": 26313,
            "src": "526:482:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 26314,
        "src": "174:836:71",
        "usedErrors": [
          26282
        ]
      }
    ],
    "src": "35:976:71"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-26T14:22:07.028Z",
  "devdoc": {
    "author": "Superfluid",
    "kind": "dev",
    "methods": {},
    "title": "SafeGasLibrary",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "An internal library used to handle out of gas errors",
    "version": 1
  }
}