{
  "contractName": "SuperfluidPeripheryDeployerLibrary",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"This library is used for testing purposes only, not deployments to test OR production networks\",\"kind\":\"dev\",\"methods\":{\"deploySuperTokenFactory(ISuperfluid,ISuperToken,IConstantOutflowNFT,IConstantInflowNFT)\":{\"details\":\"deploys Super Token Factory contract\",\"params\":{\"_host\":\"address of the Superfluid contract\",\"_superTokenLogic\":\"address of the Super Token logic contract\"},\"returns\":{\"_0\":\"newly deployed SuperTokenFactory contract\"}},\"deployTestResolver(address)\":{\"details\":\"deploys Test Resolver contract\",\"params\":{\"_additionalAdmin\":\"address of the additional administrator of the Test Resolver contract\"},\"returns\":{\"_0\":\"newly deployed Test Resolver contract\"}}},\"title\":\"SuperfluidPeripheryDeployerLibrary\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"An external library that deploys Superfluid periphery contracts (Super Token Factory and Test Resolver)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/SuperfluidFrameworkDeployer.sol\":\"SuperfluidPeripheryDeployerLibrary\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d26b5d0495ffb4c36b1abdf003f43ab478c324752ce60847af8019bad5a3ad0\",\"dweb:/ipfs/QmQGcXZcq7eBrZUyxLbHFkBFWCyMwFonvJwLRSsL82dbWx\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0xd750324b0fc76aa4c1b0aadf7cab03b3d1cc4d5744348c18ba2b99dbdbe1758d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d53cbf8e2e469a6422fb61d8636af3ec39d8e10e7f4d99d625bdd36d4b8ddf34\",\"dweb:/ipfs/QmNhvk3jmfgquVki2V7gNmTWTMeNwEPCnetybeBntQtsyJ\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"project:/contracts/agreements/AgreementBase.sol\":{\"keccak256\":\"0x5cb9d45e9b3753ab7f8c19e1a52da400893a93792ddf8a09bd8f06948e16d792\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://db309803ee144a4adf10e8a09da704cdf23471fa3815bbe0c88dc8c904b4e113\",\"dweb:/ipfs/QmXKQnXURdZ4Es3hsQYFgnu7VjL1uJy1FfMEjDXyeckt6L\"]},\"project:/contracts/agreements/AgreementLibrary.sol\":{\"keccak256\":\"0xb568c1933d1f111a028cc22e83027dde881df47fa78ac123da6c0ff7bf52316b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9a5a4f3c0a9894d105b8f8274d1d4665b4ddbccef53fbe15386cab220d159544\",\"dweb:/ipfs/QmWSiKBARXosjyoCjMLxmdo8ykXgigAT6MUGDwYTBjLUy2\"]},\"project:/contracts/agreements/ConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xc58d97a758c2213229a266c37a314d8a33b9e1c2a577d3ed6afb7f2da366eb90\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6833d1d1079ebd0828300d6fdb805c48eff3ecebb1dbbc28022d8ff3c35d9814\",\"dweb:/ipfs/QmbHXX1s3PGpEuVbmWQPv51y5DJURNcTVuoSbU5NzNJAjS\"]},\"project:/contracts/agreements/InstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xa8f752e6e5a18fde93736c031474319ef23911bb237b465db16ae32d40bb1f39\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b43478c87d9c9816ec4a2a8e61ea5fecf206d12300369ce0c17bf4fae14f23c2\",\"dweb:/ipfs/QmfKyLjRjXQZAvbL54mBa1BNpAtgPPnxSMY5js1XQsGJPR\"]},\"project:/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x5384b9a56711ce7b72405c653ff8be3bb94131428919b380248e10f1ddb252de\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://979aa0e84f86851125d7ad79d7f974681c91680139e65ae426fee12671f81ca0\",\"dweb:/ipfs/QmVk59WkCeqaUVRBeiCfftVstSXugXgyXMurEeAicAx3du\"]},\"project:/contracts/apps/IDAv1Library.sol\":{\"keccak256\":\"0x71c1ea9ef6e5444301987a6ad48eec156276e624693f01d8501992638888a26f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b4641320033161bea4fe65de11e62792fb8314a69421fded2ad01e7a1191bc99\",\"dweb:/ipfs/QmemvhmQ4xmM8ivpj2Zm4WmpXW253En8BBQa7wFwghwWWL\"]},\"project:/contracts/gov/SuperfluidGovernanceBase.sol\":{\"keccak256\":\"0x719d412b68d42459c47cbcea90c4e4c35118831eb0a6e3cb30a90bc84423ecb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://0b3e9c63a4d4eebe7238763577dc33f464ef3dcd81f393ed4709634d3cea0709\",\"dweb:/ipfs/QmXEfStruP5vFfZPkrDgU9fT2VgurCdU6a2fvyHDMZ8RDh\"]},\"project:/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol\":{\"keccak256\":\"0x908b492d11c73d5f7f1707b3faf8e29aa5b6b35618b40e4b0c8f68873cbcf69b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c7f2f71936ff6dab1f5c854f2d4fa5d37b576c0e904369ea240d96eab58781f\",\"dweb:/ipfs/QmZJCdchrpjZeuCZBo7okXnjxLFheLJcXvWqxLkxm5V5fv\"]},\"project:/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0xb68e122faba133422f4cbdd7e15fc913073dfa2c3682c18d6449b121e67d1104\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://da0611fda964b8356d38cb006133865b58adc6e11d3817e27daf20b02ad6880f\",\"dweb:/ipfs/QmeLbak3yiUfkGvxEZzmS4ndDwDfxtZNeKiA86G3WxzjyD\"]},\"project:/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0x7b088dfa11a00d2b1e6e0938978364a6918015b052a4bf3ffcc67db9b3182370\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://2437f6ea2d8c8de7613aef5de4dcf3530c2beb801f7d5f3e21ac617e73f8882b\",\"dweb:/ipfs/QmVBtqXYV25fQZ9P6xokBzgFnHCBthJSZdFo9quBY169fd\"]},\"project:/contracts/interfaces/superfluid/CustomSuperTokenBase.sol\":{\"keccak256\":\"0xadca56843852b2bf7afe424cd068cd2142246813f81505d083293ae2247c35e6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://208fe654adaa9d3a994d508613ecd1c18ee8aeb9d3bbc9fae168536b7405f16a\",\"dweb:/ipfs/QmR7EyiSxZ9Qn1Fpq8U5WAsMdpjsm6Ypt5LhhxeoDkvANY\"]},\"project:/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x8c817a6d85868039485ecdf1c7163f2e06be939cfc3923ba4ca6628f614282a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d3e816400006db8e39faf5287f76da1785060f7a21c68103453bb37f18ba6db0\",\"dweb:/ipfs/Qmbnd8TktXALrsngVNAHR546YJgnJ47tffkPug1j4jitDu\"]},\"project:/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb989f0fe54561ecb32f66ac55427d98866c77ee4b6a1da52aca2e0953a7f7f06\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://049ca939f07e24558748ebacc6f17c3e72161c16516e77bf9d501c338b3dd7b4\",\"dweb:/ipfs/QmVVbywb88aaiKLzs75zz5tbkPptrm2ihki8jGrn232jW2\"]},\"project:/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x5df423f453923ff6f7ee716e7c1c64d2e19743ad77455b0bba23fd28f2a9d587\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://191e99e332eee5c9b4a7ee19648e44554d9fe34c6c93be9fc2d2cbf9fbc1997a\",\"dweb:/ipfs/QmcxN6M6WAhmso9Yevag419p6tDNjJH3DJqbWdBurc4o8J\"]},\"project:/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0x1c62c63f39c7c9ba03ddde542690ccfea343b5b3b442ed4cf2830b43af6f9cbe\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e3ef914d4089c070d1f48b8d292a360d05373e5454ab45d6bef3d8b5170c3885\",\"dweb:/ipfs/QmZcXa9CfuaCxDfp8ncip6oAY849HFzDJ8rnMN8roSLvnk\"]},\"project:/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0x3a93bb86598d8840dc333efce41c0fcc8b839df6597c3be49dcb4e3d4fb9f074\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://469e7af1687de706da737007596663e20ec634d7ac6daa032be8c263e57eb518\",\"dweb:/ipfs/QmSQtjPankaurKEbKrf2M1bLe3TaPFvdHxUdmaRYgZ4TG4\"]},\"project:/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0x5555e072e755dea4ffcd4c0c74d8ca8e7f782d462e049c8eb09171b0edc38394\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://25b7c8e97377da22641038a58b1f05a719634241887839874191012a203dbfcf\",\"dweb:/ipfs/QmbvMjTbm4gpPaxSBGetBYSJs2SQesAzjEp66F9w8JoZhG\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"project:/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x0182f29b230b034686dc505935ca0a1635fc537274bb592393a6e259010be08b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c728b787a7575bbfab0e6c24b18ccd29e457f5797611027af3f8ca664e94dcc\",\"dweb:/ipfs/QmXxAWjWjLdEdZQVAJyEYcBtiZBdNK7c5CfDC5UjaN3yZQ\"]},\"project:/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xc179b68b0641e7fa8873d77a4f3bb1116533e5da1120683fe5ee4bb6419d38d2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b888e81e39cc519e56ac10553756c059e18cbea45debb7113c6a1c86008a96c6\",\"dweb:/ipfs/QmWeWRsF52zk122qmxjpVePSRvdXjfDZzDY1ucdFtDMEjh\"]},\"project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xac57bbc7e9432bf926d4f9913b71301b18b4519de12e22892ebbc646d43b88c5\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4a18f0c241ee2236bc5ec588718601242cec0b20fb9f3d432272264f2330dd36\",\"dweb:/ipfs/QmSjhobAGMzCqpyf1oWXjGF6bH8RwWVcKYT9oRDLAWUEi3\"]},\"project:/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"project:/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"project:/contracts/interfaces/tokens/IPureSuperToken.sol\":{\"keccak256\":\"0x6249e6cf12ecade1050abb3f792fe16fae612f752d1e4619b6e4b838729133a4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ec270844dc4fb902a225f3f21abc4edead9cb6c5d71cd475a0d71844fb46bfd2\",\"dweb:/ipfs/QmWyqt8UVZLrUxEwbDsnwe7ECJV9nYdW6rHWJkjUubQNjo\"]},\"project:/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x03d0c332b2dec2453fe1dfa879cb40cba5075a02f4b08740f0e6ba10f80bd577\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c66ae1ec3af394f3062a8125068d94272527d982ba0da94811ea308793d29364\",\"dweb:/ipfs/QmdGKjBHQSoRLMuWHwcXibftc9gYA3wxg4L9Htqog1rHVw\"]},\"project:/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"project:/contracts/interfaces/utils/IRelayRecipient.sol\":{\"keccak256\":\"0x48be4e1e60309d0dda0a0b41d7f3c1cbb69165aafd5de020c30ffef2c7fe710e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://662d81566b9035066141f1de7acfd04681b7192bcad19779f057ae0207aae96b\",\"dweb:/ipfs/QmQuahuqDrnccGdZBCgWMjV8mfVLJBqngr8yhTDwdvkyzw\"]},\"project:/contracts/interfaces/utils/IResolver.sol\":{\"keccak256\":\"0xfdec27f82b1d1e5b721ca1256e9f1ecace22bda219ea5afcf5b92b13376996ab\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a892259cfc02cc286c5b5a6a951df3883eca62367731685154fed2b76728a71c\",\"dweb:/ipfs/QmTbjWsLvdQo7rkMaAHXiLMyLdjxG6Qs9voky7yDa1H2NW\"]},\"project:/contracts/libs/BaseRelayRecipient.sol\":{\"keccak256\":\"0x02f3971397edcb37fc2e814d3009d58fa1ad2d0ad04c608d54c6102518f128df\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5b0794a095f68a7cbc90e6f5f3e02532428f6f58dc2f0c6ca6618eb12b386ec9\",\"dweb:/ipfs/QmQZnjKatSYDrQkHPjN2fJc3vMLMWVcPTJhcNPSV7knXDn\"]},\"project:/contracts/libs/CallUtils.sol\":{\"keccak256\":\"0x9bf4c3250a0d7439a6181322fd1eec50bd89d926b8000ab44041c4a5f80326f1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://25f82bdee34b7a772cd8bef8784d1eac2be446b57b2170aa745aae672212626d\",\"dweb:/ipfs/QmXVtqbBGEqtrprbhZHGKordVQoHtYzCw7Q9S4vW6mPssy\"]},\"project:/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0x599a2fdc2fbe0a6d1fca99ef79e98c0227661d842bb3418b27bc2a24a48d16cd\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://05268e8b1238c42c8a2e289bc92db22018336f929a877a093a847b67bc824e52\",\"dweb:/ipfs/QmTyFRLKLgicWa2HAKeQeuURxLWVZnPR7rPUg2dbapLCFA\"]},\"project:/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"project:/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"project:/contracts/libs/SafeGasLibrary.sol\":{\"keccak256\":\"0x7abd4d1f45d303f80a042d8f67122662a56ae17b70bd6e263beb691064efc85e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc8615b2d9740bb2e73812264f176d38b022a80c3f9ef2a358c129e129a92a23\",\"dweb:/ipfs/QmUjaGTJKnvQPx1L9AikP7uYTTnbRCtTZKFdY1fp3ErAqq\"]},\"project:/contracts/libs/SlotsBitmapLibrary.sol\":{\"keccak256\":\"0xbd8819553096b1459b03709e4806b80781262fba2ea2feb5299bf60aab0f1638\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://12ded145d853d1e9491d733c05772ae432f53f9da7d1f50ce0effa9ddeb74f38\",\"dweb:/ipfs/QmWgwDjF1dnp4tyrE2DRQsubhHZ741ifc92qvgEdWR3FRb\"]},\"project:/contracts/superfluid/ConstantInflowNFT.sol\":{\"keccak256\":\"0x81e3a78e63de3ea141b2e0cfb700550bcf9bb804598aed72081f5d8209184e22\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e56c81d1dc30fe1e31dfe671b5598b6e0b1a6aa29d654d0738e59aecf6d237f8\",\"dweb:/ipfs/QmTa7qwbYywqnryVdSvGo39kYrD3GzGtRhiaqa5fRrE2mS\"]},\"project:/contracts/superfluid/ConstantOutflowNFT.sol\":{\"keccak256\":\"0xe021036be9660ad6d119683d092e1116200656788f4f7ed52caeb627764443d4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://2376c0ce6d35ba71bc3c098f1a6e3a820043bc300901e136bd4913760940d7b3\",\"dweb:/ipfs/QmdWUeYMr1zt5wf4KH8QZrm66hcnTYSkQP3VEKkNGsgE6W\"]},\"project:/contracts/superfluid/FlowNFTBase.sol\":{\"keccak256\":\"0x9c94add8ad61c67af3117de4c87a7a7d9cf96b45da5c259e7747f173a4d625ac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e44e1f7d7c8880ffeea6bd3419f91610bd76d2f524d2efaf358adbc93b621a47\",\"dweb:/ipfs/QmZPCwkMhduohyse2C9cnGK4P5Wy1TiAdwny1diZmfJb3g\"]},\"project:/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":{\"keccak256\":\"0x6e66ecd16b8d015b1fdee6964f5502b8e88a227ba66b6e8f8a9c0fcc5dbe9d99\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7f8ea8d9359fefb181cb32a4ffc4a4e9e69b1a06d81be273bb84850ed3138660\",\"dweb:/ipfs/QmSyDFmna8P5oMhTo3NGYNHmM4LJGKcqWPQun6A274FyyK\"]},\"project:/contracts/superfluid/SuperToken.sol\":{\"keccak256\":\"0x7cfcf8df2ee575327124a7d37e41b28c773ebfb30a6a38e26be9f5b2ed6a0b68\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://64c2ec16874f951ed858608cb0e9df513781dfa366b4eb00909f673e880ac4ba\",\"dweb:/ipfs/QmfUmgaBMisrvRc5W9pUReEwNjM5Yv96Lemck6LjSHt9aE\"]},\"project:/contracts/superfluid/SuperTokenFactory.sol\":{\"keccak256\":\"0x894b79ff08ed3633600033f7b2788a2738fc01d0a97c56095e9866ecbfda1634\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c6801733b8668eed38dba8352db2fb8922cc9d9b974ef1bdf8a4dfd7a2a04422\",\"dweb:/ipfs/QmPioUKUhyLTUJfTLKz8w8jSyb8xKUwTD6THeLW1xoh2qK\"]},\"project:/contracts/superfluid/Superfluid.sol\":{\"keccak256\":\"0xb48128b3bbe26a3754d76b00b6faa8d5ece6f08fa94dfdf6ab815a149eb893c8\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://3de7b0c312ba9422a7ec48161de0cb7680e7359c7bf43139ed390a74af2b6ab0\",\"dweb:/ipfs/QmPTZzdUzDf7bBRoMTMskax3nSJHtURLSZZPwJhxKcTFmW\"]},\"project:/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0xfba471c15cabe1ba7b2de85f5bfa633349fbfad47938c16f36e45d69acca53fa\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4c6c08de770cf67b5420e826ddc29e41cc759e142e7a5cb9fb8f985d54cf076d\",\"dweb:/ipfs/QmP9KQb3kRmVM1kKNHU2LzcrxkRvKuMiF8X6kV1z2Z9aY8\"]},\"project:/contracts/tokens/PureSuperToken.sol\":{\"keccak256\":\"0x0e53b1a0a025244e219d440eec775c0675f9385a5f140e3a0e0063951691db21\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5e06ba098daff93ca1ccd2015509da1b54afbe74fc1521f023f6aad3b587fa3a\",\"dweb:/ipfs/Qmc7eYAR6XRFsxftRbify2dodfmyXsKLbQGJwaWzVXaY6M\"]},\"project:/contracts/tokens/SETH.sol\":{\"keccak256\":\"0xab19145343aff8f9108707eec0b5a2ca5455717f749de25e9edf84ca54fe4ff8\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ee4ae5efcd198010bb7a11c02b69639cbf0f7906d3be969eeedd51016505fa08\",\"dweb:/ipfs/QmSFxLdhrjSqxXMpwpQAreRa6JdgK92K8UB5i6Wr8zRaPQ\"]},\"project:/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"project:/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x556040f5f2bfda069dd867d52b67b4b6a8e3d2955beac16d4156d91559bbdeac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://13d190401b4f36f3c0977e0eadb9c774173bcbc2552d72de5bd6e7803d67c996\",\"dweb:/ipfs/QmfBTdKGzmbbjRxca5XLwpE2FX3S8onGLNHNpMpqWqjY4m\"]},\"project:/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]},\"project:/contracts/utils/CFAv1Forwarder.sol\":{\"keccak256\":\"0x616206de4f183b73b08742e93473c8c3c6b0446197728bcbb01c84cc8d01d951\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7eabc658eed43e05ffc7851d07182a86900921448dc01f86d92676d34f50df13\",\"dweb:/ipfs/QmRWtcJAvdkBQfPSroYccCSHBN5yQnNdsMmTnQqdqawpJs\"]},\"project:/contracts/utils/Resolver.sol\":{\"keccak256\":\"0x0be579425f861178f2f587248c915c099759218355503e3a6a5fa9c3bb836cd3\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://adb536d6db2194e0429c97d85c3f7b30a785e8dc776790eddac7eafcf6d8fe3b\",\"dweb:/ipfs/QmYpeX3AQDoVsjCnxPZtbUCk9sGv1WJR5GAJDTGoUhQFYG\"]},\"project:/contracts/utils/SuperfluidFrameworkDeployer.sol\":{\"keccak256\":\"0x9664abc6122316171ba20fc3c8dc967e0a725d86db44622a36e7eca6c0f5add0\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://dc5c7c2de800615d30410b9d0a50841c4e3d6293b59792ca06efe5362125a671\",\"dweb:/ipfs/QmfBTB1xmAU4n66oK2ikpgP8hEZSbK6VAALM3P1Xgs8h9t\"]},\"project:/contracts/utils/SuperfluidLoader.sol\":{\"keccak256\":\"0xab39b1287509320153196678b730aa82258bfbeb4062a03598e8b065d2c4d854\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e691d3270f65bf1c0d78b37afa038ffda86533ce867ed7b24b376b0a69923eba\",\"dweb:/ipfs/QmTuXnfr7bZvXi9Asbx5U9Y4R8SHTLmaoxUwGD3Vm9pLFx\"]},\"project:/contracts/utils/TestGovernance.sol\":{\"keccak256\":\"0x5595318f324ab71b7a6a528bb7dcccef7591eb007ee3eb006521af6a1cff444d\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d54568ec5b5d13312affc1336765fa022b653bbee6b2c77eccc2f1c4b56e8d3f\",\"dweb:/ipfs/QmPYEA8WmCJ3va2amNvH49S5rUYeVnWUREuE1zyYaTGqtL\"]},\"project:/contracts/utils/TestResolver.sol\":{\"keccak256\":\"0xee5e74ccb0c13b547b6aee6dfc8d2fee2c7401e354a8a8f5ab533cc9945d2b3e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://bf067309bb53df3ced6b4f314d2be19c00ecdc7d2b45056dc809d44360fa5f80\",\"dweb:/ipfs/QmerytqDLpcRiX8TRGfXWbiN4MUHETynPwWg67zwepMQD9\"]}},\"version\":1}",
  "bytecode": "0x61323f61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80630243059d146100455780632f0f279d14610081575b600080fd5b81801561005157600080fd5b50610065610060366004610175565b6100a1565b6040516001600160a01b03909116815260200160405180910390f35b81801561008d57600080fd5b5061006561009c3660046101d1565b610101565b6000848484846040516100b390610143565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f0801580156100f7573d6000803e3d6000fd5b5095945050505050565b60008160405161011090610150565b6001600160a01b039091168152602001604051809103906000f08015801561013c573d6000803e3d6000fd5b5092915050565b61213c806101f683390190565b610ed88061233283390190565b6001600160a01b038116811461017257600080fd5b50565b6000806000806080858703121561018b57600080fd5b84356101968161015d565b935060208501356101a68161015d565b925060408501356101b68161015d565b915060608501356101c68161015d565b939692955090935050565b6000602082840312156101e357600080fd5b81356101ee8161015d565b939250505056fe6101006040523480156200001257600080fd5b506040516200213c3803806200213c83398101604081905262000035916200010d565b6001600160a01b0380851660a052831660808190526040805163132075a760e31b81529051869286928692869291639903ad3891600480830192600092919082900301818387803b1580156200008a57600080fd5b505af11580156200009f573d6000803e3d6000fd5b5050506001600160a01b0380841660c05282811660e052608051604051911691507fc13fb19d60857980e565bf5dae406b8802d3c1cec50c6156b30b12b87402978390600090a2505050505050505062000175565b6001600160a01b03811681146200010a57600080fd5b50565b600080600080608085870312156200012457600080fd5b84516200013181620000f4565b60208601519094506200014481620000f4565b60408601519093506200015781620000f4565b60608601519092506200016a81620000f4565b939692955090935050565b60805160a05160c05160e051611f2b62000211600039600081816101f00152818161098c0152610b540152600081816101c90152818161086e0152610a55015260008181610142015281816107390152610cff01526000818161021c0152818161029d0152818161042901528181610782015281816108a0015281816109be01528181610abd01528181610fc6015261127b0152611f2b6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638129fc1c116100a2578063a6d0c53411610071578063a6d0c53414610253578063bab74c8914610266578063cbf927b314610298578063d412d344146102bf578063eff0a89d146102d257600080fd5b80638129fc1c146102125780639470a5b21461021a57806397e011ed146102405780639903ad381461021257600080fd5b806350d75d25116100de57806350d75d251461018e57806352d1902d146101965780635365d19f146101c45780635a7792df146101eb57600080fd5b8063151188dc1461011057806320bc442514610140578063431f1481146101665780634695195414610179575b600080fd5b61012361011e366004611583565b6102fe565b6040516001600160a01b0390911681526020015b60405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610123565b610123610174366004611604565b6106b1565b61018c610187366004611583565b61072e565b005b610123610bbe565b6040517fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6208152602001610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c610bed565b7f0000000000000000000000000000000000000000000000000000000000000000610123565b61018c61024e366004611697565b610cfb565b61012361026136600461171b565b610f10565b610279610274366004611583565b611161565b604080516001600160a01b039093168352901515602083015201610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c6102cd366004611583565b611264565b6101236102e0366004611583565b6001600160a01b039081166000908152600160205260409020541690565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610350576040516306ce6e6d60e21b815260040160405180910390fd5b6001600160a01b03808316600090815260016020526040902054839116801561038c576040516348eb3cb960e11b815260040160405180910390fd5b604080516001600160a01b0384166020820152600091016040516020818303038152906040528051906020012090506000816040516103ca90611554565b8190604051809103906000f59050801580156103ea573d6000803e3d6000fd5b506001600160a01b038581166000908152600160205260409081902080546001600160a01b0319168484169081179091559051634a0687ef60e01b81527f00000000000000000000000000000000000000000000000000000000000000009092166004830152919250634a0687ef90602401600060405180830381600087803b15801561047657600080fd5b505af115801561048a573d6000803e3d6000fd5b5050505060008190506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f791906117c1565b90506000886001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105619190810190611818565b90506000896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb9190810190611818565b9050836001600160a01b03166342fe09808b85856040516020016105ef91906118ba565b6040516020818303038152906040528560405160200161060f91906118e8565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161063d9493929190611939565b600060405180830381600087803b15801561065757600080fd5b505af115801561066b573d6000803e3d6000fd5b50506040516001600160a01b03871692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2509198975050505050505050565b600061072387886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906117c1565b8888888888610f10565b979650505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107775760405163478b8e8360e01b815260040160405180910390fd5b6107808161131a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611978565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108639190611978565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415806109b757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611978565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190611978565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614155b15610bbb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e9190611978565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611978565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610ba257600080fd5b505af1158015610bb6573d6000803e3d6000fd5b505050505b50565b6000610be87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b600054610100900460ff1615808015610c0d5750600054600160ff909116105b80610c275750303b158015610c27575060005460ff166001145b610c8f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610cb2576000805461ff0019166101001790555b8015610bbb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f9190611978565b9050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190611978565b6001600160a01b0316336001600160a01b031614610e1457604051632bf2a63360e21b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031615610e66576040516348eb3cb960e11b815260040160405180910390fd5b60005b82811015610f0a57838382818110610e8357610e83611995565b9050604002016020016020810190610e9b9190611583565b60016000868685818110610eb157610eb1611995565b610ec79260206040909202019081019150611583565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610f02816119ab565b915050610e69565b50505050565b60006001600160a01b038816610f395760405163182e4f4160e11b815260040160405180910390fd5b6000866002811115610f4d57610f4d6119d2565b03610f6b5760405163c4901a4360e01b815260040160405180910390fd5b6001866002811115610f7f57610f7f6119d2565b03611037576000604051610f9290611554565b604051809103906000f080158015610fae573d6000803e3d6000fd5b50604051634a0687ef60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291925090821690634a0687ef90602401600060405180830381600087803b15801561101657600080fd5b505af115801561102a573d6000803e3d6000fd5b50505050809150506110bb565b600060405161104590611561565b604051809103906000f080158015611061573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561109f57600080fd5b505af11580156110b3573d6000803e3d6000fd5b509293505050505b6040516285fc1360e71b81526001600160a01b038216906342fe0980906110f0908b908b908a908a908a908a90600401611a11565b600060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2979650505050505050565b6001600160a01b0380821660009081526001602052604081205490918291168015611192578092506001915061125e565b6000604051806020016111a490611554565b601f1982820381018352601f9091011660408181526001600160a01b03881660208301529192506001600160f81b03199130910160405160208183030381529060405280519060200120838051906020012060405160200161123d94939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012060001c935060009250505b50915091565b604051634a0687ef60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152829190821690634a0687ef90602401600060405180830381600087803b1580156112ca57600080fd5b505af11580156112de573d6000803e3d6000fd5b50506040516001600160a01b03851692507f437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a59150600090a25050565b60006113447f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b03160361139a5760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401610c86565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fc9190611a5f565b7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620146114765760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401610c86565b6001600160a01b03811630036114ce5760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f70000000000000006044820152606401610c86565b6114f6817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620604080519182526001600160a01b038416602083015201610cf0565b61024a80611a7983390190565b61023380611cc383390190565b6001600160a01b0381168114610bbb57600080fd5b60006020828403121561159557600080fd5b81356115a08161156e565b9392505050565b8035600381106115b657600080fd5b919050565b60008083601f8401126115cd57600080fd5b50813567ffffffffffffffff8111156115e557600080fd5b6020830191508360208285010111156115fd57600080fd5b9250929050565b6000806000806000806080878903121561161d57600080fd5b86356116288161156e565b9550611636602088016115a7565b9450604087013567ffffffffffffffff8082111561165357600080fd5b61165f8a838b016115bb565b9096509450606089013591508082111561167857600080fd5b5061168589828a016115bb565b979a9699509497509295939492505050565b600080602083850312156116aa57600080fd5b823567ffffffffffffffff808211156116c257600080fd5b818501915085601f8301126116d657600080fd5b8135818111156116e557600080fd5b8660208260061b85010111156116fa57600080fd5b60209290920196919550909350505050565b60ff81168114610bbb57600080fd5b600080600080600080600060a0888a03121561173657600080fd5b87356117418161156e565b965060208801356117518161170c565b955061175f604089016115a7565b9450606088013567ffffffffffffffff8082111561177c57600080fd5b6117888b838c016115bb565b909650945060808a01359150808211156117a157600080fd5b506117ae8a828b016115bb565b989b979a50959850939692959293505050565b6000602082840312156117d357600080fd5b81516115a08161170c565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561180f5781810151838201526020016117f7565b50506000910152565b60006020828403121561182a57600080fd5b815167ffffffffffffffff8082111561184257600080fd5b818401915084601f83011261185657600080fd5b815181811115611868576118686117de565b604051601f8201601f19908116603f01168101908382118183101715611890576118906117de565b816040528281528760208487010111156118a957600080fd5b6107238360208301602088016117f4565b65029bab832b9160d51b8152600082516118db8160068501602087016117f4565b9190910160060192915050565b600082516118fa8184602087016117f4565b600f60fb1b920191825250600101919050565b600081518084526119258160208601602086016117f4565b601f01601f19169290920160200192915050565b6001600160a01b038516815260ff841660208201526080604082018190526000906119669083018561190d565b8281036060840152610723818561190d565b60006020828403121561198a57600080fd5b81516115a08161156e565b634e487b7160e01b600052603260045260246000fd5b6000600182016119cb57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff86166020820152608060408201819052600090611a3f90830186886119e8565b8281036060840152611a528185876119e8565b9998505050505050505050565b600060208284031215611a7157600080fd5b505191905056fe608060405234801561001057600080fd5b5061022a806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003957610031565b366100315761002f610059565b005b61002f610059565b34801561004557600080fd5b5061002f6100543660046101c4565b61006b565b610069610064610171565b6101a0565b565b6001600160a01b0381166100c65760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101465760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a6564000060448201526064016100bd565b61016e817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b600061019b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156101bf573d6000f35b3d6000fd5b6000602082840312156101d657600080fd5b81356001600160a01b03811681146101ed57600080fd5b939250505056fea26469706673582212207b854fb470c84fe2f7ac8508498d435a5f32ef93071c687a148ef683fa3ede9964736f6c63430008130033608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea2646970667358221220f0edc1277d97c389cb71fad47feaa4ac6f1ef7fd921c88d595e039aff6f2fde364736f6c63430008130033a264697066735822122005759cddd5ae40e61e3741ac4947507d760b879f14eecc4930b5d8c77d785fff64736f6c6343000813003360806040523480156200001157600080fd5b5060405162000ed838038062000ed88339810160408190526200003491620001a2565b6200004160003362000055565b6200004e60008262000055565b50620001d4565b62000061828262000065565b5050565b62000071828262000090565b60008281526001602052604090206200008b908262000130565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000061576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000ec3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000147836001600160a01b03841662000150565b90505b92915050565b600081815260018301602052604081205462000199575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200014a565b5060006200014a565b600060208284031215620001b557600080fd5b81516001600160a01b0381168114620001cd57600080fd5b9392505050565b610cf480620001e46000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639010d07c116100715780639010d07c1461017857806391d148541461018b578063a217fddf1461019e578063a815ff15146101a6578063ca15c873146101b9578063d547741f146101cc57600080fd5b806301ffc9a7146100b9578063248a9ca3146100e15780632f2ff15d1461011257806336568abe14610127578063693ec85e1461013a5780637048027514610165575b600080fd5b6100cc6100c736600461098f565b6101df565b60405190151581526020015b60405180910390f35b6101046100ef3660046109b9565b60009081526020819052604090206001015490565b6040519081526020016100d8565b6101256101203660046109ee565b61020a565b005b6101256101353660046109ee565b610234565b61014d610148366004610a63565b6102b7565b6040516001600160a01b0390911681526020016100d8565b610125610173366004610aa5565b6102ec565b61014d610186366004610ac0565b6102fa565b6100cc6101993660046109ee565b610319565b610104600081565b6101256101b4366004610ae2565b610342565b6101046101c73660046109b9565b61042a565b6101256101da3660046109ee565b610441565b60006001600160e01b03198216635a05180f60e01b1480610204575061020482610466565b92915050565b6000828152602081905260409020600101546102258161049b565b61022f83836104a5565b505050565b6001600160a01b03811633146102a95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102b382826104c7565b5050565b6000600283836040516102cb929190610b36565b908152604051908190036020019020546001600160a01b0316905092915050565b6102f76000826104e9565b50565b600082815260016020526040812061031290836104f3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61034d600033610319565b6103925760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b60448201526064016102a0565b80600284846040516103a5929190610b36565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556103e29084908490610b36565b6040519081900381206001600160a01b0383168252907f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999060200160405180910390a2505050565b6000818152600160205260408120610204906104ff565b60008281526020819052604090206001015461045c8161049b565b61022f83836104c7565b60006001600160e01b03198216637965db0b60e01b148061020457506301ffc9a760e01b6001600160e01b0319831614610204565b6102f78133610509565b6104af8282610562565b600082815260016020526040902061022f90826105e6565b6104d182826105fb565b600082815260016020526040902061022f9082610660565b6102b382826104a5565b60006103128383610675565b6000610204825490565b6105138282610319565b6102b3576105208161069f565b61052b8360206106b1565b60405160200161053c929190610b6a565b60408051601f198184030181529082905262461bcd60e51b82526102a091600401610bdf565b61056c8282610319565b6102b3576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556105a23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610312836001600160a01b03841661084d565b6106058282610319565b156102b3576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610312836001600160a01b03841661089c565b600082600001828154811061068c5761068c610c12565b9060005260206000200154905092915050565b60606102046001600160a01b03831660145b606060006106c0836002610c3e565b6106cb906002610c55565b67ffffffffffffffff8111156106e3576106e3610c68565b6040519080825280601f01601f19166020018201604052801561070d576020820181803683370190505b509050600360fc1b8160008151811061072857610728610c12565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061075757610757610c12565b60200101906001600160f81b031916908160001a905350600061077b846002610c3e565b610786906001610c55565b90505b60018111156107fe576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106107ba576107ba610c12565b1a60f81b8282815181106107d0576107d0610c12565b60200101906001600160f81b031916908160001a90535060049490941c936107f781610c7e565b9050610789565b5083156103125760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102a0565b600081815260018301602052604081205461089457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610204565b506000610204565b600081815260018301602052604081205480156109855760006108c0600183610c95565b85549091506000906108d490600190610c95565b90508181146109395760008660000182815481106108f4576108f4610c12565b906000526020600020015490508087600001848154811061091757610917610c12565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061094a5761094a610ca8565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610204565b6000915050610204565b6000602082840312156109a157600080fd5b81356001600160e01b03198116811461031257600080fd5b6000602082840312156109cb57600080fd5b5035919050565b80356001600160a01b03811681146109e957600080fd5b919050565b60008060408385031215610a0157600080fd5b82359150610a11602084016109d2565b90509250929050565b60008083601f840112610a2c57600080fd5b50813567ffffffffffffffff811115610a4457600080fd5b602083019150836020828501011115610a5c57600080fd5b9250929050565b60008060208385031215610a7657600080fd5b823567ffffffffffffffff811115610a8d57600080fd5b610a9985828601610a1a565b90969095509350505050565b600060208284031215610ab757600080fd5b610312826109d2565b60008060408385031215610ad357600080fd5b50508035926020909101359150565b600080600060408486031215610af757600080fd5b833567ffffffffffffffff811115610b0e57600080fd5b610b1a86828701610a1a565b9094509250610b2d9050602085016109d2565b90509250925092565b8183823760009101908152919050565b60005b83811015610b61578181015183820152602001610b49565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610ba2816017850160208801610b46565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610bd3816028840160208801610b46565b01602801949350505050565b6020815260008251806020840152610bfe816040850160208701610b46565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761020457610204610c28565b8082018082111561020457610204610c28565b634e487b7160e01b600052604160045260246000fd5b600081610c8d57610c8d610c28565b506000190190565b8181038181111561020457610204610c28565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220f903e1257afbda8ab3849b4183c9f3ec485e41bf0284015ee95ba8010101cd9364736f6c63430008130033a26469706673582212200ab8e730a1d16f6b9e26d852cca697dfd35513724bf0103ee8588817684dcca164736f6c63430008130033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80630243059d146100455780632f0f279d14610081575b600080fd5b81801561005157600080fd5b50610065610060366004610175565b6100a1565b6040516001600160a01b03909116815260200160405180910390f35b81801561008d57600080fd5b5061006561009c3660046101d1565b610101565b6000848484846040516100b390610143565b6001600160a01b039485168152928416602084015290831660408301529091166060820152608001604051809103906000f0801580156100f7573d6000803e3d6000fd5b5095945050505050565b60008160405161011090610150565b6001600160a01b039091168152602001604051809103906000f08015801561013c573d6000803e3d6000fd5b5092915050565b61213c806101f683390190565b610ed88061233283390190565b6001600160a01b038116811461017257600080fd5b50565b6000806000806080858703121561018b57600080fd5b84356101968161015d565b935060208501356101a68161015d565b925060408501356101b68161015d565b915060608501356101c68161015d565b939692955090935050565b6000602082840312156101e357600080fd5b81356101ee8161015d565b939250505056fe6101006040523480156200001257600080fd5b506040516200213c3803806200213c83398101604081905262000035916200010d565b6001600160a01b0380851660a052831660808190526040805163132075a760e31b81529051869286928692869291639903ad3891600480830192600092919082900301818387803b1580156200008a57600080fd5b505af11580156200009f573d6000803e3d6000fd5b5050506001600160a01b0380841660c05282811660e052608051604051911691507fc13fb19d60857980e565bf5dae406b8802d3c1cec50c6156b30b12b87402978390600090a2505050505050505062000175565b6001600160a01b03811681146200010a57600080fd5b50565b600080600080608085870312156200012457600080fd5b84516200013181620000f4565b60208601519094506200014481620000f4565b60408601519093506200015781620000f4565b60608601519092506200016a81620000f4565b939692955090935050565b60805160a05160c05160e051611f2b62000211600039600081816101f00152818161098c0152610b540152600081816101c90152818161086e0152610a55015260008181610142015281816107390152610cff01526000818161021c0152818161029d0152818161042901528181610782015281816108a0015281816109be01528181610abd01528181610fc6015261127b0152611f2b6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638129fc1c116100a2578063a6d0c53411610071578063a6d0c53414610253578063bab74c8914610266578063cbf927b314610298578063d412d344146102bf578063eff0a89d146102d257600080fd5b80638129fc1c146102125780639470a5b21461021a57806397e011ed146102405780639903ad381461021257600080fd5b806350d75d25116100de57806350d75d251461018e57806352d1902d146101965780635365d19f146101c45780635a7792df146101eb57600080fd5b8063151188dc1461011057806320bc442514610140578063431f1481146101665780634695195414610179575b600080fd5b61012361011e366004611583565b6102fe565b6040516001600160a01b0390911681526020015b60405180910390f35b7f0000000000000000000000000000000000000000000000000000000000000000610123565b610123610174366004611604565b6106b1565b61018c610187366004611583565b61072e565b005b610123610bbe565b6040517fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6208152602001610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c610bed565b7f0000000000000000000000000000000000000000000000000000000000000000610123565b61018c61024e366004611697565b610cfb565b61012361026136600461171b565b610f10565b610279610274366004611583565b611161565b604080516001600160a01b039093168352901515602083015201610137565b6101237f000000000000000000000000000000000000000000000000000000000000000081565b61018c6102cd366004611583565b611264565b6101236102e0366004611583565b6001600160a01b039081166000908152600160205260409020541690565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610350576040516306ce6e6d60e21b815260040160405180910390fd5b6001600160a01b03808316600090815260016020526040902054839116801561038c576040516348eb3cb960e11b815260040160405180910390fd5b604080516001600160a01b0384166020820152600091016040516020818303038152906040528051906020012090506000816040516103ca90611554565b8190604051809103906000f59050801580156103ea573d6000803e3d6000fd5b506001600160a01b038581166000908152600160205260409081902080546001600160a01b0319168484169081179091559051634a0687ef60e01b81527f00000000000000000000000000000000000000000000000000000000000000009092166004830152919250634a0687ef90602401600060405180830381600087803b15801561047657600080fd5b505af115801561048a573d6000803e3d6000fd5b5050505060008190506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f791906117c1565b90506000886001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105619190810190611818565b90506000896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105cb9190810190611818565b9050836001600160a01b03166342fe09808b85856040516020016105ef91906118ba565b6040516020818303038152906040528560405160200161060f91906118e8565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161063d9493929190611939565b600060405180830381600087803b15801561065757600080fd5b505af115801561066b573d6000803e3d6000fd5b50506040516001600160a01b03871692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2509198975050505050505050565b600061072387886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071991906117c1565b8888888888610f10565b979650505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107775760405163478b8e8360e01b815260040160405180910390fd5b6107808161131a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108029190611978565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108639190611978565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415806109b757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109209190611978565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561095d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109819190611978565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614155b15610bbb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3e9190611978565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3d9190611978565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610ba257600080fd5b505af1158015610bb6573d6000803e3d6000fd5b505050505b50565b6000610be87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b600054610100900460ff1615808015610c0d5750600054600160ff909116105b80610c275750303b158015610c27575060005460ff166001145b610c8f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610cb2576000805461ff0019166101001790555b8015610bbb576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7f9190611978565b9050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de39190611978565b6001600160a01b0316336001600160a01b031614610e1457604051632bf2a63360e21b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031615610e66576040516348eb3cb960e11b815260040160405180910390fd5b60005b82811015610f0a57838382818110610e8357610e83611995565b9050604002016020016020810190610e9b9190611583565b60016000868685818110610eb157610eb1611995565b610ec79260206040909202019081019150611583565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610f02816119ab565b915050610e69565b50505050565b60006001600160a01b038816610f395760405163182e4f4160e11b815260040160405180910390fd5b6000866002811115610f4d57610f4d6119d2565b03610f6b5760405163c4901a4360e01b815260040160405180910390fd5b6001866002811115610f7f57610f7f6119d2565b03611037576000604051610f9290611554565b604051809103906000f080158015610fae573d6000803e3d6000fd5b50604051634a0687ef60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291925090821690634a0687ef90602401600060405180830381600087803b15801561101657600080fd5b505af115801561102a573d6000803e3d6000fd5b50505050809150506110bb565b600060405161104590611561565b604051809103906000f080158015611061573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561109f57600080fd5b505af11580156110b3573d6000803e3d6000fd5b509293505050505b6040516285fc1360e71b81526001600160a01b038216906342fe0980906110f0908b908b908a908a908a908a90600401611a11565b600060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2979650505050505050565b6001600160a01b0380821660009081526001602052604081205490918291168015611192578092506001915061125e565b6000604051806020016111a490611554565b601f1982820381018352601f9091011660408181526001600160a01b03881660208301529192506001600160f81b03199130910160405160208183030381529060405280519060200120838051906020012060405160200161123d94939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012060001c935060009250505b50915091565b604051634a0687ef60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152829190821690634a0687ef90602401600060405180830381600087803b1580156112ca57600080fd5b505af11580156112de573d6000803e3d6000fd5b50506040516001600160a01b03851692507f437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a59150600090a25050565b60006113447f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b03160361139a5760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401610c86565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113fc9190611a5f565b7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620146114765760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401610c86565b6001600160a01b03811630036114ce5760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f70000000000000006044820152606401610c86565b6114f6817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620604080519182526001600160a01b038416602083015201610cf0565b61024a80611a7983390190565b61023380611cc383390190565b6001600160a01b0381168114610bbb57600080fd5b60006020828403121561159557600080fd5b81356115a08161156e565b9392505050565b8035600381106115b657600080fd5b919050565b60008083601f8401126115cd57600080fd5b50813567ffffffffffffffff8111156115e557600080fd5b6020830191508360208285010111156115fd57600080fd5b9250929050565b6000806000806000806080878903121561161d57600080fd5b86356116288161156e565b9550611636602088016115a7565b9450604087013567ffffffffffffffff8082111561165357600080fd5b61165f8a838b016115bb565b9096509450606089013591508082111561167857600080fd5b5061168589828a016115bb565b979a9699509497509295939492505050565b600080602083850312156116aa57600080fd5b823567ffffffffffffffff808211156116c257600080fd5b818501915085601f8301126116d657600080fd5b8135818111156116e557600080fd5b8660208260061b85010111156116fa57600080fd5b60209290920196919550909350505050565b60ff81168114610bbb57600080fd5b600080600080600080600060a0888a03121561173657600080fd5b87356117418161156e565b965060208801356117518161170c565b955061175f604089016115a7565b9450606088013567ffffffffffffffff8082111561177c57600080fd5b6117888b838c016115bb565b909650945060808a01359150808211156117a157600080fd5b506117ae8a828b016115bb565b989b979a50959850939692959293505050565b6000602082840312156117d357600080fd5b81516115a08161170c565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561180f5781810151838201526020016117f7565b50506000910152565b60006020828403121561182a57600080fd5b815167ffffffffffffffff8082111561184257600080fd5b818401915084601f83011261185657600080fd5b815181811115611868576118686117de565b604051601f8201601f19908116603f01168101908382118183101715611890576118906117de565b816040528281528760208487010111156118a957600080fd5b6107238360208301602088016117f4565b65029bab832b9160d51b8152600082516118db8160068501602087016117f4565b9190910160060192915050565b600082516118fa8184602087016117f4565b600f60fb1b920191825250600101919050565b600081518084526119258160208601602086016117f4565b601f01601f19169290920160200192915050565b6001600160a01b038516815260ff841660208201526080604082018190526000906119669083018561190d565b8281036060840152610723818561190d565b60006020828403121561198a57600080fd5b81516115a08161156e565b634e487b7160e01b600052603260045260246000fd5b6000600182016119cb57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff86166020820152608060408201819052600090611a3f90830186886119e8565b8281036060840152611a528185876119e8565b9998505050505050505050565b600060208284031215611a7157600080fd5b505191905056fe608060405234801561001057600080fd5b5061022a806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003957610031565b366100315761002f610059565b005b61002f610059565b34801561004557600080fd5b5061002f6100543660046101c4565b61006b565b610069610064610171565b6101a0565b565b6001600160a01b0381166100c65760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101465760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a6564000060448201526064016100bd565b61016e817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b600061019b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156101bf573d6000f35b3d6000fd5b6000602082840312156101d657600080fd5b81356001600160a01b03811681146101ed57600080fd5b939250505056fea26469706673582212207b854fb470c84fe2f7ac8508498d435a5f32ef93071c687a148ef683fa3ede9964736f6c63430008130033608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea2646970667358221220f0edc1277d97c389cb71fad47feaa4ac6f1ef7fd921c88d595e039aff6f2fde364736f6c63430008130033a264697066735822122005759cddd5ae40e61e3741ac4947507d760b879f14eecc4930b5d8c77d785fff64736f6c6343000813003360806040523480156200001157600080fd5b5060405162000ed838038062000ed88339810160408190526200003491620001a2565b6200004160003362000055565b6200004e60008262000055565b50620001d4565b62000061828262000065565b5050565b62000071828262000090565b60008281526001602052604090206200008b908262000130565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000061576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000ec3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000147836001600160a01b03841662000150565b90505b92915050565b600081815260018301602052604081205462000199575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200014a565b5060006200014a565b600060208284031215620001b557600080fd5b81516001600160a01b0381168114620001cd57600080fd5b9392505050565b610cf480620001e46000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639010d07c116100715780639010d07c1461017857806391d148541461018b578063a217fddf1461019e578063a815ff15146101a6578063ca15c873146101b9578063d547741f146101cc57600080fd5b806301ffc9a7146100b9578063248a9ca3146100e15780632f2ff15d1461011257806336568abe14610127578063693ec85e1461013a5780637048027514610165575b600080fd5b6100cc6100c736600461098f565b6101df565b60405190151581526020015b60405180910390f35b6101046100ef3660046109b9565b60009081526020819052604090206001015490565b6040519081526020016100d8565b6101256101203660046109ee565b61020a565b005b6101256101353660046109ee565b610234565b61014d610148366004610a63565b6102b7565b6040516001600160a01b0390911681526020016100d8565b610125610173366004610aa5565b6102ec565b61014d610186366004610ac0565b6102fa565b6100cc6101993660046109ee565b610319565b610104600081565b6101256101b4366004610ae2565b610342565b6101046101c73660046109b9565b61042a565b6101256101da3660046109ee565b610441565b60006001600160e01b03198216635a05180f60e01b1480610204575061020482610466565b92915050565b6000828152602081905260409020600101546102258161049b565b61022f83836104a5565b505050565b6001600160a01b03811633146102a95760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6102b382826104c7565b5050565b6000600283836040516102cb929190610b36565b908152604051908190036020019020546001600160a01b0316905092915050565b6102f76000826104e9565b50565b600082815260016020526040812061031290836104f3565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61034d600033610319565b6103925760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1030b71030b236b4b760511b60448201526064016102a0565b80600284846040516103a5929190610b36565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091556103e29084908490610b36565b6040519081900381206001600160a01b0383168252907f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999060200160405180910390a2505050565b6000818152600160205260408120610204906104ff565b60008281526020819052604090206001015461045c8161049b565b61022f83836104c7565b60006001600160e01b03198216637965db0b60e01b148061020457506301ffc9a760e01b6001600160e01b0319831614610204565b6102f78133610509565b6104af8282610562565b600082815260016020526040902061022f90826105e6565b6104d182826105fb565b600082815260016020526040902061022f9082610660565b6102b382826104a5565b60006103128383610675565b6000610204825490565b6105138282610319565b6102b3576105208161069f565b61052b8360206106b1565b60405160200161053c929190610b6a565b60408051601f198184030181529082905262461bcd60e51b82526102a091600401610bdf565b61056c8282610319565b6102b3576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556105a23390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610312836001600160a01b03841661084d565b6106058282610319565b156102b3576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610312836001600160a01b03841661089c565b600082600001828154811061068c5761068c610c12565b9060005260206000200154905092915050565b60606102046001600160a01b03831660145b606060006106c0836002610c3e565b6106cb906002610c55565b67ffffffffffffffff8111156106e3576106e3610c68565b6040519080825280601f01601f19166020018201604052801561070d576020820181803683370190505b509050600360fc1b8160008151811061072857610728610c12565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061075757610757610c12565b60200101906001600160f81b031916908160001a905350600061077b846002610c3e565b610786906001610c55565b90505b60018111156107fe576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106107ba576107ba610c12565b1a60f81b8282815181106107d0576107d0610c12565b60200101906001600160f81b031916908160001a90535060049490941c936107f781610c7e565b9050610789565b5083156103125760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102a0565b600081815260018301602052604081205461089457508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610204565b506000610204565b600081815260018301602052604081205480156109855760006108c0600183610c95565b85549091506000906108d490600190610c95565b90508181146109395760008660000182815481106108f4576108f4610c12565b906000526020600020015490508087600001848154811061091757610917610c12565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061094a5761094a610ca8565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610204565b6000915050610204565b6000602082840312156109a157600080fd5b81356001600160e01b03198116811461031257600080fd5b6000602082840312156109cb57600080fd5b5035919050565b80356001600160a01b03811681146109e957600080fd5b919050565b60008060408385031215610a0157600080fd5b82359150610a11602084016109d2565b90509250929050565b60008083601f840112610a2c57600080fd5b50813567ffffffffffffffff811115610a4457600080fd5b602083019150836020828501011115610a5c57600080fd5b9250929050565b60008060208385031215610a7657600080fd5b823567ffffffffffffffff811115610a8d57600080fd5b610a9985828601610a1a565b90969095509350505050565b600060208284031215610ab757600080fd5b610312826109d2565b60008060408385031215610ad357600080fd5b50508035926020909101359150565b600080600060408486031215610af757600080fd5b833567ffffffffffffffff811115610b0e57600080fd5b610b1a86828701610a1a565b9094509250610b2d9050602085016109d2565b90509250925092565b8183823760009101908152919050565b60005b83811015610b61578181015183820152602001610b49565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610ba2816017850160208801610b46565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610bd3816028840160208801610b46565b01602801949350505050565b6020815260008251806020840152610bfe816040850160208701610b46565b601f01601f19169190910160400192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761020457610204610c28565b8082018082111561020457610204610c28565b634e487b7160e01b600052604160045260246000fd5b600081610c8d57610c8d610c28565b506000190190565b8181038181111561020457610204610c28565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220f903e1257afbda8ab3849b4183c9f3ec485e41bf0284015ee95ba8010101cd9364736f6c63430008130033a26469706673582212200ab8e730a1d16f6b9e26d852cca697dfd35513724bf0103ee8588817684dcca164736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2510:120",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:120",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:86:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "136:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "145:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "148:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "138:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "138:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "138:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "95:5:120"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "106:5:120"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "121:3:120",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "126:1:120",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "117:3:120"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "117:11:120"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "130:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "113:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "113:19:120"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "102:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "102:31:120"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "92:2:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "92:42:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "85:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "85:50:120"
                  },
                  "nodeType": "YulIf",
                  "src": "82:70:120"
                }
              ]
            },
            "name": "validator_revert_contract_ISuperfluid",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:120",
                "type": ""
              }
            ],
            "src": "14:144:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "383:602:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "430:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "439:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "442:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "432:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "432:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "432:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "404:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "413:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "400:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "400:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "425:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "396:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:33:120"
                  },
                  "nodeType": "YulIf",
                  "src": "393:53:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "455:36:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "481:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "468:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "468:23:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "459:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "538:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "500:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:44:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "500:44:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "553:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "563:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "553:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "577:47:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "609:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "620:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "605:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "605:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "592:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:32:120"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "581:7:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "671:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "633:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:46:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "633:46:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "688:17:120",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "698:7:120"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "688:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "714:47:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "746:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "757:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "742:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "742:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "729:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "729:32:120"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "718:7:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "808:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "770:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:46:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "770:46:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "825:17:120",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "835:7:120"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "825:6:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "851:47:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "883:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "894:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "879:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "879:18:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "866:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "866:32:120"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "855:7:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "945:7:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "907:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:46:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "907:46:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "962:17:120",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "972:7:120"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "962:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ISuperfluid_$25106t_contract$_ISuperToken_$24454t_contract$_IConstantOutflowNFT_$23757t_contract$_IConstantInflowNFT_$23703",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "325:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "336:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "348:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "356:6:120",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "364:6:120",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "372:6:120",
                "type": ""
              }
            ],
            "src": "163:822:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1126:102:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1136:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1148:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1159:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1144:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1144:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1136:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1178:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1193:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1209:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1214:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1205:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1205:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1218:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1201:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1201:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1189:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1189:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1171:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1171:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1171:51:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_SuperTokenFactory_$41689__to_t_address__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1095:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1106:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1117:4:120",
                "type": ""
              }
            ],
            "src": "990:238:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1303:190:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1349:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1358:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1361:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1351:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1351:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1351:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1324:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1333:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1320:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1320:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1345:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1316:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "1313:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1374:36:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1400:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1387:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:23:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1378:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1457:5:120"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_ISuperfluid",
                      "nodeType": "YulIdentifier",
                      "src": "1419:37:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1419:44:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1419:44:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1472:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1482:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1472:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1269:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1280:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1292:6:120",
                "type": ""
              }
            ],
            "src": "1233:260:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1629:102:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1639:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1651:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1662:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1647:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1647:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1639:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1681:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1696:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1712:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1717:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1708:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1708:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1721:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1704:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1704:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1692:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1692:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1674:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1674:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1674:51:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_TestResolver_$49546__to_t_address__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1598:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1609:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1620:4:120",
                "type": ""
              }
            ],
            "src": "1498:233:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2020:280:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2030:27:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2042:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2053:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2038:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2038:19:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2030:4:120"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2066:29:120",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2084:3:120",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2089:1:120",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2080:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2080:11:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2093:1:120",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2076:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:19:120"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2070:2:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2111:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2126:6:120"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2134:2:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2122:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2122:15:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2104:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2104:34:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2104:34:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2158:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2169:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2154:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2154:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2178:6:120"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2186:2:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2174:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2174:15:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2147:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:43:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2147:43:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2210:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2221:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2206:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2206:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2230:6:120"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2238:2:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2226:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2226:15:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2199:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2199:43:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2199:43:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2262:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2273:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2258:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2258:18:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "2282:6:120"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2290:2:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2278:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2278:15:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2251:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2251:43:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2251:43:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ISuperfluid_$25106_t_contract$_ISuperToken_$24454_t_contract$_IConstantOutflowNFT_$23757_t_contract$_IConstantInflowNFT_$23703__to_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1965:9:120",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1976:6:120",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1984:6:120",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1992:6:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2000:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2011:4:120",
                "type": ""
              }
            ],
            "src": "1736:564:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2406:102:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2416:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2428:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2439:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2424:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2424:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2416:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2458:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2473:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2489:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2494:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2485:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2485:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2498:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2481:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2481:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2469:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2469:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2451:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2451:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2451:51:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2375:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2386:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2397:4:120",
                "type": ""
              }
            ],
            "src": "2305:203:120"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_ISuperfluid(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_ISuperfluid_$25106t_contract$_ISuperToken_$24454t_contract$_IConstantOutflowNFT_$23757t_contract$_IConstantInflowNFT_$23703(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ISuperfluid(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_ISuperfluid(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_contract_ISuperfluid(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_contract_ISuperfluid(value_3)\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_contract$_SuperTokenFactory_$41689__to_t_address__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_ISuperfluid(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_TestResolver_$49546__to_t_address__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ISuperfluid_$25106_t_contract$_ISuperToken_$24454_t_contract$_IConstantOutflowNFT_$23757_t_contract$_IConstantInflowNFT_$23703__to_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 120,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "13207:1087:114:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;13207:1087:114;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "13207:1087:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13494:434;;;;;;;;;;-1:-1:-1;13494:434:114;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1189:32:120;;;1171:51;;1159:2;1144:18;13494:434:114;;;;;;;14134:158;;;;;;;;;;-1:-1:-1;14134:158:114;;;;;:::i;:::-;;:::i;13494:434::-;13710:17;13797:5;13820:16;13854:18;13890:17;13758:163;;;;;:::i;:::-;-1:-1:-1;;;;;2122:15:120;;;2104:34;;2174:15;;;2169:2;2154:18;;2147:43;2226:15;;;2221:2;2206:18;;2199:43;2278:15;;;2273:2;2258:18;;2251:43;2053:3;2038:19;13758:163:114;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13739:182:114;13494:434;-1:-1:-1;;;;;13494:434:114:o;14134:158::-;14220:12;14268:16;14251:34;;;;;:::i;:::-;-1:-1:-1;;;;;1189:32:120;;;1171:51;;1159:2;1144:18;14251:34:114;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14244:41:114;14134:158;-1:-1:-1;;14134:158:114:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:144:120:-;-1:-1:-1;;;;;102:31:120;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:822::-;348:6;356;364;372;425:3;413:9;404:7;400:23;396:33;393:53;;;442:1;439;432:12;393:53;481:9;468:23;500:44;538:5;500:44;:::i;:::-;563:5;-1:-1:-1;620:2:120;605:18;;592:32;633:46;592:32;633:46;:::i;:::-;698:7;-1:-1:-1;757:2:120;742:18;;729:32;770:46;729:32;770:46;:::i;:::-;835:7;-1:-1:-1;894:2:120;879:18;;866:32;907:46;866:32;907:46;:::i;:::-;163:822;;;;-1:-1:-1;163:822:120;;-1:-1:-1;;163:822:120:o;1233:260::-;1292:6;1345:2;1333:9;1324:7;1320:23;1316:32;1313:52;;;1361:1;1358;1351:12;1313:52;1400:9;1387:23;1419:44;1457:5;1419:44;:::i;:::-;1482:5;1233:260;-1:-1:-1;;;1233:260:120:o",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity ^0.8.0;\n\nimport { CFAv1Forwarder } from \"./CFAv1Forwarder.sol\";\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {\n    ISuperfluid,\n    ISuperfluidToken,\n    Superfluid\n} from \"../superfluid/Superfluid.sol\";\nimport { TestGovernance } from \"./TestGovernance.sol\";\nimport {\n    ConstantFlowAgreementV1\n} from \"../agreements/ConstantFlowAgreementV1.sol\";\nimport {\n    ConstantOutflowNFT,\n    IConstantOutflowNFT\n} from \"../superfluid/ConstantOutflowNFT.sol\";\nimport {\n    ConstantInflowNFT,\n    IConstantInflowNFT\n} from \"../superfluid/ConstantInflowNFT.sol\";\nimport {\n    InstantDistributionAgreementV1\n} from \"../agreements/InstantDistributionAgreementV1.sol\";\nimport {\n    SuperToken,\n    SuperTokenFactory,\n    ERC20WithTokenInfo\n} from \"../superfluid/SuperTokenFactory.sol\";\nimport { ISuperToken, SuperToken } from \"../superfluid/SuperToken.sol\";\nimport { TestResolver } from \"./TestResolver.sol\";\nimport { SuperfluidLoader } from \"./SuperfluidLoader.sol\";\nimport { SETHProxy } from \"../tokens/SETH.sol\";\nimport { PureSuperToken } from \"../tokens/PureSuperToken.sol\";\nimport { UUPSProxy } from \"../upgradability/UUPSProxy.sol\";\nimport { UUPSProxiable } from \"../upgradability/UUPSProxiable.sol\";\nimport {\n    IConstantFlowAgreementHook\n} from \"../interfaces/agreements/IConstantFlowAgreementHook.sol\";\nimport { CFAv1Library } from \"../apps/CFAv1Library.sol\";\nimport { IDAv1Library } from \"../apps/IDAv1Library.sol\";\n\n/// @title Superfluid Framework Deployer\n/// @notice This is NOT for deploying public nets, but rather only for tesing envs\ncontract SuperfluidFrameworkDeployer {\n    struct Framework {\n        TestGovernance governance;\n        Superfluid host;\n        ConstantFlowAgreementV1 cfa;\n        CFAv1Library.InitData cfaLib;\n        InstantDistributionAgreementV1 ida;\n        IDAv1Library.InitData idaLib;\n        SuperTokenFactory superTokenFactory;\n        TestResolver resolver;\n        SuperfluidLoader superfluidLoader;\n        CFAv1Forwarder cfaV1Forwarder;\n    }\n\n    address public constant DEFAULT_REWARD_ADDRESS = address(69);\n\n    TestGovernance internal testGovernance;\n    Superfluid internal host;\n    ConstantFlowAgreementV1 internal cfaV1;\n    InstantDistributionAgreementV1 internal idaV1;\n    SuperTokenFactory internal superTokenFactory;\n    TestResolver internal testResolver;\n    SuperfluidLoader internal superfluidLoader;\n    CFAv1Forwarder internal cfaV1Forwarder;\n\n    constructor() {\n        // @note ERC1820 must be deployed for this to work\n\n        // Deploy TestGovernance. Needs initialization later.\n        testGovernance = SuperfluidGovDeployerLibrary.deployTestGovernance();\n\n        // Transfer ownership to this contract\n        SuperfluidGovDeployerLibrary.transferOwnership(\n            testGovernance,\n            address(this)\n        );\n\n        // Deploy Superfluid\n        host = SuperfluidHostDeployerLibrary.deploySuperfluidHost(true, false);\n\n        // Initialize Superfluid with Governance address\n        host.initialize(testGovernance);\n\n        // Initialize Governance\n        address[] memory trustedForwarders = new address[](0);\n        testGovernance.initialize(\n            host,\n            DEFAULT_REWARD_ADDRESS,\n            4 hours,\n            30 minutes,\n            trustedForwarders\n        );\n\n        // Deploy ConstantFlowAgreementV1\n        // @note TODO hook contract is no more-should be deleted\n\n        cfaV1 = SuperfluidCFAv1DeployerLibrary.deployConstantFlowAgreementV1(\n            host,\n            IConstantFlowAgreementHook(address(0))\n        );\n\n        // Register ConstantFlowAgreementV1 TestGovernance\n        testGovernance.registerAgreementClass(host, address(cfaV1));\n\n        // Deploy CFAv1Forwarder\n        cfaV1Forwarder = new CFAv1Forwarder(host);\n\n        // Enable CFAv1Forwarder as a Trusted Forwarder\n        testGovernance.enableTrustedForwarder(\n            host,\n            ISuperfluidToken(address(0)),\n            address(cfaV1Forwarder)\n        );\n\n        // Deploy InstantDistributionAgreementV1\n        idaV1 = SuperfluidIDAv1DeployerLibrary\n            .deployInstantDistributionAgreementV1(host);\n\n        // Register InstantDistributionAgreementV1 with Governance\n        testGovernance.registerAgreementClass(host, address(idaV1));\n\n        // Deploy canonical Constant Outflow NFT proxy contract\n        UUPSProxy constantOutflowNFTProxy = new UUPSProxy();\n\n        // Deploy canonical Constant Outflow NFT proxy contract\n        UUPSProxy constantInflowNFTProxy = new UUPSProxy();\n\n        // Deploy canonical Constant Outflow NFT logic contract\n        ConstantOutflowNFT constantOutflowNFTLogic = new ConstantOutflowNFT(\n            host,\n            IConstantInflowNFT(address(constantInflowNFTProxy)),\n            \"\"\n        );\n\n        // Initialize Constant Outflow NFT logic contract\n        constantOutflowNFTLogic.castrate();\n\n        // Deploy canonical Constant Inflow NFT logic contract\n        ConstantInflowNFT constantInflowNFTLogic = new ConstantInflowNFT(\n            host,\n            IConstantOutflowNFT(address(constantOutflowNFTProxy)),\n            \"\"\n        );\n\n        // Initialize Constant Inflow NFT logic contract\n        constantInflowNFTLogic.castrate();\n\n        // Initialize COFNFT proxy contract\n        constantOutflowNFTProxy.initializeProxy(\n            address(constantOutflowNFTLogic)\n        );\n\n        // Initialize CIFNFT proxy contract\n        constantInflowNFTProxy.initializeProxy(address(constantInflowNFTLogic));\n\n        // // Initialize COFNFT proxy contract\n        IConstantOutflowNFT(address(constantOutflowNFTProxy)).initialize(\n            \"Constant Outflow NFT\",\n            \"COF\"\n        );\n\n        // // Initialize CIFNFT proxy contract\n        IConstantInflowNFT(address(constantInflowNFTProxy)).initialize(\n            \"Constant Inflow NFT\",\n            \"CIF\"\n        );\n\n        // Deploy canonical SuperToken logic contract\n        SuperToken superTokenLogic = SuperToken(\n            SuperTokenDeployerLibrary.deploySuperTokenLogic(\n                host,\n                IConstantOutflowNFT(address(constantOutflowNFTProxy)),\n                IConstantInflowNFT(address(constantInflowNFTProxy))\n            )\n        );\n\n        // Deploy SuperTokenFactory\n        SuperTokenFactory superTokenFactoryLogic = SuperfluidPeripheryDeployerLibrary\n            .deploySuperTokenFactory(\n                host,\n                superTokenLogic,\n                constantOutflowNFTLogic,\n                constantInflowNFTLogic\n            );\n\n        // Deploy canonical Constant Outflow NFT proxy contract\n        UUPSProxy superTokenFactoryProxy = new UUPSProxy();\n        superTokenFactoryProxy.initializeProxy(address(superTokenFactoryLogic));\n\n        // SuperTokenFactory(address(superTokenFactoryProxy)).initialize();\n\n        superTokenFactory = SuperTokenFactory(address(superTokenFactoryProxy));\n\n        // 'Update' code with Governance and register SuperTokenFactory with Superfluid\n        testGovernance.updateContracts(\n            host,\n            address(0),\n            new address[](0),\n            address(superTokenFactory)\n        );\n\n        // Deploy Resolver and grant the deployer of SuperfluidFrameworkDeployer admin privileges\n        testResolver = SuperfluidPeripheryDeployerLibrary.deployTestResolver(\n            msg.sender\n        );\n\n        // Deploy SuperfluidLoader\n        superfluidLoader = new SuperfluidLoader(testResolver);\n\n        // Register Governance with Resolver\n        testResolver.set(\"TestGovernance.test\", address(testGovernance));\n\n        // Register Superfluid with Resolver\n        testResolver.set(\"Superfluid.test\", address(host));\n\n        // Register SuperfluidLoader with Resolver\n        testResolver.set(\"SuperfluidLoader-v1\", address(superfluidLoader));\n\n        testResolver.set(\"CFAv1Forwarder\", address(cfaV1Forwarder));\n    }\n\n    /// @notice Fetches the framework contracts\n    function getFramework() external view returns (Framework memory sf) {\n        sf = Framework({\n            governance: testGovernance,\n            host: host,\n            cfa: cfaV1,\n            cfaLib: CFAv1Library.InitData(host, cfaV1),\n            ida: idaV1,\n            idaLib: IDAv1Library.InitData(host, idaV1),\n            superTokenFactory: superTokenFactory,\n            resolver: testResolver,\n            superfluidLoader: superfluidLoader,\n            cfaV1Forwarder: cfaV1Forwarder\n        });\n        return sf;\n    }\n\n    /// @notice Transfer ownership of the TestGovernance contract\n    /// @dev This function allows you to transfer ownership of TestGovernance when testing\n    /// @param newOwner the new owner of the TestGovernance contract\n    function transferOwnership(address newOwner) public {\n        testGovernance.transferOwnership(newOwner);\n    }\n}\n\n/**************************************************************************\n * External Libraries\n **************************************************************************/\n\n/// @title SuperfluidGovDeployerLibrary\n/// @author Superfluid\n/// @notice An external library that deploys the Superfluid TestGovernance contract with additional functions\n/// @dev This library is used for testing purposes only, not deployments to test OR production networks\nlibrary SuperfluidGovDeployerLibrary {\n    /// @notice deploys the Superfluid TestGovernance Contract\n    /// @return newly deployed TestGovernance contract\n    function deployTestGovernance() external returns (TestGovernance) {\n        return new TestGovernance();\n    }\n\n    /// @notice transfers ownership of _gov to _newOwner\n    /// @dev _gov must be deployed from this contract\n    /// @param _gov address of the TestGovernance contract\n    /// @param _newOwner the new owner of the governance contract\n    function transferOwnership(\n        TestGovernance _gov,\n        address _newOwner\n    ) external {\n        _gov.transferOwnership(_newOwner);\n    }\n}\n\n/// @title SuperfluidHostDeployerLibrary\n/// @author Superfluid\n/// @notice An external library that deploys the Superfluid Host contract with additional functions.\n/// @dev This library is used for testing purposes only, not deployments to test OR production networks\nlibrary SuperfluidHostDeployerLibrary {\n    /// @notice Deploys the Superfluid Host Contract\n    /// @param _nonUpgradable whether the hsot contract is upgradeable or not\n    /// @param _appWhiteListingEnabled whether app white listing is enabled\n    /// @return Superfluid newly deployed Superfluid Host contract\n    function deploySuperfluidHost(\n        bool _nonUpgradable,\n        bool _appWhiteListingEnabled\n    ) external returns (Superfluid) {\n        return new Superfluid(_nonUpgradable, _appWhiteListingEnabled);\n    }\n}\n\n/// @title SuperfluidIDAv1DeployerLibrary\n/// @author Superfluid\n/// @notice An external library that deploys the Superfluid InstantDistributionAgreementV1 contract.\n/// @dev This library is used for testing purposes only, not deployments to test OR production networks\nlibrary SuperfluidIDAv1DeployerLibrary {\n    /// @notice deploys the Superfluid InstantDistributionAgreementV1 Contract\n    /// @param _host Superfluid host address\n    /// @return newly deployed InstantDistributionAgreementV1 contract\n    function deployInstantDistributionAgreementV1(\n        ISuperfluid _host\n    ) external returns (InstantDistributionAgreementV1) {\n        return new InstantDistributionAgreementV1(_host);\n    }\n}\n\n/// @title SuperfluidCFAv1DeployerLibrary\n/// @author Superfluid\n/// @notice An external library that deploys Superfluid ConstantFlowAgreementV1 contract\n/// @dev This library is used for testing purposes only, not deployments to test OR production networks\nlibrary SuperfluidCFAv1DeployerLibrary {\n    /// @notice deploys ConstantFlowAgreementV1 contract\n    /// @param _host address of the Superfluid contract\n    /// @param _cfaHook address of the IConstantFlowAgreementHook contract\n    /// @return newly deployed ConstantFlowAgreementV1 contract\n    function deployConstantFlowAgreementV1(\n        ISuperfluid _host,\n        IConstantFlowAgreementHook _cfaHook\n    ) external returns (ConstantFlowAgreementV1) {\n        return new ConstantFlowAgreementV1(_host, _cfaHook);\n    }\n}\n\n/// @title SuperToken deployer library\n/// @author Superfluid\n/// @notice This is an external library used to deploy SuperToken logic contracts\nlibrary SuperTokenDeployerLibrary {\n    /// @notice Deploy a SuperToken logic contract\n    /// @param host the address of the host contract\n    function deploySuperTokenLogic(\n        ISuperfluid host,\n        IConstantOutflowNFT constantOutflowNFT,\n        IConstantInflowNFT constantInflowNFT\n    ) external returns (address) {\n        return\n            address(\n                new SuperToken(host, constantOutflowNFT, constantInflowNFT)\n            );\n    }\n}\n\n/// @title SuperfluidPeripheryDeployerLibrary\n/// @author Superfluid\n/// @notice An external library that deploys Superfluid periphery contracts (Super Token Factory and Test Resolver)\n/// @dev This library is used for testing purposes only, not deployments to test OR production networks\nlibrary SuperfluidPeripheryDeployerLibrary {\n    /// @dev deploys Super Token Factory contract\n    /// @param _host address of the Superfluid contract\n    /// @param _superTokenLogic address of the Super Token logic contract\n    /// @return newly deployed SuperTokenFactory contract\n    function deploySuperTokenFactory(\n        ISuperfluid _host,\n        ISuperToken _superTokenLogic,\n        IConstantOutflowNFT constantOutflowNFT,\n        IConstantInflowNFT constantInflowNFT\n    ) external returns (SuperTokenFactory) {\n        return\n            new SuperTokenFactory(\n                _host,\n                _superTokenLogic,\n                constantOutflowNFT,\n                constantInflowNFT\n            );\n    }\n\n    /// @dev deploys Test Resolver contract\n    /// @param _additionalAdmin address of the additional administrator of the Test Resolver contract\n    /// @return newly deployed Test Resolver contract\n    function deployTestResolver(\n        address _additionalAdmin\n    ) external returns (TestResolver) {\n        return new TestResolver(_additionalAdmin);\n    }\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidFrameworkDeployer.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/SuperfluidFrameworkDeployer.sol",
    "exportedSymbols": {
      "CFAv1Forwarder": [
        47067
      ],
      "CFAv1Library": [
        15747
      ],
      "ConstantFlowAgreementV1": [
        11160
      ],
      "ConstantInflowNFT": [
        37855
      ],
      "ConstantOutflowNFT": [
        38245
      ],
      "ERC20WithTokenInfo": [
        25533
      ],
      "IConstantFlowAgreementHook": [
        22379
      ],
      "IConstantInflowNFT": [
        23703
      ],
      "IConstantOutflowNFT": [
        23757
      ],
      "IDAv1Library": [
        17102
      ],
      "IERC20": [
        1540
      ],
      "ISuperToken": [
        24454
      ],
      "ISuperfluid": [
        25106
      ],
      "ISuperfluidToken": [
        25521
      ],
      "InstantDistributionAgreementV1": [
        14567
      ],
      "PureSuperToken": [
        45715
      ],
      "SETHProxy": [
        45869
      ],
      "SuperToken": [
        40945
      ],
      "SuperTokenDeployerLibrary": [
        48442
      ],
      "SuperTokenFactory": [
        41689
      ],
      "Superfluid": [
        44730
      ],
      "SuperfluidCFAv1DeployerLibrary": [
        48413
      ],
      "SuperfluidFrameworkDeployer": [
        48319
      ],
      "SuperfluidGovDeployerLibrary": [
        48350
      ],
      "SuperfluidHostDeployerLibrary": [
        48371
      ],
      "SuperfluidIDAv1DeployerLibrary": [
        48390
      ],
      "SuperfluidLoader": [
        48585
      ],
      "SuperfluidPeripheryDeployerLibrary": [
        48489
      ],
      "TestGovernance": [
        49516
      ],
      "TestResolver": [
        49546
      ],
      "UUPSProxiable": [
        45966
      ],
      "UUPSProxy": [
        46023
      ]
    },
    "id": 48490,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 47814,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:114"
      },
      {
        "absolutePath": "project:/contracts/utils/CFAv1Forwarder.sol",
        "file": "./CFAv1Forwarder.sol",
        "id": 47816,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 47068,
        "src": "60:54:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47815,
              "name": "CFAv1Forwarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47067,
              "src": "69:14:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 47818,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 1541,
        "src": "115:72:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47817,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1540,
              "src": "124:6:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/Superfluid.sol",
        "file": "../superfluid/Superfluid.sol",
        "id": 47822,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 44731,
        "src": "188:101:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47819,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25106,
              "src": "201:11:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47820,
              "name": "ISuperfluidToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25521,
              "src": "218:16:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47821,
              "name": "Superfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44730,
              "src": "240:10:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TestGovernance.sol",
        "file": "./TestGovernance.sol",
        "id": 47824,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 49517,
        "src": "290:54:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47823,
              "name": "TestGovernance",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49516,
              "src": "299:14:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/agreements/ConstantFlowAgreementV1.sol",
        "file": "../agreements/ConstantFlowAgreementV1.sol",
        "id": 47826,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 11161,
        "src": "345:88:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47825,
              "name": "ConstantFlowAgreementV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11160,
              "src": "358:23:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/ConstantOutflowNFT.sol",
        "file": "../superfluid/ConstantOutflowNFT.sol",
        "id": 47829,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 38246,
        "src": "434:103:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47827,
              "name": "ConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38245,
              "src": "447:18:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47828,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23757,
              "src": "471:19:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/ConstantInflowNFT.sol",
        "file": "../superfluid/ConstantInflowNFT.sol",
        "id": 47832,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 37856,
        "src": "538:100:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47830,
              "name": "ConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37855,
              "src": "551:17:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47831,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23703,
              "src": "574:18:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/agreements/InstantDistributionAgreementV1.sol",
        "file": "../agreements/InstantDistributionAgreementV1.sol",
        "id": 47834,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 14568,
        "src": "639:102:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47833,
              "name": "InstantDistributionAgreementV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 14567,
              "src": "652:30:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/SuperTokenFactory.sol",
        "file": "../superfluid/SuperTokenFactory.sol",
        "id": 47838,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 41690,
        "src": "742:116:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47835,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40945,
              "src": "755:10:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47836,
              "name": "SuperTokenFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41689,
              "src": "771:17:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47837,
              "name": "ERC20WithTokenInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25533,
              "src": "794:18:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/superfluid/SuperToken.sol",
        "file": "../superfluid/SuperToken.sol",
        "id": 47841,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 40946,
        "src": "859:71:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47839,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24454,
              "src": "868:11:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47840,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40945,
              "src": "881:10:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TestResolver.sol",
        "file": "./TestResolver.sol",
        "id": 47843,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 49547,
        "src": "931:50:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47842,
              "name": "TestResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49546,
              "src": "940:12:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/SuperfluidLoader.sol",
        "file": "./SuperfluidLoader.sol",
        "id": 47845,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 48586,
        "src": "982:58:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47844,
              "name": "SuperfluidLoader",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48585,
              "src": "991:16:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/SETH.sol",
        "file": "../tokens/SETH.sol",
        "id": 47847,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 45870,
        "src": "1041:47:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47846,
              "name": "SETHProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45869,
              "src": "1050:9:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/PureSuperToken.sol",
        "file": "../tokens/PureSuperToken.sol",
        "id": 47849,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 45716,
        "src": "1089:62:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47848,
              "name": "PureSuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45715,
              "src": "1098:14:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxy.sol",
        "file": "../upgradability/UUPSProxy.sol",
        "id": 47851,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 46024,
        "src": "1152:59:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47850,
              "name": "UUPSProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46023,
              "src": "1161:9:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxiable.sol",
        "file": "../upgradability/UUPSProxiable.sol",
        "id": 47853,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 45967,
        "src": "1212:67:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47852,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45966,
              "src": "1221:13:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/agreements/IConstantFlowAgreementHook.sol",
        "file": "../interfaces/agreements/IConstantFlowAgreementHook.sol",
        "id": 47855,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 22380,
        "src": "1280:105:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47854,
              "name": "IConstantFlowAgreementHook",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22379,
              "src": "1293:26:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/apps/CFAv1Library.sol",
        "file": "../apps/CFAv1Library.sol",
        "id": 47857,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 15748,
        "src": "1386:56:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47856,
              "name": "CFAv1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 15747,
              "src": "1395:12:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/apps/IDAv1Library.sol",
        "file": "../apps/IDAv1Library.sol",
        "id": 47859,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 48490,
        "sourceUnit": 17103,
        "src": "1443:56:114",
        "symbolAliases": [
          {
            "foreign": {
              "id": 47858,
              "name": "IDAv1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 17102,
              "src": "1452:12:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SuperfluidFrameworkDeployer",
        "contractDependencies": [
          37855,
          38245,
          46023,
          47067,
          48585
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 47860,
          "nodeType": "StructuredDocumentation",
          "src": "1501:124:114",
          "text": "@title Superfluid Framework Deployer\n @notice This is NOT for deploying public nets, but rather only for tesing envs"
        },
        "fullyImplemented": true,
        "id": 48319,
        "linearizedBaseContracts": [
          48319
        ],
        "name": "SuperfluidFrameworkDeployer",
        "nameLocation": "1634:27:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SuperfluidFrameworkDeployer.Framework",
            "id": 47891,
            "members": [
              {
                "constant": false,
                "id": 47863,
                "mutability": "mutable",
                "name": "governance",
                "nameLocation": "1710:10:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1695:25:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_TestGovernance_$49516",
                  "typeString": "contract TestGovernance"
                },
                "typeName": {
                  "id": 47862,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47861,
                    "name": "TestGovernance",
                    "nameLocations": [
                      "1695:14:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49516,
                    "src": "1695:14:114"
                  },
                  "referencedDeclaration": 49516,
                  "src": "1695:14:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TestGovernance_$49516",
                    "typeString": "contract TestGovernance"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47866,
                "mutability": "mutable",
                "name": "host",
                "nameLocation": "1741:4:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1730:15:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Superfluid_$44730",
                  "typeString": "contract Superfluid"
                },
                "typeName": {
                  "id": 47865,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47864,
                    "name": "Superfluid",
                    "nameLocations": [
                      "1730:10:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 44730,
                    "src": "1730:10:114"
                  },
                  "referencedDeclaration": 44730,
                  "src": "1730:10:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Superfluid_$44730",
                    "typeString": "contract Superfluid"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47869,
                "mutability": "mutable",
                "name": "cfa",
                "nameLocation": "1779:3:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1755:27:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                  "typeString": "contract ConstantFlowAgreementV1"
                },
                "typeName": {
                  "id": 47868,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47867,
                    "name": "ConstantFlowAgreementV1",
                    "nameLocations": [
                      "1755:23:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 11160,
                    "src": "1755:23:114"
                  },
                  "referencedDeclaration": 11160,
                  "src": "1755:23:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                    "typeString": "contract ConstantFlowAgreementV1"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47872,
                "mutability": "mutable",
                "name": "cfaLib",
                "nameLocation": "1814:6:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1792:28:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_InitData_$14582_storage_ptr",
                  "typeString": "struct CFAv1Library.InitData"
                },
                "typeName": {
                  "id": 47871,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47870,
                    "name": "CFAv1Library.InitData",
                    "nameLocations": [
                      "1792:12:114",
                      "1805:8:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14582,
                    "src": "1792:21:114"
                  },
                  "referencedDeclaration": 14582,
                  "src": "1792:21:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitData_$14582_storage_ptr",
                    "typeString": "struct CFAv1Library.InitData"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47875,
                "mutability": "mutable",
                "name": "ida",
                "nameLocation": "1861:3:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1830:34:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                  "typeString": "contract InstantDistributionAgreementV1"
                },
                "typeName": {
                  "id": 47874,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47873,
                    "name": "InstantDistributionAgreementV1",
                    "nameLocations": [
                      "1830:30:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 14567,
                    "src": "1830:30:114"
                  },
                  "referencedDeclaration": 14567,
                  "src": "1830:30:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                    "typeString": "contract InstantDistributionAgreementV1"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47878,
                "mutability": "mutable",
                "name": "idaLib",
                "nameLocation": "1896:6:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1874:28:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_InitData_$15763_storage_ptr",
                  "typeString": "struct IDAv1Library.InitData"
                },
                "typeName": {
                  "id": 47877,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47876,
                    "name": "IDAv1Library.InitData",
                    "nameLocations": [
                      "1874:12:114",
                      "1887:8:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 15763,
                    "src": "1874:21:114"
                  },
                  "referencedDeclaration": 15763,
                  "src": "1874:21:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_InitData_$15763_storage_ptr",
                    "typeString": "struct IDAv1Library.InitData"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47881,
                "mutability": "mutable",
                "name": "superTokenFactory",
                "nameLocation": "1930:17:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1912:35:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                  "typeString": "contract SuperTokenFactory"
                },
                "typeName": {
                  "id": 47880,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47879,
                    "name": "SuperTokenFactory",
                    "nameLocations": [
                      "1912:17:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41689,
                    "src": "1912:17:114"
                  },
                  "referencedDeclaration": 41689,
                  "src": "1912:17:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                    "typeString": "contract SuperTokenFactory"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47884,
                "mutability": "mutable",
                "name": "resolver",
                "nameLocation": "1970:8:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1957:21:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_TestResolver_$49546",
                  "typeString": "contract TestResolver"
                },
                "typeName": {
                  "id": 47883,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47882,
                    "name": "TestResolver",
                    "nameLocations": [
                      "1957:12:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 49546,
                    "src": "1957:12:114"
                  },
                  "referencedDeclaration": 49546,
                  "src": "1957:12:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TestResolver_$49546",
                    "typeString": "contract TestResolver"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47887,
                "mutability": "mutable",
                "name": "superfluidLoader",
                "nameLocation": "2005:16:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "1988:33:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                  "typeString": "contract SuperfluidLoader"
                },
                "typeName": {
                  "id": 47886,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47885,
                    "name": "SuperfluidLoader",
                    "nameLocations": [
                      "1988:16:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 48585,
                    "src": "1988:16:114"
                  },
                  "referencedDeclaration": 48585,
                  "src": "1988:16:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                    "typeString": "contract SuperfluidLoader"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47890,
                "mutability": "mutable",
                "name": "cfaV1Forwarder",
                "nameLocation": "2046:14:114",
                "nodeType": "VariableDeclaration",
                "scope": 47891,
                "src": "2031:29:114",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                  "typeString": "contract CFAv1Forwarder"
                },
                "typeName": {
                  "id": 47889,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 47888,
                    "name": "CFAv1Forwarder",
                    "nameLocations": [
                      "2031:14:114"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 47067,
                    "src": "2031:14:114"
                  },
                  "referencedDeclaration": 47067,
                  "src": "2031:14:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                    "typeString": "contract CFAv1Forwarder"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Framework",
            "nameLocation": "1675:9:114",
            "nodeType": "StructDefinition",
            "scope": 48319,
            "src": "1668:399:114",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "93786bf0",
            "id": 47897,
            "mutability": "constant",
            "name": "DEFAULT_REWARD_ADDRESS",
            "nameLocation": "2097:22:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2073:60:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47892,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2073:7:114",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "3639",
                  "id": 47895,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2130:2:114",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_69_by_1",
                    "typeString": "int_const 69"
                  },
                  "value": "69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_69_by_1",
                    "typeString": "int_const 69"
                  }
                ],
                "id": 47894,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2122:7:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 47893,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2122:7:114",
                  "typeDescriptions": {}
                }
              },
              "id": 47896,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2122:11:114",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 47900,
            "mutability": "mutable",
            "name": "testGovernance",
            "nameLocation": "2164:14:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2140:38:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestGovernance_$49516",
              "typeString": "contract TestGovernance"
            },
            "typeName": {
              "id": 47899,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47898,
                "name": "TestGovernance",
                "nameLocations": [
                  "2140:14:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49516,
                "src": "2140:14:114"
              },
              "referencedDeclaration": 49516,
              "src": "2140:14:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestGovernance_$49516",
                "typeString": "contract TestGovernance"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47903,
            "mutability": "mutable",
            "name": "host",
            "nameLocation": "2204:4:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2184:24:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Superfluid_$44730",
              "typeString": "contract Superfluid"
            },
            "typeName": {
              "id": 47902,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47901,
                "name": "Superfluid",
                "nameLocations": [
                  "2184:10:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44730,
                "src": "2184:10:114"
              },
              "referencedDeclaration": 44730,
              "src": "2184:10:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Superfluid_$44730",
                "typeString": "contract Superfluid"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47906,
            "mutability": "mutable",
            "name": "cfaV1",
            "nameLocation": "2247:5:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2214:38:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
              "typeString": "contract ConstantFlowAgreementV1"
            },
            "typeName": {
              "id": 47905,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47904,
                "name": "ConstantFlowAgreementV1",
                "nameLocations": [
                  "2214:23:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 11160,
                "src": "2214:23:114"
              },
              "referencedDeclaration": 11160,
              "src": "2214:23:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                "typeString": "contract ConstantFlowAgreementV1"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47909,
            "mutability": "mutable",
            "name": "idaV1",
            "nameLocation": "2298:5:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2258:45:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
              "typeString": "contract InstantDistributionAgreementV1"
            },
            "typeName": {
              "id": 47908,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47907,
                "name": "InstantDistributionAgreementV1",
                "nameLocations": [
                  "2258:30:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 14567,
                "src": "2258:30:114"
              },
              "referencedDeclaration": 14567,
              "src": "2258:30:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                "typeString": "contract InstantDistributionAgreementV1"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47912,
            "mutability": "mutable",
            "name": "superTokenFactory",
            "nameLocation": "2336:17:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2309:44:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
              "typeString": "contract SuperTokenFactory"
            },
            "typeName": {
              "id": 47911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47910,
                "name": "SuperTokenFactory",
                "nameLocations": [
                  "2309:17:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41689,
                "src": "2309:17:114"
              },
              "referencedDeclaration": 41689,
              "src": "2309:17:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                "typeString": "contract SuperTokenFactory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47915,
            "mutability": "mutable",
            "name": "testResolver",
            "nameLocation": "2381:12:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2359:34:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestResolver_$49546",
              "typeString": "contract TestResolver"
            },
            "typeName": {
              "id": 47914,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47913,
                "name": "TestResolver",
                "nameLocations": [
                  "2359:12:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49546,
                "src": "2359:12:114"
              },
              "referencedDeclaration": 49546,
              "src": "2359:12:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestResolver_$49546",
                "typeString": "contract TestResolver"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47918,
            "mutability": "mutable",
            "name": "superfluidLoader",
            "nameLocation": "2425:16:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2399:42:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
              "typeString": "contract SuperfluidLoader"
            },
            "typeName": {
              "id": 47917,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47916,
                "name": "SuperfluidLoader",
                "nameLocations": [
                  "2399:16:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 48585,
                "src": "2399:16:114"
              },
              "referencedDeclaration": 48585,
              "src": "2399:16:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                "typeString": "contract SuperfluidLoader"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 47921,
            "mutability": "mutable",
            "name": "cfaV1Forwarder",
            "nameLocation": "2471:14:114",
            "nodeType": "VariableDeclaration",
            "scope": 48319,
            "src": "2447:38:114",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
              "typeString": "contract CFAv1Forwarder"
            },
            "typeName": {
              "id": 47920,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47919,
                "name": "CFAv1Forwarder",
                "nameLocations": [
                  "2447:14:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47067,
                "src": "2447:14:114"
              },
              "referencedDeclaration": 47067,
              "src": "2447:14:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                "typeString": "contract CFAv1Forwarder"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 48271,
              "nodeType": "Block",
              "src": "2506:5453:114",
              "statements": [
                {
                  "expression": {
                    "id": 47928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47924,
                      "name": "testGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47900,
                      "src": "2638:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestGovernance_$49516",
                        "typeString": "contract TestGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 47925,
                          "name": "SuperfluidGovDeployerLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48350,
                          "src": "2655:28:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperfluidGovDeployerLibrary_$48350_$",
                            "typeString": "type(library SuperfluidGovDeployerLibrary)"
                          }
                        },
                        "id": 47926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2684:20:114",
                        "memberName": "deployTestGovernance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48333,
                        "src": "2655:49:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$__$returns$_t_contract$_TestGovernance_$49516_$",
                          "typeString": "function () returns (contract TestGovernance)"
                        }
                      },
                      "id": 47927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2655:51:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestGovernance_$49516",
                        "typeString": "contract TestGovernance"
                      }
                    },
                    "src": "2638:68:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestGovernance_$49516",
                      "typeString": "contract TestGovernance"
                    }
                  },
                  "id": 47929,
                  "nodeType": "ExpressionStatement",
                  "src": "2638:68:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47933,
                        "name": "testGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47900,
                        "src": "2824:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47936,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2860:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidFrameworkDeployer_$48319",
                              "typeString": "contract SuperfluidFrameworkDeployer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidFrameworkDeployer_$48319",
                              "typeString": "contract SuperfluidFrameworkDeployer"
                            }
                          ],
                          "id": 47935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2852:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47934,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2852:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2852:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47930,
                        "name": "SuperfluidGovDeployerLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48350,
                        "src": "2764:28:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SuperfluidGovDeployerLibrary_$48350_$",
                          "typeString": "type(library SuperfluidGovDeployerLibrary)"
                        }
                      },
                      "id": 47932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2793:17:114",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48349,
                      "src": "2764:46:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_TestGovernance_$49516_$_t_address_$returns$__$",
                        "typeString": "function (contract TestGovernance,address)"
                      }
                    },
                    "id": 47938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:111:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47939,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:111:114"
                },
                {
                  "expression": {
                    "id": 47946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47940,
                      "name": "host",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47903,
                      "src": "2915:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Superfluid_$44730",
                        "typeString": "contract Superfluid"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 47943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2973:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 47944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2979:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 47941,
                          "name": "SuperfluidHostDeployerLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48371,
                          "src": "2922:29:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperfluidHostDeployerLibrary_$48371_$",
                            "typeString": "type(library SuperfluidHostDeployerLibrary)"
                          }
                        },
                        "id": 47942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2952:20:114",
                        "memberName": "deploySuperfluidHost",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48370,
                        "src": "2922:50:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_bool_$_t_bool_$returns$_t_contract$_Superfluid_$44730_$",
                          "typeString": "function (bool,bool) returns (contract Superfluid)"
                        }
                      },
                      "id": 47945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2922:63:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Superfluid_$44730",
                        "typeString": "contract Superfluid"
                      }
                    },
                    "src": "2915:70:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Superfluid_$44730",
                      "typeString": "contract Superfluid"
                    }
                  },
                  "id": 47947,
                  "nodeType": "ExpressionStatement",
                  "src": "2915:70:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47951,
                        "name": "testGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47900,
                        "src": "3069:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      ],
                      "expression": {
                        "id": 47948,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "3053:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      "id": 47950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3058:10:114",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41812,
                      "src": "3053:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluidGovernance_$25235_$returns$__$",
                        "typeString": "function (contract ISuperfluidGovernance) external"
                      }
                    },
                    "id": 47952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3053:31:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47953,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:31:114"
                },
                {
                  "assignments": [
                    47958
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 47958,
                      "mutability": "mutable",
                      "name": "trustedForwarders",
                      "nameLocation": "3145:17:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 48271,
                      "src": "3128:34:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 47956,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3128:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47957,
                        "nodeType": "ArrayTypeName",
                        "src": "3128:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 47964,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 47962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3179:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 47961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3165:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 47959,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3169:7:114",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 47960,
                        "nodeType": "ArrayTypeName",
                        "src": "3169:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 47963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:16:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3128:53:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47968,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "3230:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      {
                        "id": 47969,
                        "name": "DEFAULT_REWARD_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47897,
                        "src": "3248:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "34",
                        "id": 47970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3284:7:114",
                        "subdenomination": "hours",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_14400_by_1",
                          "typeString": "int_const 14400"
                        },
                        "value": "4"
                      },
                      {
                        "hexValue": "3330",
                        "id": 47971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3305:10:114",
                        "subdenomination": "minutes",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1800_by_1",
                          "typeString": "int_const 1800"
                        },
                        "value": "30"
                      },
                      {
                        "id": 47972,
                        "name": "trustedForwarders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47958,
                        "src": "3329:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_14400_by_1",
                          "typeString": "int_const 14400"
                        },
                        {
                          "typeIdentifier": "t_rational_1800_by_1",
                          "typeString": "int_const 1800"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "expression": {
                        "id": 47965,
                        "name": "testGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47900,
                        "src": "3191:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      },
                      "id": 47967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3206:10:114",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49493,
                      "src": "3191:25:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract ISuperfluid,address,uint256,uint256,address[] memory) external"
                      }
                    },
                    "id": 47973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:165:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47974,
                  "nodeType": "ExpressionStatement",
                  "src": "3191:165:114"
                },
                {
                  "expression": {
                    "id": 47986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47975,
                      "name": "cfaV1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47906,
                      "src": "3475:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                        "typeString": "contract ConstantFlowAgreementV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47978,
                          "name": "host",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47903,
                          "src": "3557:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Superfluid_$44730",
                            "typeString": "contract Superfluid"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 47982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3610:1:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 47981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3602:7:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 47980,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3602:7:114",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 47983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3602:10:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 47979,
                            "name": "IConstantFlowAgreementHook",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22379,
                            "src": "3575:26:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IConstantFlowAgreementHook_$22379_$",
                              "typeString": "type(contract IConstantFlowAgreementHook)"
                            }
                          },
                          "id": 47984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3575:38:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConstantFlowAgreementHook_$22379",
                            "typeString": "contract IConstantFlowAgreementHook"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Superfluid_$44730",
                            "typeString": "contract Superfluid"
                          },
                          {
                            "typeIdentifier": "t_contract$_IConstantFlowAgreementHook_$22379",
                            "typeString": "contract IConstantFlowAgreementHook"
                          }
                        ],
                        "expression": {
                          "id": 47976,
                          "name": "SuperfluidCFAv1DeployerLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48413,
                          "src": "3483:30:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperfluidCFAv1DeployerLibrary_$48413_$",
                            "typeString": "type(library SuperfluidCFAv1DeployerLibrary)"
                          }
                        },
                        "id": 47977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3514:29:114",
                        "memberName": "deployConstantFlowAgreementV1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48412,
                        "src": "3483:60:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_IConstantFlowAgreementHook_$22379_$returns$_t_contract$_ConstantFlowAgreementV1_$11160_$",
                          "typeString": "function (contract ISuperfluid,contract IConstantFlowAgreementHook) returns (contract ConstantFlowAgreementV1)"
                        }
                      },
                      "id": 47985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3483:140:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                        "typeString": "contract ConstantFlowAgreementV1"
                      }
                    },
                    "src": "3475:148:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                      "typeString": "contract ConstantFlowAgreementV1"
                    }
                  },
                  "id": 47987,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:148:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47991,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "3731:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47994,
                            "name": "cfaV1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47906,
                            "src": "3745:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                              "typeString": "contract ConstantFlowAgreementV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                              "typeString": "contract ConstantFlowAgreementV1"
                            }
                          ],
                          "id": 47993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3737:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47992,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3737:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3737:14:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47988,
                        "name": "testGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47900,
                        "src": "3693:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      },
                      "id": 47990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3708:22:114",
                      "memberName": "registerAgreementClass",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21045,
                      "src": "3693:37:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_address_$returns$__$",
                        "typeString": "function (contract ISuperfluid,address) external"
                      }
                    },
                    "id": 47996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47997,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:59:114"
                },
                {
                  "expression": {
                    "id": 48004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47998,
                      "name": "cfaV1Forwarder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47921,
                      "src": "3796:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                        "typeString": "contract CFAv1Forwarder"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48002,
                          "name": "host",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47903,
                          "src": "3832:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Superfluid_$44730",
                            "typeString": "contract Superfluid"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Superfluid_$44730",
                            "typeString": "contract Superfluid"
                          }
                        ],
                        "id": 48001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3813:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$25106_$returns$_t_contract$_CFAv1Forwarder_$47067_$",
                          "typeString": "function (contract ISuperfluid) returns (contract CFAv1Forwarder)"
                        },
                        "typeName": {
                          "id": 48000,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 47999,
                            "name": "CFAv1Forwarder",
                            "nameLocations": [
                              "3817:14:114"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 47067,
                            "src": "3817:14:114"
                          },
                          "referencedDeclaration": 47067,
                          "src": "3817:14:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                            "typeString": "contract CFAv1Forwarder"
                          }
                        }
                      },
                      "id": 48003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3813:24:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                        "typeString": "contract CFAv1Forwarder"
                      }
                    },
                    "src": "3796:41:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                      "typeString": "contract CFAv1Forwarder"
                    }
                  },
                  "id": 48005,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:41:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48009,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "3955:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 48013,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3998:1:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 48012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3990:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48011,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3990:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3990:10:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48010,
                          "name": "ISuperfluidToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25521,
                          "src": "3973:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperfluidToken_$25521_$",
                            "typeString": "type(contract ISuperfluidToken)"
                          }
                        },
                        "id": 48015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3973:28:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$25521",
                          "typeString": "contract ISuperfluidToken"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48018,
                            "name": "cfaV1Forwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47921,
                            "src": "4023:14:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                              "typeString": "contract CFAv1Forwarder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                              "typeString": "contract CFAv1Forwarder"
                            }
                          ],
                          "id": 48017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4015:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4015:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4015:23:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISuperfluidToken_$25521",
                          "typeString": "contract ISuperfluidToken"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48006,
                        "name": "testGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47900,
                        "src": "3904:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      },
                      "id": 48008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3919:22:114",
                      "memberName": "enableTrustedForwarder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21960,
                      "src": "3904:37:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_ISuperfluidToken_$25521_$_t_address_$returns$__$",
                        "typeString": "function (contract ISuperfluid,contract ISuperfluidToken,address) external"
                      }
                    },
                    "id": 48020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3904:144:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48021,
                  "nodeType": "ExpressionStatement",
                  "src": "3904:144:114"
                },
                {
                  "expression": {
                    "id": 48027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48022,
                      "name": "idaV1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47909,
                      "src": "4108:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                        "typeString": "contract InstantDistributionAgreementV1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48025,
                          "name": "host",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47903,
                          "src": "4197:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Superfluid_$44730",
                            "typeString": "contract Superfluid"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Superfluid_$44730",
                            "typeString": "contract Superfluid"
                          }
                        ],
                        "expression": {
                          "id": 48023,
                          "name": "SuperfluidIDAv1DeployerLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48390,
                          "src": "4116:30:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperfluidIDAv1DeployerLibrary_$48390_$",
                            "typeString": "type(library SuperfluidIDAv1DeployerLibrary)"
                          }
                        },
                        "id": 48024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4160:36:114",
                        "memberName": "deployInstantDistributionAgreementV1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48389,
                        "src": "4116:80:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_ISuperfluid_$25106_$returns$_t_contract$_InstantDistributionAgreementV1_$14567_$",
                          "typeString": "function (contract ISuperfluid) returns (contract InstantDistributionAgreementV1)"
                        }
                      },
                      "id": 48026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4116:86:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                        "typeString": "contract InstantDistributionAgreementV1"
                      }
                    },
                    "src": "4108:94:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                      "typeString": "contract InstantDistributionAgreementV1"
                    }
                  },
                  "id": 48028,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:94:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48032,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "4318:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48035,
                            "name": "idaV1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47909,
                            "src": "4332:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                              "typeString": "contract InstantDistributionAgreementV1"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                              "typeString": "contract InstantDistributionAgreementV1"
                            }
                          ],
                          "id": 48034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4324:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48033,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4324:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4324:14:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48029,
                        "name": "testGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47900,
                        "src": "4280:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      },
                      "id": 48031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4295:22:114",
                      "memberName": "registerAgreementClass",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21045,
                      "src": "4280:37:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_address_$returns$__$",
                        "typeString": "function (contract ISuperfluid,address) external"
                      }
                    },
                    "id": 48037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4280:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48038,
                  "nodeType": "ExpressionStatement",
                  "src": "4280:59:114"
                },
                {
                  "assignments": [
                    48041
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48041,
                      "mutability": "mutable",
                      "name": "constantOutflowNFTProxy",
                      "nameLocation": "4424:23:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 48271,
                      "src": "4414:33:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                        "typeString": "contract UUPSProxy"
                      },
                      "typeName": {
                        "id": 48040,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48039,
                          "name": "UUPSProxy",
                          "nameLocations": [
                            "4414:9:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46023,
                          "src": "4414:9:114"
                        },
                        "referencedDeclaration": 46023,
                        "src": "4414:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48046,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4450:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$46023_$",
                        "typeString": "function () returns (contract UUPSProxy)"
                      },
                      "typeName": {
                        "id": 48043,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48042,
                          "name": "UUPSProxy",
                          "nameLocations": [
                            "4454:9:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46023,
                          "src": "4454:9:114"
                        },
                        "referencedDeclaration": 46023,
                        "src": "4454:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      }
                    },
                    "id": 48045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4450:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                      "typeString": "contract UUPSProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4414:51:114"
                },
                {
                  "assignments": [
                    48049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48049,
                      "mutability": "mutable",
                      "name": "constantInflowNFTProxy",
                      "nameLocation": "4550:22:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 48271,
                      "src": "4540:32:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                        "typeString": "contract UUPSProxy"
                      },
                      "typeName": {
                        "id": 48048,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48047,
                          "name": "UUPSProxy",
                          "nameLocations": [
                            "4540:9:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46023,
                          "src": "4540:9:114"
                        },
                        "referencedDeclaration": 46023,
                        "src": "4540:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48054,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4575:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$46023_$",
                        "typeString": "function () returns (contract UUPSProxy)"
                      },
                      "typeName": {
                        "id": 48051,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48050,
                          "name": "UUPSProxy",
                          "nameLocations": [
                            "4579:9:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46023,
                          "src": "4579:9:114"
                        },
                        "referencedDeclaration": 46023,
                        "src": "4579:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      }
                    },
                    "id": 48053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4575:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                      "typeString": "contract UUPSProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4540:50:114"
                },
                {
                  "assignments": [
                    48057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48057,
                      "mutability": "mutable",
                      "name": "constantOutflowNFTLogic",
                      "nameLocation": "4684:23:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 48271,
                      "src": "4665:42:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                        "typeString": "contract ConstantOutflowNFT"
                      },
                      "typeName": {
                        "id": 48056,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48055,
                          "name": "ConstantOutflowNFT",
                          "nameLocations": [
                            "4665:18:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38245,
                          "src": "4665:18:114"
                        },
                        "referencedDeclaration": 38245,
                        "src": "4665:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                          "typeString": "contract ConstantOutflowNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48070,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48061,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "4746:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48065,
                                "name": "constantInflowNFTProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48049,
                                "src": "4791:22:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              ],
                              "id": 48064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4783:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48063,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4783:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4783:31:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48062,
                          "name": "IConstantInflowNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23703,
                          "src": "4764:18:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConstantInflowNFT_$23703_$",
                            "typeString": "type(contract IConstantInflowNFT)"
                          }
                        },
                        "id": 48067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4764:51:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 48068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4829:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        },
                        {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                          "typeString": "contract IConstantInflowNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 48060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4710:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_IConstantInflowNFT_$23703_$_t_string_memory_ptr_$returns$_t_contract$_ConstantOutflowNFT_$38245_$",
                        "typeString": "function (contract ISuperfluid,contract IConstantInflowNFT,string memory) returns (contract ConstantOutflowNFT)"
                      },
                      "typeName": {
                        "id": 48059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48058,
                          "name": "ConstantOutflowNFT",
                          "nameLocations": [
                            "4714:18:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38245,
                          "src": "4714:18:114"
                        },
                        "referencedDeclaration": 38245,
                        "src": "4714:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                          "typeString": "contract ConstantOutflowNFT"
                        }
                      }
                    },
                    "id": 48069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4710:131:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                      "typeString": "contract ConstantOutflowNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4665:176:114"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48071,
                        "name": "constantOutflowNFTLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48057,
                        "src": "4910:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                          "typeString": "contract ConstantOutflowNFT"
                        }
                      },
                      "id": 48073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4934:8:114",
                      "memberName": "castrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45900,
                      "src": "4910:32:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4910:34:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48075,
                  "nodeType": "ExpressionStatement",
                  "src": "4910:34:114"
                },
                {
                  "assignments": [
                    48078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48078,
                      "mutability": "mutable",
                      "name": "constantInflowNFTLogic",
                      "nameLocation": "5036:22:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 48271,
                      "src": "5018:40:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                        "typeString": "contract ConstantInflowNFT"
                      },
                      "typeName": {
                        "id": 48077,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48076,
                          "name": "ConstantInflowNFT",
                          "nameLocations": [
                            "5018:17:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37855,
                          "src": "5018:17:114"
                        },
                        "referencedDeclaration": 37855,
                        "src": "5018:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                          "typeString": "contract ConstantInflowNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48091,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48082,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "5096:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48086,
                                "name": "constantOutflowNFTProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48041,
                                "src": "5142:23:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              ],
                              "id": 48085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5134:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48084,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5134:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5134:32:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48083,
                          "name": "IConstantOutflowNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23757,
                          "src": "5114:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConstantOutflowNFT_$23757_$",
                            "typeString": "type(contract IConstantOutflowNFT)"
                          }
                        },
                        "id": 48088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5114:53:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 48089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5181:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        },
                        {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                          "typeString": "contract IConstantOutflowNFT"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 48081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5061:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_IConstantOutflowNFT_$23757_$_t_string_memory_ptr_$returns$_t_contract$_ConstantInflowNFT_$37855_$",
                        "typeString": "function (contract ISuperfluid,contract IConstantOutflowNFT,string memory) returns (contract ConstantInflowNFT)"
                      },
                      "typeName": {
                        "id": 48080,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48079,
                          "name": "ConstantInflowNFT",
                          "nameLocations": [
                            "5065:17:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37855,
                          "src": "5065:17:114"
                        },
                        "referencedDeclaration": 37855,
                        "src": "5065:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                          "typeString": "contract ConstantInflowNFT"
                        }
                      }
                    },
                    "id": 48090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5061:132:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                      "typeString": "contract ConstantInflowNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5018:175:114"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 48092,
                        "name": "constantInflowNFTLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48078,
                        "src": "5261:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                          "typeString": "contract ConstantInflowNFT"
                        }
                      },
                      "id": 48094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5284:8:114",
                      "memberName": "castrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45900,
                      "src": "5261:31:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 48095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5261:33:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48096,
                  "nodeType": "ExpressionStatement",
                  "src": "5261:33:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48102,
                            "name": "constantOutflowNFTLogic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48057,
                            "src": "5410:23:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                              "typeString": "contract ConstantOutflowNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                              "typeString": "contract ConstantOutflowNFT"
                            }
                          ],
                          "id": 48101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5402:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48100,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5402:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5402:32:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48097,
                        "name": "constantOutflowNFTProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48041,
                        "src": "5349:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "id": 48099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5373:15:114",
                      "memberName": "initializeProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46010,
                      "src": "5349:39:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5349:95:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48105,
                  "nodeType": "ExpressionStatement",
                  "src": "5349:95:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48111,
                            "name": "constantInflowNFTLogic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48078,
                            "src": "5546:22:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                              "typeString": "contract ConstantInflowNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                              "typeString": "contract ConstantInflowNFT"
                            }
                          ],
                          "id": 48110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5538:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48109,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5538:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5538:31:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48106,
                        "name": "constantInflowNFTProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48049,
                        "src": "5499:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "id": 48108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5522:15:114",
                      "memberName": "initializeProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46010,
                      "src": "5499:38:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5499:71:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48114,
                  "nodeType": "ExpressionStatement",
                  "src": "5499:71:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7374616e74204f7574666c6f77204e4654",
                        "id": 48122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5706:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e4ef358eee2b4b4ec3601a2b450720da18ec3b3de3547b7a69f27313de3d419",
                          "typeString": "literal_string \"Constant Outflow NFT\""
                        },
                        "value": "Constant Outflow NFT"
                      },
                      {
                        "hexValue": "434f46",
                        "id": 48123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5742:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7222939d163a63314d3c776bc4223934d208047722a41b2f885ffb762f81c64f",
                          "typeString": "literal_string \"COF\""
                        },
                        "value": "COF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8e4ef358eee2b4b4ec3601a2b450720da18ec3b3de3547b7a69f27313de3d419",
                          "typeString": "literal_string \"Constant Outflow NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7222939d163a63314d3c776bc4223934d208047722a41b2f885ffb762f81c64f",
                          "typeString": "literal_string \"COF\""
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48118,
                                "name": "constantOutflowNFTProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48041,
                                "src": "5656:23:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              ],
                              "id": 48117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5648:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48116,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5648:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5648:32:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48115,
                          "name": "IConstantOutflowNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23757,
                          "src": "5628:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConstantOutflowNFT_$23757_$",
                            "typeString": "type(contract IConstantOutflowNFT)"
                          }
                        },
                        "id": 48120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5628:53:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      },
                      "id": 48121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5682:10:114",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23825,
                      "src": "5628:64:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 48124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5628:129:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48125,
                  "nodeType": "ExpressionStatement",
                  "src": "5628:129:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7374616e7420496e666c6f77204e4654",
                        "id": 48133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5891:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18536c2d6abc551506cd08a042dd4aa24c0ed6ecb844836decef576b39ef8088",
                          "typeString": "literal_string \"Constant Inflow NFT\""
                        },
                        "value": "Constant Inflow NFT"
                      },
                      {
                        "hexValue": "434946",
                        "id": 48134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5926:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49d75a3f45f7260928e39a1bc7858a873b344b2ede40957ecb286c93772750bb",
                          "typeString": "literal_string \"CIF\""
                        },
                        "value": "CIF"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_18536c2d6abc551506cd08a042dd4aa24c0ed6ecb844836decef576b39ef8088",
                          "typeString": "literal_string \"Constant Inflow NFT\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49d75a3f45f7260928e39a1bc7858a873b344b2ede40957ecb286c93772750bb",
                          "typeString": "literal_string \"CIF\""
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 48129,
                                "name": "constantInflowNFTProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48049,
                                "src": "5842:22:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                  "typeString": "contract UUPSProxy"
                                }
                              ],
                              "id": 48128,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5834:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48127,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5834:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 48130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5834:31:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 48126,
                          "name": "IConstantInflowNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23703,
                          "src": "5815:18:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IConstantInflowNFT_$23703_$",
                            "typeString": "type(contract IConstantInflowNFT)"
                          }
                        },
                        "id": 48131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5815:51:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      },
                      "id": 48132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5867:10:114",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23825,
                      "src": "5815:62:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) external"
                      }
                    },
                    "id": 48135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5815:126:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48136,
                  "nodeType": "ExpressionStatement",
                  "src": "5815:126:114"
                },
                {
                  "assignments": [
                    48139
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48139,
                      "mutability": "mutable",
                      "name": "superTokenLogic",
                      "nameLocation": "6017:15:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 48271,
                      "src": "6006:26:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperToken_$40945",
                        "typeString": "contract SuperToken"
                      },
                      "typeName": {
                        "id": 48138,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48137,
                          "name": "SuperToken",
                          "nameLocations": [
                            "6006:10:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40945,
                          "src": "6006:10:114"
                        },
                        "referencedDeclaration": 40945,
                        "src": "6006:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperToken_$40945",
                          "typeString": "contract SuperToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48158,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48143,
                            "name": "host",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47903,
                            "src": "6124:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Superfluid_$44730",
                              "typeString": "contract Superfluid"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 48147,
                                    "name": "constantOutflowNFTProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48041,
                                    "src": "6174:23:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                      "typeString": "contract UUPSProxy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                      "typeString": "contract UUPSProxy"
                                    }
                                  ],
                                  "id": 48146,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6166:7:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 48145,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6166:7:114",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 48148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6166:32:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48144,
                              "name": "IConstantOutflowNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23757,
                              "src": "6146:19:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IConstantOutflowNFT_$23757_$",
                                "typeString": "type(contract IConstantOutflowNFT)"
                              }
                            },
                            "id": 48149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6146:53:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                              "typeString": "contract IConstantOutflowNFT"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 48153,
                                    "name": "constantInflowNFTProxy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48049,
                                    "src": "6244:22:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                      "typeString": "contract UUPSProxy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                      "typeString": "contract UUPSProxy"
                                    }
                                  ],
                                  "id": 48152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6236:7:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 48151,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6236:7:114",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 48154,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6236:31:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 48150,
                              "name": "IConstantInflowNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23703,
                              "src": "6217:18:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IConstantInflowNFT_$23703_$",
                                "typeString": "type(contract IConstantInflowNFT)"
                              }
                            },
                            "id": 48155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6217:51:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                              "typeString": "contract IConstantInflowNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Superfluid_$44730",
                              "typeString": "contract Superfluid"
                            },
                            {
                              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                              "typeString": "contract IConstantOutflowNFT"
                            },
                            {
                              "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                              "typeString": "contract IConstantInflowNFT"
                            }
                          ],
                          "expression": {
                            "id": 48141,
                            "name": "SuperTokenDeployerLibrary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48442,
                            "src": "6059:25:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SuperTokenDeployerLibrary_$48442_$",
                              "typeString": "type(library SuperTokenDeployerLibrary)"
                            }
                          },
                          "id": 48142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6085:21:114",
                          "memberName": "deploySuperTokenLogic",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48441,
                          "src": "6059:47:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_IConstantOutflowNFT_$23757_$_t_contract$_IConstantInflowNFT_$23703_$returns$_t_address_$",
                            "typeString": "function (contract ISuperfluid,contract IConstantOutflowNFT,contract IConstantInflowNFT) returns (address)"
                          }
                        },
                        "id": 48156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6059:223:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48140,
                      "name": "SuperToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40945,
                      "src": "6035:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SuperToken_$40945_$",
                        "typeString": "type(contract SuperToken)"
                      }
                    },
                    "id": 48157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6035:257:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperToken_$40945",
                      "typeString": "contract SuperToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6006:286:114"
                },
                {
                  "assignments": [
                    48161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48161,
                      "mutability": "mutable",
                      "name": "superTokenFactoryLogic",
                      "nameLocation": "6357:22:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 48271,
                      "src": "6339:40:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                        "typeString": "contract SuperTokenFactory"
                      },
                      "typeName": {
                        "id": 48160,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48159,
                          "name": "SuperTokenFactory",
                          "nameLocations": [
                            "6339:17:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41689,
                          "src": "6339:17:114"
                        },
                        "referencedDeclaration": 41689,
                        "src": "6339:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                          "typeString": "contract SuperTokenFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48169,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48164,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "6471:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      {
                        "id": 48165,
                        "name": "superTokenLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48139,
                        "src": "6493:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperToken_$40945",
                          "typeString": "contract SuperToken"
                        }
                      },
                      {
                        "id": 48166,
                        "name": "constantOutflowNFTLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48057,
                        "src": "6526:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                          "typeString": "contract ConstantOutflowNFT"
                        }
                      },
                      {
                        "id": 48167,
                        "name": "constantInflowNFTLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48078,
                        "src": "6567:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                          "typeString": "contract ConstantInflowNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        },
                        {
                          "typeIdentifier": "t_contract$_SuperToken_$40945",
                          "typeString": "contract SuperToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_ConstantOutflowNFT_$38245",
                          "typeString": "contract ConstantOutflowNFT"
                        },
                        {
                          "typeIdentifier": "t_contract$_ConstantInflowNFT_$37855",
                          "typeString": "contract ConstantInflowNFT"
                        }
                      ],
                      "expression": {
                        "id": 48162,
                        "name": "SuperfluidPeripheryDeployerLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48489,
                        "src": "6382:34:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SuperfluidPeripheryDeployerLibrary_$48489_$",
                          "typeString": "type(library SuperfluidPeripheryDeployerLibrary)"
                        }
                      },
                      "id": 48163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6430:23:114",
                      "memberName": "deploySuperTokenFactory",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48472,
                      "src": "6382:71:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_ISuperToken_$24454_$_t_contract$_IConstantOutflowNFT_$23757_$_t_contract$_IConstantInflowNFT_$23703_$returns$_t_contract$_SuperTokenFactory_$41689_$",
                        "typeString": "function (contract ISuperfluid,contract ISuperToken,contract IConstantOutflowNFT,contract IConstantInflowNFT) returns (contract SuperTokenFactory)"
                      }
                    },
                    "id": 48168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6382:221:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                      "typeString": "contract SuperTokenFactory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6339:264:114"
                },
                {
                  "assignments": [
                    48172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48172,
                      "mutability": "mutable",
                      "name": "superTokenFactoryProxy",
                      "nameLocation": "6688:22:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 48271,
                      "src": "6678:32:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                        "typeString": "contract UUPSProxy"
                      },
                      "typeName": {
                        "id": 48171,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48170,
                          "name": "UUPSProxy",
                          "nameLocations": [
                            "6678:9:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46023,
                          "src": "6678:9:114"
                        },
                        "referencedDeclaration": 46023,
                        "src": "6678:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48177,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6713:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UUPSProxy_$46023_$",
                        "typeString": "function () returns (contract UUPSProxy)"
                      },
                      "typeName": {
                        "id": 48174,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48173,
                          "name": "UUPSProxy",
                          "nameLocations": [
                            "6717:9:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46023,
                          "src": "6717:9:114"
                        },
                        "referencedDeclaration": 46023,
                        "src": "6717:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      }
                    },
                    "id": 48176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6713:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                      "typeString": "contract UUPSProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6678:50:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48183,
                            "name": "superTokenFactoryLogic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48161,
                            "src": "6785:22:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                              "typeString": "contract SuperTokenFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                              "typeString": "contract SuperTokenFactory"
                            }
                          ],
                          "id": 48182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6777:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48181,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6777:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6777:31:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48178,
                        "name": "superTokenFactoryProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48172,
                        "src": "6738:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                          "typeString": "contract UUPSProxy"
                        }
                      },
                      "id": 48180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6761:15:114",
                      "memberName": "initializeProxy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46010,
                      "src": "6738:38:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6738:71:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48186,
                  "nodeType": "ExpressionStatement",
                  "src": "6738:71:114"
                },
                {
                  "expression": {
                    "id": 48194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48187,
                      "name": "superTokenFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47912,
                      "src": "6897:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                        "typeString": "contract SuperTokenFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48191,
                              "name": "superTokenFactoryProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48172,
                              "src": "6943:22:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                "typeString": "contract UUPSProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UUPSProxy_$46023",
                                "typeString": "contract UUPSProxy"
                              }
                            ],
                            "id": 48190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6935:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48189,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6935:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6935:31:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48188,
                        "name": "SuperTokenFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41689,
                        "src": "6917:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SuperTokenFactory_$41689_$",
                          "typeString": "type(contract SuperTokenFactory)"
                        }
                      },
                      "id": 48193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6917:50:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                        "typeString": "contract SuperTokenFactory"
                      }
                    },
                    "src": "6897:70:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                      "typeString": "contract SuperTokenFactory"
                    }
                  },
                  "id": 48195,
                  "nodeType": "ExpressionStatement",
                  "src": "6897:70:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48199,
                        "name": "host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47903,
                        "src": "7110:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 48202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7136:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 48201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7128:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7128:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7128:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 48207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7166:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 48206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "7152:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 48204,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7156:7:114",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 48205,
                            "nodeType": "ArrayTypeName",
                            "src": "7156:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 48208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7152:16:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 48211,
                            "name": "superTokenFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47912,
                            "src": "7190:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                              "typeString": "contract SuperTokenFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                              "typeString": "contract SuperTokenFactory"
                            }
                          ],
                          "id": 48210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7182:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48209,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7182:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7182:26:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48196,
                        "name": "testGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47900,
                        "src": "7066:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      },
                      "id": 48198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7081:15:114",
                      "memberName": "updateContracts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21153,
                      "src": "7066:30:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (contract ISuperfluid,address,address[] memory,address) external"
                      }
                    },
                    "id": 48213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7066:152:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48214,
                  "nodeType": "ExpressionStatement",
                  "src": "7066:152:114"
                },
                {
                  "expression": {
                    "id": 48221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48215,
                      "name": "testResolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47915,
                      "src": "7327:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestResolver_$49546",
                        "typeString": "contract TestResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 48218,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7409:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 48219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7413:6:114",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7409:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48216,
                          "name": "SuperfluidPeripheryDeployerLibrary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48489,
                          "src": "7342:34:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SuperfluidPeripheryDeployerLibrary_$48489_$",
                            "typeString": "type(library SuperfluidPeripheryDeployerLibrary)"
                          }
                        },
                        "id": 48217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7377:18:114",
                        "memberName": "deployTestResolver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48488,
                        "src": "7342:53:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_nonpayable$_t_address_$returns$_t_contract$_TestResolver_$49546_$",
                          "typeString": "function (address) returns (contract TestResolver)"
                        }
                      },
                      "id": 48220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7342:87:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestResolver_$49546",
                        "typeString": "contract TestResolver"
                      }
                    },
                    "src": "7327:102:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestResolver_$49546",
                      "typeString": "contract TestResolver"
                    }
                  },
                  "id": 48222,
                  "nodeType": "ExpressionStatement",
                  "src": "7327:102:114"
                },
                {
                  "expression": {
                    "id": 48229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48223,
                      "name": "superfluidLoader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47918,
                      "src": "7475:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                        "typeString": "contract SuperfluidLoader"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48227,
                          "name": "testResolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47915,
                          "src": "7515:12:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestResolver_$49546",
                            "typeString": "contract TestResolver"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TestResolver_$49546",
                            "typeString": "contract TestResolver"
                          }
                        ],
                        "id": 48226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7494:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IResolver_$25665_$returns$_t_contract$_SuperfluidLoader_$48585_$",
                          "typeString": "function (contract IResolver) returns (contract SuperfluidLoader)"
                        },
                        "typeName": {
                          "id": 48225,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 48224,
                            "name": "SuperfluidLoader",
                            "nameLocations": [
                              "7498:16:114"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 48585,
                            "src": "7498:16:114"
                          },
                          "referencedDeclaration": 48585,
                          "src": "7498:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                            "typeString": "contract SuperfluidLoader"
                          }
                        }
                      },
                      "id": 48228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7494:34:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                        "typeString": "contract SuperfluidLoader"
                      }
                    },
                    "src": "7475:53:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                      "typeString": "contract SuperfluidLoader"
                    }
                  },
                  "id": 48230,
                  "nodeType": "ExpressionStatement",
                  "src": "7475:53:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "54657374476f7665726e616e63652e74657374",
                        "id": 48234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7601:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_403ad82bcbe24ad0206d794480eab2e731c4bbd31a152b8ed750665a84f0d32f",
                          "typeString": "literal_string \"TestGovernance.test\""
                        },
                        "value": "TestGovernance.test"
                      },
                      {
                        "arguments": [
                          {
                            "id": 48237,
                            "name": "testGovernance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47900,
                            "src": "7632:14:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestGovernance_$49516",
                              "typeString": "contract TestGovernance"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestGovernance_$49516",
                              "typeString": "contract TestGovernance"
                            }
                          ],
                          "id": 48236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7624:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48235,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7624:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7624:23:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_403ad82bcbe24ad0206d794480eab2e731c4bbd31a152b8ed750665a84f0d32f",
                          "typeString": "literal_string \"TestGovernance.test\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48231,
                        "name": "testResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47915,
                        "src": "7584:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestResolver_$49546",
                          "typeString": "contract TestResolver"
                        }
                      },
                      "id": 48233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7597:3:114",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "7584:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 48239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7584:64:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48240,
                  "nodeType": "ExpressionStatement",
                  "src": "7584:64:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5375706572666c7569642e74657374",
                        "id": 48244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7721:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f08707e8cd9570eefea794e72bd264bd950b37bc97d2dd6ac617393cf203875",
                          "typeString": "literal_string \"Superfluid.test\""
                        },
                        "value": "Superfluid.test"
                      },
                      {
                        "arguments": [
                          {
                            "id": 48247,
                            "name": "host",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47903,
                            "src": "7748:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Superfluid_$44730",
                              "typeString": "contract Superfluid"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Superfluid_$44730",
                              "typeString": "contract Superfluid"
                            }
                          ],
                          "id": 48246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7740:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48245,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7740:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7740:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0f08707e8cd9570eefea794e72bd264bd950b37bc97d2dd6ac617393cf203875",
                          "typeString": "literal_string \"Superfluid.test\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48241,
                        "name": "testResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47915,
                        "src": "7704:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestResolver_$49546",
                          "typeString": "contract TestResolver"
                        }
                      },
                      "id": 48243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7717:3:114",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "7704:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 48249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7704:50:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48250,
                  "nodeType": "ExpressionStatement",
                  "src": "7704:50:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5375706572666c7569644c6f616465722d7631",
                        "id": 48254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7833:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_656c2d58a19fcc047002ebe0fe416e3c4da710103627e77478b3d41f86ac8627",
                          "typeString": "literal_string \"SuperfluidLoader-v1\""
                        },
                        "value": "SuperfluidLoader-v1"
                      },
                      {
                        "arguments": [
                          {
                            "id": 48257,
                            "name": "superfluidLoader",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47918,
                            "src": "7864:16:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                              "typeString": "contract SuperfluidLoader"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                              "typeString": "contract SuperfluidLoader"
                            }
                          ],
                          "id": 48256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7856:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48255,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7856:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7856:25:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_656c2d58a19fcc047002ebe0fe416e3c4da710103627e77478b3d41f86ac8627",
                          "typeString": "literal_string \"SuperfluidLoader-v1\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48251,
                        "name": "testResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47915,
                        "src": "7816:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestResolver_$49546",
                          "typeString": "contract TestResolver"
                        }
                      },
                      "id": 48253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7829:3:114",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "7816:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 48259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7816:66:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48260,
                  "nodeType": "ExpressionStatement",
                  "src": "7816:66:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4346417631466f72776172646572",
                        "id": 48264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7910:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dc6c846049194f23a1d6708cf174691371574a46b88392559eaff2c672b24454",
                          "typeString": "literal_string \"CFAv1Forwarder\""
                        },
                        "value": "CFAv1Forwarder"
                      },
                      {
                        "arguments": [
                          {
                            "id": 48267,
                            "name": "cfaV1Forwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47921,
                            "src": "7936:14:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                              "typeString": "contract CFAv1Forwarder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                              "typeString": "contract CFAv1Forwarder"
                            }
                          ],
                          "id": 48266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7928:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 48265,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7928:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7928:23:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_dc6c846049194f23a1d6708cf174691371574a46b88392559eaff2c672b24454",
                          "typeString": "literal_string \"CFAv1Forwarder\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48261,
                        "name": "testResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47915,
                        "src": "7893:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestResolver_$49546",
                          "typeString": "contract TestResolver"
                        }
                      },
                      "id": 48263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7906:3:114",
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47121,
                      "src": "7893:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) external"
                      }
                    },
                    "id": 48269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7893:59:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48270,
                  "nodeType": "ExpressionStatement",
                  "src": "7893:59:114"
                }
              ]
            },
            "id": 48272,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2503:2:114"
            },
            "returnParameters": {
              "id": 47923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2506:0:114"
            },
            "scope": 48319,
            "src": "2492:5467:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 48304,
              "nodeType": "Block",
              "src": "8081:464:114",
              "statements": [
                {
                  "expression": {
                    "id": 48300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48279,
                      "name": "sf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48277,
                      "src": "8091:2:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Framework_$47891_memory_ptr",
                        "typeString": "struct SuperfluidFrameworkDeployer.Framework memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48281,
                          "name": "testGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47900,
                          "src": "8132:14:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestGovernance_$49516",
                            "typeString": "contract TestGovernance"
                          }
                        },
                        {
                          "id": 48282,
                          "name": "host",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47903,
                          "src": "8166:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Superfluid_$44730",
                            "typeString": "contract Superfluid"
                          }
                        },
                        {
                          "id": 48283,
                          "name": "cfaV1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47906,
                          "src": "8189:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                            "typeString": "contract ConstantFlowAgreementV1"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 48286,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47903,
                              "src": "8238:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Superfluid_$44730",
                                "typeString": "contract Superfluid"
                              }
                            },
                            {
                              "id": 48287,
                              "name": "cfaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47906,
                              "src": "8244:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                                "typeString": "contract ConstantFlowAgreementV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Superfluid_$44730",
                                "typeString": "contract Superfluid"
                              },
                              {
                                "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                                "typeString": "contract ConstantFlowAgreementV1"
                              }
                            ],
                            "expression": {
                              "id": 48284,
                              "name": "CFAv1Library",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15747,
                              "src": "8216:12:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_CFAv1Library_$15747_$",
                                "typeString": "type(library CFAv1Library)"
                              }
                            },
                            "id": 48285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8229:8:114",
                            "memberName": "InitData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14582,
                            "src": "8216:21:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_InitData_$14582_storage_ptr_$",
                              "typeString": "type(struct CFAv1Library.InitData storage pointer)"
                            }
                          },
                          "id": 48288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8216:34:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$14582_memory_ptr",
                            "typeString": "struct CFAv1Library.InitData memory"
                          }
                        },
                        {
                          "id": 48289,
                          "name": "idaV1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47909,
                          "src": "8269:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                            "typeString": "contract InstantDistributionAgreementV1"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 48292,
                              "name": "host",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47903,
                              "src": "8318:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Superfluid_$44730",
                                "typeString": "contract Superfluid"
                              }
                            },
                            {
                              "id": 48293,
                              "name": "idaV1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47909,
                              "src": "8324:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                                "typeString": "contract InstantDistributionAgreementV1"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Superfluid_$44730",
                                "typeString": "contract Superfluid"
                              },
                              {
                                "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                                "typeString": "contract InstantDistributionAgreementV1"
                              }
                            ],
                            "expression": {
                              "id": 48290,
                              "name": "IDAv1Library",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17102,
                              "src": "8296:12:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IDAv1Library_$17102_$",
                                "typeString": "type(library IDAv1Library)"
                              }
                            },
                            "id": 48291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8309:8:114",
                            "memberName": "InitData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15763,
                            "src": "8296:21:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_InitData_$15763_storage_ptr_$",
                              "typeString": "type(struct IDAv1Library.InitData storage pointer)"
                            }
                          },
                          "id": 48294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8296:34:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitData_$15763_memory_ptr",
                            "typeString": "struct IDAv1Library.InitData memory"
                          }
                        },
                        {
                          "id": 48295,
                          "name": "superTokenFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47912,
                          "src": "8363:17:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                            "typeString": "contract SuperTokenFactory"
                          }
                        },
                        {
                          "id": 48296,
                          "name": "testResolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47915,
                          "src": "8404:12:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestResolver_$49546",
                            "typeString": "contract TestResolver"
                          }
                        },
                        {
                          "id": 48297,
                          "name": "superfluidLoader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47918,
                          "src": "8448:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                            "typeString": "contract SuperfluidLoader"
                          }
                        },
                        {
                          "id": 48298,
                          "name": "cfaV1Forwarder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47921,
                          "src": "8494:14:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                            "typeString": "contract CFAv1Forwarder"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TestGovernance_$49516",
                            "typeString": "contract TestGovernance"
                          },
                          {
                            "typeIdentifier": "t_contract$_Superfluid_$44730",
                            "typeString": "contract Superfluid"
                          },
                          {
                            "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                            "typeString": "contract ConstantFlowAgreementV1"
                          },
                          {
                            "typeIdentifier": "t_struct$_InitData_$14582_memory_ptr",
                            "typeString": "struct CFAv1Library.InitData memory"
                          },
                          {
                            "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                            "typeString": "contract InstantDistributionAgreementV1"
                          },
                          {
                            "typeIdentifier": "t_struct$_InitData_$15763_memory_ptr",
                            "typeString": "struct IDAv1Library.InitData memory"
                          },
                          {
                            "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                            "typeString": "contract SuperTokenFactory"
                          },
                          {
                            "typeIdentifier": "t_contract$_TestResolver_$49546",
                            "typeString": "contract TestResolver"
                          },
                          {
                            "typeIdentifier": "t_contract$_SuperfluidLoader_$48585",
                            "typeString": "contract SuperfluidLoader"
                          },
                          {
                            "typeIdentifier": "t_contract$_CFAv1Forwarder_$47067",
                            "typeString": "contract CFAv1Forwarder"
                          }
                        ],
                        "id": 48280,
                        "name": "Framework",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47891,
                        "src": "8096:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Framework_$47891_storage_ptr_$",
                          "typeString": "type(struct SuperfluidFrameworkDeployer.Framework storage pointer)"
                        }
                      },
                      "id": 48299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "8120:10:114",
                        "8160:4:114",
                        "8184:3:114",
                        "8208:6:114",
                        "8264:3:114",
                        "8288:6:114",
                        "8344:17:114",
                        "8394:8:114",
                        "8430:16:114",
                        "8478:14:114"
                      ],
                      "names": [
                        "governance",
                        "host",
                        "cfa",
                        "cfaLib",
                        "ida",
                        "idaLib",
                        "superTokenFactory",
                        "resolver",
                        "superfluidLoader",
                        "cfaV1Forwarder"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "8096:423:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Framework_$47891_memory_ptr",
                        "typeString": "struct SuperfluidFrameworkDeployer.Framework memory"
                      }
                    },
                    "src": "8091:428:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Framework_$47891_memory_ptr",
                      "typeString": "struct SuperfluidFrameworkDeployer.Framework memory"
                    }
                  },
                  "id": 48301,
                  "nodeType": "ExpressionStatement",
                  "src": "8091:428:114"
                },
                {
                  "expression": {
                    "id": 48302,
                    "name": "sf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48277,
                    "src": "8536:2:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Framework_$47891_memory_ptr",
                      "typeString": "struct SuperfluidFrameworkDeployer.Framework memory"
                    }
                  },
                  "functionReturnParameters": 48278,
                  "id": 48303,
                  "nodeType": "Return",
                  "src": "8529:9:114"
                }
              ]
            },
            "documentation": {
              "id": 48273,
              "nodeType": "StructuredDocumentation",
              "src": "7965:43:114",
              "text": "@notice Fetches the framework contracts"
            },
            "functionSelector": "dfa98ad5",
            "id": 48305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFramework",
            "nameLocation": "8022:12:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8034:2:114"
            },
            "returnParameters": {
              "id": 48278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48277,
                  "mutability": "mutable",
                  "name": "sf",
                  "nameLocation": "8077:2:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48305,
                  "src": "8060:19:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Framework_$47891_memory_ptr",
                    "typeString": "struct SuperfluidFrameworkDeployer.Framework"
                  },
                  "typeName": {
                    "id": 48276,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48275,
                      "name": "Framework",
                      "nameLocations": [
                        "8060:9:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47891,
                      "src": "8060:9:114"
                    },
                    "referencedDeclaration": 47891,
                    "src": "8060:9:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Framework_$47891_storage_ptr",
                      "typeString": "struct SuperfluidFrameworkDeployer.Framework"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8059:21:114"
            },
            "scope": 48319,
            "src": "8013:532:114",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 48317,
              "nodeType": "Block",
              "src": "8829:59:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48314,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48308,
                        "src": "8872:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48311,
                        "name": "testGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47900,
                        "src": "8839:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      },
                      "id": 48313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8854:17:114",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 630,
                      "src": "8839:32:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8839:42:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48316,
                  "nodeType": "ExpressionStatement",
                  "src": "8839:42:114"
                }
              ]
            },
            "documentation": {
              "id": 48306,
              "nodeType": "StructuredDocumentation",
              "src": "8551:221:114",
              "text": "@notice Transfer ownership of the TestGovernance contract\n @dev This function allows you to transfer ownership of TestGovernance when testing\n @param newOwner the new owner of the TestGovernance contract"
            },
            "functionSelector": "f2fde38b",
            "id": 48318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "8786:17:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48308,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "8812:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48318,
                  "src": "8804:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8804:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8803:18:114"
            },
            "returnParameters": {
              "id": 48310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8829:0:114"
            },
            "scope": 48319,
            "src": "8777:111:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 48490,
        "src": "1625:7265:114",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SuperfluidGovDeployerLibrary",
        "contractDependencies": [
          49516
        ],
        "contractKind": "library",
        "documentation": {
          "id": 48320,
          "nodeType": "StructuredDocumentation",
          "src": "9068:277:114",
          "text": "@title SuperfluidGovDeployerLibrary\n @author Superfluid\n @notice An external library that deploys the Superfluid TestGovernance contract with additional functions\n @dev This library is used for testing purposes only, not deployments to test OR production networks"
        },
        "fullyImplemented": true,
        "id": 48350,
        "linearizedBaseContracts": [
          48350
        ],
        "name": "SuperfluidGovDeployerLibrary",
        "nameLocation": "9353:28:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 48332,
              "nodeType": "Block",
              "src": "9572:44:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9589:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestGovernance_$49516_$",
                        "typeString": "function () returns (contract TestGovernance)"
                      },
                      "typeName": {
                        "id": 48328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48327,
                          "name": "TestGovernance",
                          "nameLocations": [
                            "9593:14:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49516,
                          "src": "9593:14:114"
                        },
                        "referencedDeclaration": 49516,
                        "src": "9593:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      }
                    },
                    "id": 48330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9589:20:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestGovernance_$49516",
                      "typeString": "contract TestGovernance"
                    }
                  },
                  "functionReturnParameters": 48326,
                  "id": 48331,
                  "nodeType": "Return",
                  "src": "9582:27:114"
                }
              ]
            },
            "documentation": {
              "id": 48321,
              "nodeType": "StructuredDocumentation",
              "src": "9388:113:114",
              "text": "@notice deploys the Superfluid TestGovernance Contract\n @return newly deployed TestGovernance contract"
            },
            "functionSelector": "c3acf1b3",
            "id": 48333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployTestGovernance",
            "nameLocation": "9515:20:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48322,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9535:2:114"
            },
            "returnParameters": {
              "id": 48326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48333,
                  "src": "9556:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TestGovernance_$49516",
                    "typeString": "contract TestGovernance"
                  },
                  "typeName": {
                    "id": 48324,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48323,
                      "name": "TestGovernance",
                      "nameLocations": [
                        "9556:14:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49516,
                      "src": "9556:14:114"
                    },
                    "referencedDeclaration": 49516,
                    "src": "9556:14:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestGovernance_$49516",
                      "typeString": "contract TestGovernance"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9555:16:114"
            },
            "scope": 48350,
            "src": "9506:110:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 48348,
              "nodeType": "Block",
              "src": "9956:50:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48345,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48339,
                        "src": "9989:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48342,
                        "name": "_gov",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48337,
                        "src": "9966:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestGovernance_$49516",
                          "typeString": "contract TestGovernance"
                        }
                      },
                      "id": 48344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9971:17:114",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 630,
                      "src": "9966:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 48346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9966:33:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48347,
                  "nodeType": "ExpressionStatement",
                  "src": "9966:33:114"
                }
              ]
            },
            "documentation": {
              "id": 48334,
              "nodeType": "StructuredDocumentation",
              "src": "9622:231:114",
              "text": "@notice transfers ownership of _gov to _newOwner\n @dev _gov must be deployed from this contract\n @param _gov address of the TestGovernance contract\n @param _newOwner the new owner of the governance contract"
            },
            "functionSelector": "7eb62e56",
            "id": 48349,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferOwnership",
            "nameLocation": "9867:17:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48337,
                  "mutability": "mutable",
                  "name": "_gov",
                  "nameLocation": "9909:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48349,
                  "src": "9894:19:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TestGovernance_$49516",
                    "typeString": "contract TestGovernance"
                  },
                  "typeName": {
                    "id": 48336,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48335,
                      "name": "TestGovernance",
                      "nameLocations": [
                        "9894:14:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49516,
                      "src": "9894:14:114"
                    },
                    "referencedDeclaration": 49516,
                    "src": "9894:14:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestGovernance_$49516",
                      "typeString": "contract TestGovernance"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48339,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "9931:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48349,
                  "src": "9923:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9923:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9884:62:114"
            },
            "returnParameters": {
              "id": 48341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9956:0:114"
            },
            "scope": 48350,
            "src": "9858:148:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 48490,
        "src": "9345:663:114",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SuperfluidHostDeployerLibrary",
        "contractDependencies": [
          44730
        ],
        "contractKind": "library",
        "documentation": {
          "id": 48351,
          "nodeType": "StructuredDocumentation",
          "src": "10010:269:114",
          "text": "@title SuperfluidHostDeployerLibrary\n @author Superfluid\n @notice An external library that deploys the Superfluid Host contract with additional functions.\n @dev This library is used for testing purposes only, not deployments to test OR production networks"
        },
        "fullyImplemented": true,
        "id": 48371,
        "linearizedBaseContracts": [
          48371
        ],
        "name": "SuperfluidHostDeployerLibrary",
        "nameLocation": "10287:29:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 48369,
              "nodeType": "Block",
              "src": "10730:79:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48365,
                        "name": "_nonUpgradable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48354,
                        "src": "10762:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 48366,
                        "name": "_appWhiteListingEnabled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48356,
                        "src": "10778:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10747:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_bool_$_t_bool_$returns$_t_contract$_Superfluid_$44730_$",
                        "typeString": "function (bool,bool) returns (contract Superfluid)"
                      },
                      "typeName": {
                        "id": 48363,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48362,
                          "name": "Superfluid",
                          "nameLocations": [
                            "10751:10:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44730,
                          "src": "10751:10:114"
                        },
                        "referencedDeclaration": 44730,
                        "src": "10751:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Superfluid_$44730",
                          "typeString": "contract Superfluid"
                        }
                      }
                    },
                    "id": 48367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10747:55:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Superfluid_$44730",
                      "typeString": "contract Superfluid"
                    }
                  },
                  "functionReturnParameters": 48361,
                  "id": 48368,
                  "nodeType": "Return",
                  "src": "10740:62:114"
                }
              ]
            },
            "documentation": {
              "id": 48352,
              "nodeType": "StructuredDocumentation",
              "src": "10323:269:114",
              "text": "@notice Deploys the Superfluid Host Contract\n @param _nonUpgradable whether the hsot contract is upgradeable or not\n @param _appWhiteListingEnabled whether app white listing is enabled\n @return Superfluid newly deployed Superfluid Host contract"
            },
            "functionSelector": "8a254221",
            "id": 48370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploySuperfluidHost",
            "nameLocation": "10606:20:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48354,
                  "mutability": "mutable",
                  "name": "_nonUpgradable",
                  "nameLocation": "10641:14:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48370,
                  "src": "10636:19:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48353,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10636:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48356,
                  "mutability": "mutable",
                  "name": "_appWhiteListingEnabled",
                  "nameLocation": "10670:23:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48370,
                  "src": "10665:28:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 48355,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10665:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10626:73:114"
            },
            "returnParameters": {
              "id": 48361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48360,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48370,
                  "src": "10718:10:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Superfluid_$44730",
                    "typeString": "contract Superfluid"
                  },
                  "typeName": {
                    "id": 48359,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48358,
                      "name": "Superfluid",
                      "nameLocations": [
                        "10718:10:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44730,
                      "src": "10718:10:114"
                    },
                    "referencedDeclaration": 44730,
                    "src": "10718:10:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Superfluid_$44730",
                      "typeString": "contract Superfluid"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10717:12:114"
            },
            "scope": 48371,
            "src": "10597:212:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 48490,
        "src": "10279:532:114",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SuperfluidIDAv1DeployerLibrary",
        "contractDependencies": [
          14567
        ],
        "contractKind": "library",
        "documentation": {
          "id": 48372,
          "nodeType": "StructuredDocumentation",
          "src": "10813:270:114",
          "text": "@title SuperfluidIDAv1DeployerLibrary\n @author Superfluid\n @notice An external library that deploys the Superfluid InstantDistributionAgreementV1 contract.\n @dev This library is used for testing purposes only, not deployments to test OR production networks"
        },
        "fullyImplemented": true,
        "id": 48390,
        "linearizedBaseContracts": [
          48390
        ],
        "name": "SuperfluidIDAv1DeployerLibrary",
        "nameLocation": "11091:30:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 48388,
              "nodeType": "Block",
              "src": "11452:65:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48385,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48376,
                        "src": "11504:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                          "typeString": "contract ISuperfluid"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                          "typeString": "contract ISuperfluid"
                        }
                      ],
                      "id": 48384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "11469:34:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$25106_$returns$_t_contract$_InstantDistributionAgreementV1_$14567_$",
                        "typeString": "function (contract ISuperfluid) returns (contract InstantDistributionAgreementV1)"
                      },
                      "typeName": {
                        "id": 48383,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48382,
                          "name": "InstantDistributionAgreementV1",
                          "nameLocations": [
                            "11473:30:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14567,
                          "src": "11473:30:114"
                        },
                        "referencedDeclaration": 14567,
                        "src": "11473:30:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                          "typeString": "contract InstantDistributionAgreementV1"
                        }
                      }
                    },
                    "id": 48386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11469:41:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                      "typeString": "contract InstantDistributionAgreementV1"
                    }
                  },
                  "functionReturnParameters": 48381,
                  "id": 48387,
                  "nodeType": "Return",
                  "src": "11462:48:114"
                }
              ]
            },
            "documentation": {
              "id": 48373,
              "nodeType": "StructuredDocumentation",
              "src": "11128:190:114",
              "text": "@notice deploys the Superfluid InstantDistributionAgreementV1 Contract\n @param _host Superfluid host address\n @return newly deployed InstantDistributionAgreementV1 contract"
            },
            "functionSelector": "66706718",
            "id": 48389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployInstantDistributionAgreementV1",
            "nameLocation": "11332:36:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48376,
                  "mutability": "mutable",
                  "name": "_host",
                  "nameLocation": "11390:5:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48389,
                  "src": "11378:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 48375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48374,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "11378:11:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25106,
                      "src": "11378:11:114"
                    },
                    "referencedDeclaration": 25106,
                    "src": "11378:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11368:33:114"
            },
            "returnParameters": {
              "id": 48381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48380,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48389,
                  "src": "11420:30:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                    "typeString": "contract InstantDistributionAgreementV1"
                  },
                  "typeName": {
                    "id": 48379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48378,
                      "name": "InstantDistributionAgreementV1",
                      "nameLocations": [
                        "11420:30:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 14567,
                      "src": "11420:30:114"
                    },
                    "referencedDeclaration": 14567,
                    "src": "11420:30:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InstantDistributionAgreementV1_$14567",
                      "typeString": "contract InstantDistributionAgreementV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11419:32:114"
            },
            "scope": 48390,
            "src": "11323:194:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 48490,
        "src": "11083:436:114",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SuperfluidCFAv1DeployerLibrary",
        "contractDependencies": [
          11160
        ],
        "contractKind": "library",
        "documentation": {
          "id": 48391,
          "nodeType": "StructuredDocumentation",
          "src": "11521:258:114",
          "text": "@title SuperfluidCFAv1DeployerLibrary\n @author Superfluid\n @notice An external library that deploys Superfluid ConstantFlowAgreementV1 contract\n @dev This library is used for testing purposes only, not deployments to test OR production networks"
        },
        "fullyImplemented": true,
        "id": 48413,
        "linearizedBaseContracts": [
          48413
        ],
        "name": "SuperfluidCFAv1DeployerLibrary",
        "nameLocation": "11787:30:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 48411,
              "nodeType": "Block",
              "src": "12236:68:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48407,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48395,
                        "src": "12281:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      {
                        "id": 48408,
                        "name": "_cfaHook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48398,
                        "src": "12288:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementHook_$22379",
                          "typeString": "contract IConstantFlowAgreementHook"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                          "typeString": "contract ISuperfluid"
                        },
                        {
                          "typeIdentifier": "t_contract$_IConstantFlowAgreementHook_$22379",
                          "typeString": "contract IConstantFlowAgreementHook"
                        }
                      ],
                      "id": 48406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "12253:27:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_IConstantFlowAgreementHook_$22379_$returns$_t_contract$_ConstantFlowAgreementV1_$11160_$",
                        "typeString": "function (contract ISuperfluid,contract IConstantFlowAgreementHook) returns (contract ConstantFlowAgreementV1)"
                      },
                      "typeName": {
                        "id": 48405,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48404,
                          "name": "ConstantFlowAgreementV1",
                          "nameLocations": [
                            "12257:23:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11160,
                          "src": "12257:23:114"
                        },
                        "referencedDeclaration": 11160,
                        "src": "12257:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                          "typeString": "contract ConstantFlowAgreementV1"
                        }
                      }
                    },
                    "id": 48409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12253:44:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                      "typeString": "contract ConstantFlowAgreementV1"
                    }
                  },
                  "functionReturnParameters": 48403,
                  "id": 48410,
                  "nodeType": "Return",
                  "src": "12246:51:114"
                }
              ]
            },
            "documentation": {
              "id": 48392,
              "nodeType": "StructuredDocumentation",
              "src": "11824:247:114",
              "text": "@notice deploys ConstantFlowAgreementV1 contract\n @param _host address of the Superfluid contract\n @param _cfaHook address of the IConstantFlowAgreementHook contract\n @return newly deployed ConstantFlowAgreementV1 contract"
            },
            "functionSelector": "7b38e541",
            "id": 48412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployConstantFlowAgreementV1",
            "nameLocation": "12085:29:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48395,
                  "mutability": "mutable",
                  "name": "_host",
                  "nameLocation": "12136:5:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48412,
                  "src": "12124:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 48394,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48393,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "12124:11:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25106,
                      "src": "12124:11:114"
                    },
                    "referencedDeclaration": 25106,
                    "src": "12124:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48398,
                  "mutability": "mutable",
                  "name": "_cfaHook",
                  "nameLocation": "12178:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48412,
                  "src": "12151:35:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantFlowAgreementHook_$22379",
                    "typeString": "contract IConstantFlowAgreementHook"
                  },
                  "typeName": {
                    "id": 48397,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48396,
                      "name": "IConstantFlowAgreementHook",
                      "nameLocations": [
                        "12151:26:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 22379,
                      "src": "12151:26:114"
                    },
                    "referencedDeclaration": 22379,
                    "src": "12151:26:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantFlowAgreementHook_$22379",
                      "typeString": "contract IConstantFlowAgreementHook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12114:78:114"
            },
            "returnParameters": {
              "id": 48403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48412,
                  "src": "12211:23:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                    "typeString": "contract ConstantFlowAgreementV1"
                  },
                  "typeName": {
                    "id": 48401,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48400,
                      "name": "ConstantFlowAgreementV1",
                      "nameLocations": [
                        "12211:23:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11160,
                      "src": "12211:23:114"
                    },
                    "referencedDeclaration": 11160,
                    "src": "12211:23:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConstantFlowAgreementV1_$11160",
                      "typeString": "contract ConstantFlowAgreementV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12210:25:114"
            },
            "scope": 48413,
            "src": "12076:228:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 48490,
        "src": "11779:527:114",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SuperTokenDeployerLibrary",
        "contractDependencies": [
          40945
        ],
        "contractKind": "library",
        "documentation": {
          "id": 48414,
          "nodeType": "StructuredDocumentation",
          "src": "12308:144:114",
          "text": "@title SuperToken deployer library\n @author Superfluid\n @notice This is an external library used to deploy SuperToken logic contracts"
        },
        "fullyImplemented": true,
        "id": 48442,
        "linearizedBaseContracts": [
          48442
        ],
        "name": "SuperTokenDeployerLibrary",
        "nameLocation": "12460:25:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 48440,
              "nodeType": "Block",
              "src": "12780:134:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48434,
                            "name": "host",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48418,
                            "src": "12849:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                              "typeString": "contract ISuperfluid"
                            }
                          },
                          {
                            "id": 48435,
                            "name": "constantOutflowNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48421,
                            "src": "12855:18:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                              "typeString": "contract IConstantOutflowNFT"
                            }
                          },
                          {
                            "id": 48436,
                            "name": "constantInflowNFT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48424,
                            "src": "12875:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                              "typeString": "contract IConstantInflowNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                              "typeString": "contract ISuperfluid"
                            },
                            {
                              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                              "typeString": "contract IConstantOutflowNFT"
                            },
                            {
                              "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                              "typeString": "contract IConstantInflowNFT"
                            }
                          ],
                          "id": 48433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "12834:14:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_IConstantOutflowNFT_$23757_$_t_contract$_IConstantInflowNFT_$23703_$returns$_t_contract$_SuperToken_$40945_$",
                            "typeString": "function (contract ISuperfluid,contract IConstantOutflowNFT,contract IConstantInflowNFT) returns (contract SuperToken)"
                          },
                          "typeName": {
                            "id": 48432,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 48431,
                              "name": "SuperToken",
                              "nameLocations": [
                                "12838:10:114"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 40945,
                              "src": "12838:10:114"
                            },
                            "referencedDeclaration": 40945,
                            "src": "12838:10:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperToken_$40945",
                              "typeString": "contract SuperToken"
                            }
                          }
                        },
                        "id": 48437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12834:59:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperToken_$40945",
                          "typeString": "contract SuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_SuperToken_$40945",
                          "typeString": "contract SuperToken"
                        }
                      ],
                      "id": 48430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "12809:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 48429,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12809:7:114",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12809:98:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 48428,
                  "id": 48439,
                  "nodeType": "Return",
                  "src": "12790:117:114"
                }
              ]
            },
            "documentation": {
              "id": 48415,
              "nodeType": "StructuredDocumentation",
              "src": "12492:99:114",
              "text": "@notice Deploy a SuperToken logic contract\n @param host the address of the host contract"
            },
            "functionSelector": "703bbbc8",
            "id": 48441,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploySuperTokenLogic",
            "nameLocation": "12605:21:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48418,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "12648:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48441,
                  "src": "12636:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 48417,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48416,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "12636:11:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25106,
                      "src": "12636:11:114"
                    },
                    "referencedDeclaration": 25106,
                    "src": "12636:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48421,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "12682:18:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48441,
                  "src": "12662:38:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 48420,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48419,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "12662:19:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23757,
                      "src": "12662:19:114"
                    },
                    "referencedDeclaration": 23757,
                    "src": "12662:19:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48424,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "12729:17:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48441,
                  "src": "12710:36:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 48423,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48422,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "12710:18:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23703,
                      "src": "12710:18:114"
                    },
                    "referencedDeclaration": 23703,
                    "src": "12710:18:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12626:126:114"
            },
            "returnParameters": {
              "id": 48428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48427,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48441,
                  "src": "12771:7:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12771:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12770:9:114"
            },
            "scope": 48442,
            "src": "12596:318:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 48490,
        "src": "12452:464:114",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SuperfluidPeripheryDeployerLibrary",
        "contractDependencies": [
          41689,
          49546
        ],
        "contractKind": "library",
        "documentation": {
          "id": 48443,
          "nodeType": "StructuredDocumentation",
          "src": "12918:289:114",
          "text": "@title SuperfluidPeripheryDeployerLibrary\n @author Superfluid\n @notice An external library that deploys Superfluid periphery contracts (Super Token Factory and Test Resolver)\n @dev This library is used for testing purposes only, not deployments to test OR production networks"
        },
        "fullyImplemented": true,
        "id": 48489,
        "linearizedBaseContracts": [
          48489
        ],
        "name": "SuperfluidPeripheryDeployerLibrary",
        "nameLocation": "13215:34:114",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 48471,
              "nodeType": "Block",
              "src": "13729:199:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48465,
                        "name": "_host",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48447,
                        "src": "13797:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                          "typeString": "contract ISuperfluid"
                        }
                      },
                      {
                        "id": 48466,
                        "name": "_superTokenLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48450,
                        "src": "13820:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      {
                        "id": 48467,
                        "name": "constantOutflowNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48453,
                        "src": "13854:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      },
                      {
                        "id": 48468,
                        "name": "constantInflowNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48456,
                        "src": "13890:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                          "typeString": "contract ISuperfluid"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$24454",
                          "typeString": "contract ISuperToken"
                        },
                        {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                          "typeString": "contract IConstantOutflowNFT"
                        },
                        {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      ],
                      "id": 48464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13758:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ISuperfluid_$25106_$_t_contract$_ISuperToken_$24454_$_t_contract$_IConstantOutflowNFT_$23757_$_t_contract$_IConstantInflowNFT_$23703_$returns$_t_contract$_SuperTokenFactory_$41689_$",
                        "typeString": "function (contract ISuperfluid,contract ISuperToken,contract IConstantOutflowNFT,contract IConstantInflowNFT) returns (contract SuperTokenFactory)"
                      },
                      "typeName": {
                        "id": 48463,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48462,
                          "name": "SuperTokenFactory",
                          "nameLocations": [
                            "13762:17:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41689,
                          "src": "13762:17:114"
                        },
                        "referencedDeclaration": 41689,
                        "src": "13762:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                          "typeString": "contract SuperTokenFactory"
                        }
                      }
                    },
                    "id": 48469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13758:163:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                      "typeString": "contract SuperTokenFactory"
                    }
                  },
                  "functionReturnParameters": 48461,
                  "id": 48470,
                  "nodeType": "Return",
                  "src": "13739:182:114"
                }
              ]
            },
            "documentation": {
              "id": 48444,
              "nodeType": "StructuredDocumentation",
              "src": "13256:233:114",
              "text": "@dev deploys Super Token Factory contract\n @param _host address of the Superfluid contract\n @param _superTokenLogic address of the Super Token logic contract\n @return newly deployed SuperTokenFactory contract"
            },
            "functionSelector": "0243059d",
            "id": 48472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deploySuperTokenFactory",
            "nameLocation": "13503:23:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48447,
                  "mutability": "mutable",
                  "name": "_host",
                  "nameLocation": "13548:5:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48472,
                  "src": "13536:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 48446,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48445,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "13536:11:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25106,
                      "src": "13536:11:114"
                    },
                    "referencedDeclaration": 25106,
                    "src": "13536:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48450,
                  "mutability": "mutable",
                  "name": "_superTokenLogic",
                  "nameLocation": "13575:16:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48472,
                  "src": "13563:28:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperToken_$24454",
                    "typeString": "contract ISuperToken"
                  },
                  "typeName": {
                    "id": 48449,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48448,
                      "name": "ISuperToken",
                      "nameLocations": [
                        "13563:11:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24454,
                      "src": "13563:11:114"
                    },
                    "referencedDeclaration": 24454,
                    "src": "13563:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$24454",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48453,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "13621:18:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48472,
                  "src": "13601:38:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 48452,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48451,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "13601:19:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23757,
                      "src": "13601:19:114"
                    },
                    "referencedDeclaration": 23757,
                    "src": "13601:19:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$23757",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48456,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "13668:17:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48472,
                  "src": "13649:36:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 48455,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48454,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "13649:18:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23703,
                      "src": "13649:18:114"
                    },
                    "referencedDeclaration": 23703,
                    "src": "13649:18:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$23703",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13526:165:114"
            },
            "returnParameters": {
              "id": 48461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48472,
                  "src": "13710:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                    "typeString": "contract SuperTokenFactory"
                  },
                  "typeName": {
                    "id": 48459,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48458,
                      "name": "SuperTokenFactory",
                      "nameLocations": [
                        "13710:17:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41689,
                      "src": "13710:17:114"
                    },
                    "referencedDeclaration": 41689,
                    "src": "13710:17:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperTokenFactory_$41689",
                      "typeString": "contract SuperTokenFactory"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13709:19:114"
            },
            "scope": 48489,
            "src": "13494:434:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 48487,
              "nodeType": "Block",
              "src": "14234:58:114",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48484,
                        "name": "_additionalAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48475,
                        "src": "14268:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "14251:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_TestResolver_$49546_$",
                        "typeString": "function (address) returns (contract TestResolver)"
                      },
                      "typeName": {
                        "id": 48482,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48481,
                          "name": "TestResolver",
                          "nameLocations": [
                            "14255:12:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 49546,
                          "src": "14255:12:114"
                        },
                        "referencedDeclaration": 49546,
                        "src": "14255:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestResolver_$49546",
                          "typeString": "contract TestResolver"
                        }
                      }
                    },
                    "id": 48485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14251:34:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestResolver_$49546",
                      "typeString": "contract TestResolver"
                    }
                  },
                  "functionReturnParameters": 48480,
                  "id": 48486,
                  "nodeType": "Return",
                  "src": "14244:41:114"
                }
              ]
            },
            "documentation": {
              "id": 48473,
              "nodeType": "StructuredDocumentation",
              "src": "13934:195:114",
              "text": "@dev deploys Test Resolver contract\n @param _additionalAdmin address of the additional administrator of the Test Resolver contract\n @return newly deployed Test Resolver contract"
            },
            "functionSelector": "2f0f279d",
            "id": 48488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployTestResolver",
            "nameLocation": "14143:18:114",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48475,
                  "mutability": "mutable",
                  "name": "_additionalAdmin",
                  "nameLocation": "14179:16:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48488,
                  "src": "14171:24:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14171:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14161:40:114"
            },
            "returnParameters": {
              "id": 48480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48488,
                  "src": "14220:12:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TestResolver_$49546",
                    "typeString": "contract TestResolver"
                  },
                  "typeName": {
                    "id": 48478,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48477,
                      "name": "TestResolver",
                      "nameLocations": [
                        "14220:12:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49546,
                      "src": "14220:12:114"
                    },
                    "referencedDeclaration": 49546,
                    "src": "14220:12:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestResolver_$49546",
                      "typeString": "contract TestResolver"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14219:14:114"
            },
            "scope": 48489,
            "src": "14134:158:114",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 48490,
        "src": "13207:1087:114",
        "usedErrors": []
      }
    ],
    "src": "35:14260:114"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-26T14:22:07.651Z",
  "devdoc": {
    "author": "Superfluid",
    "details": "This library is used for testing purposes only, not deployments to test OR production networks",
    "kind": "dev",
    "methods": {
      "deploySuperTokenFactory(ISuperfluid,ISuperToken,IConstantOutflowNFT,IConstantInflowNFT)": {
        "details": "deploys Super Token Factory contract",
        "params": {
          "_host": "address of the Superfluid contract",
          "_superTokenLogic": "address of the Super Token logic contract"
        },
        "returns": {
          "_0": "newly deployed SuperTokenFactory contract"
        }
      },
      "deployTestResolver(address)": {
        "details": "deploys Test Resolver contract",
        "params": {
          "_additionalAdmin": "address of the additional administrator of the Test Resolver contract"
        },
        "returns": {
          "_0": "newly deployed Test Resolver contract"
        }
      }
    },
    "title": "SuperfluidPeripheryDeployerLibrary",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "An external library that deploys Superfluid periphery contracts (Super Token Factory and Test Resolver)",
    "version": 1
  }
}