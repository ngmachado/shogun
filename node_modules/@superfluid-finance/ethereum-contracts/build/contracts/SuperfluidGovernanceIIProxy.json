{
  "contractName": "SuperfluidGovernanceIIProxy",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialAddress",
          "type": "address"
        }
      ],
      "name": "initializeProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Superfluid IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!\",\"kind\":\"dev\",\"methods\":{\"initializeProxy(address)\":{\"details\":\"Proxy initialization function.      This should only be called once and it is permission-less.\",\"params\":{\"initialAddress\":\"Initial logic contract code address to be used.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A proxy for governance which is both ownable and upgradable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/gov/SuperfluidGovernanceII.sol\":\"SuperfluidGovernanceIIProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x385a7061f1436b079d44c140dee9387d5313e94874ff9ee877dc0085c981ac3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3fe22bb0d9527356e11f267f9187134de4d4ed1ff77468b4d73e3238697b96\",\"dweb:/ipfs/Qmc8caJctgxbzXEpxRogQMR2bnBk5U67hA7kKbUEG2PUXV\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/gov/SuperfluidGovernanceBase.sol\":{\"keccak256\":\"0x719d412b68d42459c47cbcea90c4e4c35118831eb0a6e3cb30a90bc84423ecb4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://0b3e9c63a4d4eebe7238763577dc33f464ef3dcd81f393ed4709634d3cea0709\",\"dweb:/ipfs/QmXEfStruP5vFfZPkrDgU9fT2VgurCdU6a2fvyHDMZ8RDh\"]},\"project:/contracts/gov/SuperfluidGovernanceII.sol\":{\"keccak256\":\"0xab3303299ab44d8acb7928d5030814039f7a414d807a799c82c7b8024fbe1f9f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://001806646a7857c68852aaf0cc27462541cbbb5bfdac7ed0f9aba9b9b112d334\",\"dweb:/ipfs/QmNUkhWBqopUQiVs9HtAwef3QkMYPEgm2vnZqwjyQhmkfW\"]},\"project:/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0x8c817a6d85868039485ecdf1c7163f2e06be939cfc3923ba4ca6628f614282a1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://d3e816400006db8e39faf5287f76da1785060f7a21c68103453bb37f18ba6db0\",\"dweb:/ipfs/Qmbnd8TktXALrsngVNAHR546YJgnJ47tffkPug1j4jitDu\"]},\"project:/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb989f0fe54561ecb32f66ac55427d98866c77ee4b6a1da52aca2e0953a7f7f06\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://049ca939f07e24558748ebacc6f17c3e72161c16516e77bf9d501c338b3dd7b4\",\"dweb:/ipfs/QmVVbywb88aaiKLzs75zz5tbkPptrm2ihki8jGrn232jW2\"]},\"project:/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x5df423f453923ff6f7ee716e7c1c64d2e19743ad77455b0bba23fd28f2a9d587\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://191e99e332eee5c9b4a7ee19648e44554d9fe34c6c93be9fc2d2cbf9fbc1997a\",\"dweb:/ipfs/QmcxN6M6WAhmso9Yevag419p6tDNjJH3DJqbWdBurc4o8J\"]},\"project:/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0x1c62c63f39c7c9ba03ddde542690ccfea343b5b3b442ed4cf2830b43af6f9cbe\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e3ef914d4089c070d1f48b8d292a360d05373e5454ab45d6bef3d8b5170c3885\",\"dweb:/ipfs/QmZcXa9CfuaCxDfp8ncip6oAY849HFzDJ8rnMN8roSLvnk\"]},\"project:/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0x3a93bb86598d8840dc333efce41c0fcc8b839df6597c3be49dcb4e3d4fb9f074\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://469e7af1687de706da737007596663e20ec634d7ac6daa032be8c263e57eb518\",\"dweb:/ipfs/QmSQtjPankaurKEbKrf2M1bLe3TaPFvdHxUdmaRYgZ4TG4\"]},\"project:/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0x5555e072e755dea4ffcd4c0c74d8ca8e7f782d462e049c8eb09171b0edc38394\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://25b7c8e97377da22641038a58b1f05a719634241887839874191012a203dbfcf\",\"dweb:/ipfs/QmbvMjTbm4gpPaxSBGetBYSJs2SQesAzjEp66F9w8JoZhG\"]},\"project:/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0x9b4fab6dcac1337f78e04d67d8c2b48b1de8bd4bbf14b475840f9dbda7b8f21e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc2f3629ad0cb46bd4f595880591ad6c9d75a82d920cb9355e462fbf8022c820\",\"dweb:/ipfs/QmXMovxK4qpWT4yffXxUVjkMNwxEfS6mtn39mLSmjaxEdW\"]},\"project:/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x0182f29b230b034686dc505935ca0a1635fc537274bb592393a6e259010be08b\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6c728b787a7575bbfab0e6c24b18ccd29e457f5797611027af3f8ca664e94dcc\",\"dweb:/ipfs/QmXxAWjWjLdEdZQVAJyEYcBtiZBdNK7c5CfDC5UjaN3yZQ\"]},\"project:/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xc179b68b0641e7fa8873d77a4f3bb1116533e5da1120683fe5ee4bb6419d38d2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b888e81e39cc519e56ac10553756c059e18cbea45debb7113c6a1c86008a96c6\",\"dweb:/ipfs/QmWeWRsF52zk122qmxjpVePSRvdXjfDZzDY1ucdFtDMEjh\"]},\"project:/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xac57bbc7e9432bf926d4f9913b71301b18b4519de12e22892ebbc646d43b88c5\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4a18f0c241ee2236bc5ec588718601242cec0b20fb9f3d432272264f2330dd36\",\"dweb:/ipfs/QmSjhobAGMzCqpyf1oWXjGF6bH8RwWVcKYT9oRDLAWUEi3\"]},\"project:/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0xab9dab941f99d0f0ef6125fb6eafde03378d7c3e94e613dd12fb7fbf594c3373\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://928c6ef915dee69058d4cfcb9f2344d4fc78d9763b47b17e5c03fbff64ba3c64\",\"dweb:/ipfs/Qmdk733ZHceatz3qbuodLCCS9TUspJJtXLoX6vWwMvrPDE\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0x90a9259d0f0bb6b1bb6d48f051277eb75df96a9fbe684a203a3a468ad19318e2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://9c8162a2d07ffe768920fef55292684149173afefbfba76b8fca007e55092229\",\"dweb:/ipfs/QmducLNwrzeUXEpBjUTSMu7sfmQEwVhcYXApe4brc1zQ6V\"]},\"project:/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x9cad3866982902ea88df0874a563d2e4aeba5a5bcc6289c30cccf9b4099d2fb6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e8fd960b259331f204c7cb7dcd32b09d68f4294e3b872fad00ad467609c3ef72\",\"dweb:/ipfs/QmeZFEvsDunXQGPbXFfN5AvfKM5am1FY8Xv6e3c4tNKvgY\"]},\"project:/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x55be78ffb441c782f612b153d7d9049e3f0dbfd412c1f7df29c896b972b2985f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a223c68e38a6c9b1e363e525911bc7eda44ea517865ae53bd0d34ff858cc02ae\",\"dweb:/ipfs/QmVruGehibG6Emr2A6JHwUnhd4NzsGkE24cbGqnDpEvrKh\"]},\"project:/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x7456cd394cc905aae7cdbd4601ce1c296c768c13c28e66efbb913cc070bad3e4\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a6589b428b724721ba5b4dd196c8f366a6e694ef313add093f29af64496c042\",\"dweb:/ipfs/QmSMgV6y8L6pyyzDz6kKmafVwujNWcjTqutpCBxe4uNRqg\"]},\"project:/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"project:/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x556040f5f2bfda069dd867d52b67b4b6a8e3d2955beac16d4156d91559bbdeac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://13d190401b4f36f3c0977e0eadb9c774173bcbc2552d72de5bd6e7803d67c996\",\"dweb:/ipfs/QmfBTdKGzmbbjRxca5XLwpE2FX3S8onGLNHNpMpqWqjY4m\"]},\"project:/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103de8061007e6000396000f3fe6080604052600436106100435760003560e01c80634a0687ef1461005a578063715018a61461007a5780638da5cb5b1461008f578063f2fde38b146100bb57610052565b36610052576100506100db565b005b6100506100db565b34801561006657600080fd5b50610050610075366004610378565b6100ed565b34801561008657600080fd5b506100506101f3565b34801561009b57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100c757600080fd5b506100506100d6366004610378565b610205565b6100eb6100e661027b565b6102aa565b565b6001600160a01b0381166101485760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006101727f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101c85760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a65640000604482015260640161013f565b6101f0817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b6101fb6102ce565b6100eb6000610328565b61020d6102ce565b6001600160a01b0381166102725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013f565b6101f081610328565b60006102a57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156102c9573d6000f35b3d6000fd5b6000546001600160a01b031633146100eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038a57600080fd5b81356001600160a01b03811681146103a157600080fd5b939250505056fea2646970667358221220aebfc08cd12a02baeb1b1d6b7e2b9d2d064e870ef5d01ef5f6f504651686ccfd64736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80634a0687ef1461005a578063715018a61461007a5780638da5cb5b1461008f578063f2fde38b146100bb57610052565b36610052576100506100db565b005b6100506100db565b34801561006657600080fd5b50610050610075366004610378565b6100ed565b34801561008657600080fd5b506100506101f3565b34801561009b57600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b3480156100c757600080fd5b506100506100d6366004610378565b610205565b6100eb6100e661027b565b6102aa565b565b6001600160a01b0381166101485760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006101727f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101c85760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a65640000604482015260640161013f565b6101f0817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b6101fb6102ce565b6100eb6000610328565b61020d6102ce565b6001600160a01b0381166102725760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161013f565b6101f081610328565b60006102a57f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156102c9573d6000f35b3d6000fd5b6000546001600160a01b031633146100eb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161013f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561038a57600080fd5b81356001600160a01b03811681146103a157600080fd5b939250505056fea2646970667358221220aebfc08cd12a02baeb1b1d6b7e2b9d2d064e870ef5d01ef5f6f504651686ccfd64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1989:120",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:120",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:120",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:120"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:120"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:120"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:120"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:120"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:120"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:120",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:120",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:120",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:120",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:120"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:120"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:120"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:120"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:120"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:120",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:120",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:120"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:120"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:120"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:120"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:120"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:120"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:120",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:120"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:120",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:120",
                "type": ""
              }
            ],
            "src": "14:286:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "406:102:120",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "416:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "428:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "439:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "424:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "424:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "416:4:120"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "458:9:120"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "473:6:120"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "489:3:120",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "494:1:120",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:3:120"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "485:11:120"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "498:1:120",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "481:3:120"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "481:19:120"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "469:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "469:32:120"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "451:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:51:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:51:120"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "375:9:120",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "386:6:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "397:4:120",
                "type": ""
              }
            ],
            "src": "305:203:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "687:173:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "704:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "715:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "697:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "697:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "697:21:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "754:2:120",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "727:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "727:30:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "727:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "777:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "788:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:18:120"
                      },
                      {
                        "hexValue": "5555505350726f78793a207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "793:25:120",
                        "type": "",
                        "value": "UUPSProxy: zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "766:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "766:53:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "766:53:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "828:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "840:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "851:2:120",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "836:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "828:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddef727975921b7952b7e20fd4290233907fcf50863b08b5223d979ede27321e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "664:9:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "678:4:120",
                "type": ""
              }
            ],
            "src": "513:347:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1039:180:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1056:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1067:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1049:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1049:21:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1090:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1101:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1086:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1086:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1106:2:120",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:30:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1079:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1129:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1140:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:18:120"
                      },
                      {
                        "hexValue": "5555505350726f78793a20616c726561647920696e697469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1145:32:120",
                        "type": "",
                        "value": "UUPSProxy: already initialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1118:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1118:60:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1118:60:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1187:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1199:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:120",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1195:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1195:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1187:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b83493ae559d613bdaa11f876d4e817b661ed75187e4a486b85abafea5a50e6c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1016:9:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1030:4:120",
                "type": ""
              }
            ],
            "src": "865:354:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1398:228:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1415:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1426:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1408:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1408:21:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1449:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1460:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1445:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1445:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:2:120",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1438:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1438:30:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1438:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1488:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1499:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:18:120"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1504:34:120",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1477:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1477:62:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1477:62:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1559:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1570:2:120",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1555:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1555:18:120"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1575:8:120",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1548:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1548:36:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1548:36:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1593:27:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1616:3:120",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1601:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1601:19:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1593:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1375:9:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1389:4:120",
                "type": ""
              }
            ],
            "src": "1224:402:120"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1805:182:120",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1822:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1815:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:21:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1815:21:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1856:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1867:2:120",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:18:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:2:120",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1845:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:30:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1845:30:120"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:120"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:120",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:120"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:120"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1911:34:120",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:62:120"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1884:62:120"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1955:26:120",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1967:9:120"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1978:2:120",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1963:3:120"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1963:18:120"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1955:4:120"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1782:9:120",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1796:4:120",
                "type": ""
              }
            ],
            "src": "1631:356:120"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ddef727975921b7952b7e20fd4290233907fcf50863b08b5223d979ede27321e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UUPSProxy: zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b83493ae559d613bdaa11f876d4e817b661ed75187e4a486b85abafea5a50e6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"UUPSProxy: already initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 120,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "654:62:40:-:0;;;;;;;;;;;;-1:-1:-1;936:32:4;719:10:19;936:18:4;:32::i;:::-;654:62:40;;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;654:62:40:-;;;;;;;",
  "deployedSourceMap": "654:62:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2898:11:6;:9;:11::i;:::-;654:62:40;;2675:11:6;:9;:11::i;897:285:107:-;;;;;;;;;;-1:-1:-1;897:285:107;;;;;:::i;:::-;;:::i;1831:101:4:-;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:4;1273:6;1201:85;;;-1:-1:-1;;;;;1273:6:4;;;451:51:120;;1201:85:4;;;;;439:2:120;1201:85:4;;;2081:198;;;;;;;;;;-1:-1:-1;2081:198:4;;;;;:::i;:::-;;:::i;2322:110:6:-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;897:285:107:-;-1:-1:-1;;;;;973:28:107;;965:64;;;;-1:-1:-1;;;965:64:107;;715:2:120;965:64:107;;;697:21:120;754:2;734:18;;;727:30;793:25;773:18;;;766:53;836:18;;965:64:107;;;;;;;;;1085:1;1047:26;751:20:108;745:27;;618:170;1047:26:107;-1:-1:-1;;;;;1047:40:107;;1039:83;;;;-1:-1:-1;;;1039:83:107;;1067:2:120;1039:83:107;;;1049:21:120;1106:2;1086:18;;;1079:30;1145:32;1125:18;;;1118:60;1195:18;;1039:83:107;865:354:120;1039:83:107;1132:43;1160:14;988:20:108;964:87;839:228;1132:43:107;897:285;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;2081:198::-:0;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;1426:2:120;2161:73:4::1;::::0;::::1;1408:21:120::0;1465:2;1445:18;;;1438:30;1504:34;1484:18;;;1477:62;-1:-1:-1;;;1555:18:120;;;1548:36;1601:19;;2161:73:4::1;1224:402:120::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;1238:130:107:-:0;1305:7;1335:26;751:20:108;745:27;;618:170;1335:26:107;1328:33;;1238:130;:::o;948:895:6:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;1359:130:4;1247:7;1273:6;-1:-1:-1;;;;;1273:6:4;719:10:19;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;1833:2:120;1414:68:4;;;1815:21:120;;;1852:18;;;1845:30;1911:34;1891:18;;;1884:62;1963:18;;1414:68:4;1631:356:120;2433:187:4;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:286:120:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:120;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:120:o",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity 0.8.19;\n\nimport { UUPSProxy } from \"../upgradability/UUPSProxy.sol\";\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { UUPSProxiable } from \"../upgradability/UUPSProxiable.sol\";\nimport { SuperfluidGovernanceBase } from \"./SuperfluidGovernanceBase.sol\";\nimport { ISuperfluid } from \"../interfaces/superfluid/ISuperfluid.sol\";\n\n/**\n * @title A proxy for governance which is both ownable and upgradable\n * @author Superfluid\n * IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!\n */\n// solhint-disable-next-line no-empty-blocks\ncontract SuperfluidGovernanceIIProxy is Ownable, UUPSProxy { }\n\ncontract SuperfluidGovernanceII is\n    Ownable,\n    UUPSProxiable,\n    SuperfluidGovernanceBase\n{\n    error SF_GOV_II_ONLY_OWNER();\n    function _requireAuthorised() private view {\n        if (owner() != _msgSender()) revert SF_GOV_II_ONLY_OWNER();\n    }\n\n    /**************************************************************************\n    * UUPSProxiable\n    **************************************************************************/\n\n    function proxiableUUID() public pure override returns (bytes32) {\n        return keccak256(\"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\");\n    }\n\n    function updateCode(address newAddress)\n        external override\n    {\n        _requireAuthorised();\n        _updateCodeAddress(newAddress);\n    }\n\n    /**************************************************************************\n    * SuperfluidGovernanceBase\n    **************************************************************************/\n\n    function _requireAuthorised(ISuperfluid /*host*/)\n        internal view override\n    {\n        _requireAuthorised();\n    }\n}\n",
  "sourcePath": "/home/runner/work/protocol-monorepo/protocol-monorepo/packages/ethereum-contracts/contracts/gov/SuperfluidGovernanceII.sol",
  "ast": {
    "absolutePath": "project:/contracts/gov/SuperfluidGovernanceII.sol",
    "exportedSymbols": {
      "ISuperfluid": [
        25106
      ],
      "Ownable": [
        651
      ],
      "SuperfluidGovernanceBase": [
        22248
      ],
      "SuperfluidGovernanceII": [
        22324
      ],
      "SuperfluidGovernanceIIProxy": [
        22266
      ],
      "UUPSProxiable": [
        45966
      ],
      "UUPSProxy": [
        46023
      ]
    },
    "id": 22325,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22250,
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:40"
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxy.sol",
        "file": "../upgradability/UUPSProxy.sol",
        "id": 22252,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22325,
        "sourceUnit": 46024,
        "src": "60:59:40",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22251,
              "name": "UUPSProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46023,
              "src": "69:9:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 22254,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22325,
        "sourceUnit": 652,
        "src": "120:69:40",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22253,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 651,
              "src": "129:7:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/upgradability/UUPSProxiable.sol",
        "file": "../upgradability/UUPSProxiable.sol",
        "id": 22256,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22325,
        "sourceUnit": 45967,
        "src": "190:67:40",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22255,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45966,
              "src": "199:13:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/gov/SuperfluidGovernanceBase.sol",
        "file": "./SuperfluidGovernanceBase.sol",
        "id": 22258,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22325,
        "sourceUnit": 22249,
        "src": "258:74:40",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22257,
              "name": "SuperfluidGovernanceBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22248,
              "src": "267:24:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "../interfaces/superfluid/ISuperfluid.sol",
        "id": 22260,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22325,
        "sourceUnit": 25107,
        "src": "333:71:40",
        "symbolAliases": [
          {
            "foreign": {
              "id": 22259,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25106,
              "src": "342:11:40",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22262,
              "name": "Ownable",
              "nameLocations": [
                "694:7:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "694:7:40"
            },
            "id": 22263,
            "nodeType": "InheritanceSpecifier",
            "src": "694:7:40"
          },
          {
            "baseName": {
              "id": 22264,
              "name": "UUPSProxy",
              "nameLocations": [
                "703:9:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46023,
              "src": "703:9:40"
            },
            "id": 22265,
            "nodeType": "InheritanceSpecifier",
            "src": "703:9:40"
          }
        ],
        "canonicalName": "SuperfluidGovernanceIIProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 22261,
          "nodeType": "StructuredDocumentation",
          "src": "406:202:40",
          "text": " @title A proxy for governance which is both ownable and upgradable\n @author Superfluid\n IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!"
        },
        "fullyImplemented": true,
        "id": 22266,
        "linearizedBaseContracts": [
          22266,
          46023,
          706,
          651,
          2580
        ],
        "name": "SuperfluidGovernanceIIProxy",
        "nameLocation": "663:27:40",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 22325,
        "src": "654:62:40",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22267,
              "name": "Ownable",
              "nameLocations": [
                "757:7:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 651,
              "src": "757:7:40"
            },
            "id": 22268,
            "nodeType": "InheritanceSpecifier",
            "src": "757:7:40"
          },
          {
            "baseName": {
              "id": 22269,
              "name": "UUPSProxiable",
              "nameLocations": [
                "770:13:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45966,
              "src": "770:13:40"
            },
            "id": 22270,
            "nodeType": "InheritanceSpecifier",
            "src": "770:13:40"
          },
          {
            "baseName": {
              "id": 22271,
              "name": "SuperfluidGovernanceBase",
              "nameLocations": [
                "789:24:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22248,
              "src": "789:24:40"
            },
            "id": 22272,
            "nodeType": "InheritanceSpecifier",
            "src": "789:24:40"
          }
        ],
        "canonicalName": "SuperfluidGovernanceII",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 22324,
        "linearizedBaseContracts": [
          22324,
          22248,
          25235,
          45966,
          875,
          651,
          2580
        ],
        "name": "SuperfluidGovernanceII",
        "nameLocation": "727:22:40",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "errorSelector": "8c809f9b",
            "id": 22274,
            "name": "SF_GOV_II_ONLY_OWNER",
            "nameLocation": "826:20:40",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 22273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "846:2:40"
            },
            "src": "820:29:40"
          },
          {
            "body": {
              "id": 22286,
              "nodeType": "Block",
              "src": "897:75:40",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22277,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 579,
                        "src": "911:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 22278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "911:7:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22279,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2570,
                        "src": "922:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 22280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "922:12:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "911:23:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22285,
                  "nodeType": "IfStatement",
                  "src": "907:58:40",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 22282,
                        "name": "SF_GOV_II_ONLY_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22274,
                        "src": "943:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 22283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "943:22:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 22284,
                    "nodeType": "RevertStatement",
                    "src": "936:29:40"
                  }
                }
              ]
            },
            "id": 22287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAuthorised",
            "nameLocation": "863:18:40",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:40"
            },
            "returnParameters": {
              "id": 22276,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:0:40"
            },
            "scope": 22324,
            "src": "854:118:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              45906
            ],
            "body": {
              "id": 22297,
              "nodeType": "Block",
              "src": "1223:107:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e5375706572666c756964476f7665726e616e636549492e696d706c656d656e746174696f6e",
                        "id": 22294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1250:72:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42262e3b6ca1f8f82e158e1ac4ddf4e6273aa6499266ae17bcaceb2383054239",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_42262e3b6ca1f8f82e158e1ac4ddf4e6273aa6499266ae17bcaceb2383054239",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.SuperfluidGovernanceII.implementation\""
                        }
                      ],
                      "id": 22293,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1240:9:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 22295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1240:83:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 22292,
                  "id": 22296,
                  "nodeType": "Return",
                  "src": "1233:90:40"
                }
              ]
            },
            "functionSelector": "52d1902d",
            "id": 22298,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "1168:13:40",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22289,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1196:8:40"
            },
            "parameters": {
              "id": 22288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:2:40"
            },
            "returnParameters": {
              "id": 22292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22291,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22298,
                  "src": "1214:7:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22290,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1214:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1213:9:40"
            },
            "scope": 22324,
            "src": "1159:171:40",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              45894
            ],
            "body": {
              "id": 22311,
              "nodeType": "Block",
              "src": "1406:77:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22304,
                      "name": "_requireAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22287,
                        22323
                      ],
                      "referencedDeclaration": 22287,
                      "src": "1416:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 22305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:20:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22306,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:20:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22308,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22300,
                        "src": "1465:10:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22307,
                      "name": "_updateCodeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45959,
                      "src": "1446:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1446:30:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22310,
                  "nodeType": "ExpressionStatement",
                  "src": "1446:30:40"
                }
              ]
            },
            "functionSelector": "46951954",
            "id": 22312,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateCode",
            "nameLocation": "1345:10:40",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22302,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1393:8:40"
            },
            "parameters": {
              "id": 22301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22300,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "1364:10:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 22312,
                  "src": "1356:18:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22299,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1356:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1355:20:40"
            },
            "returnParameters": {
              "id": 22303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:40"
            },
            "scope": 22324,
            "src": "1336:147:40",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              22247
            ],
            "body": {
              "id": 22322,
              "nodeType": "Block",
              "src": "1766:37:40",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22319,
                      "name": "_requireAuthorised",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22287,
                        22323
                      ],
                      "referencedDeclaration": 22287,
                      "src": "1776:18:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 22320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:20:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22321,
                  "nodeType": "ExpressionStatement",
                  "src": "1776:20:40"
                }
              ]
            },
            "id": 22323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireAuthorised",
            "nameLocation": "1690:18:40",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22317,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1753:8:40"
            },
            "parameters": {
              "id": 22316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22323,
                  "src": "1709:11:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 22314,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22313,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "1709:11:40"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25106,
                      "src": "1709:11:40"
                    },
                    "referencedDeclaration": 25106,
                    "src": "1709:11:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$25106",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1708:22:40"
            },
            "returnParameters": {
              "id": 22318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:0:40"
            },
            "scope": 22324,
            "src": "1681:122:40",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 22325,
        "src": "718:1087:40",
        "usedErrors": [
          22274,
          25119,
          25121,
          25123
        ]
      }
    ],
    "src": "35:1771:40"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-04-26T14:22:06.973Z",
  "devdoc": {
    "author": "Superfluid IMPORTANT! Make sure the inheritance order remains in sync with the logic contract (Ownable first)!",
    "kind": "dev",
    "methods": {
      "initializeProxy(address)": {
        "details": "Proxy initialization function.      This should only be called once and it is permission-less.",
        "params": {
          "initialAddress": "Initial logic contract code address to be used."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "A proxy for governance which is both ownable and upgradable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}