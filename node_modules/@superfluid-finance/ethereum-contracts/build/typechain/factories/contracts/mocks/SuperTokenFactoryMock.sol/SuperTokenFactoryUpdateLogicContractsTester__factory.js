"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SuperTokenFactoryUpdateLogicContractsTester__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "contract ISuperfluid",
                name: "host",
                type: "address",
            },
            {
                internalType: "contract ISuperToken",
                name: "superTokenLogic",
                type: "address",
            },
            {
                internalType: "contract IConstantOutflowNFT",
                name: "constantOutflowNFT",
                type: "address",
            },
            {
                internalType: "contract IConstantInflowNFT",
                name: "constantInflowNFT",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "SUPER_TOKEN_FACTORY_ALREADY_EXISTS",
        type: "error",
    },
    {
        inputs: [],
        name: "SUPER_TOKEN_FACTORY_DOES_NOT_EXIST",
        type: "error",
    },
    {
        inputs: [],
        name: "SUPER_TOKEN_FACTORY_NON_UPGRADEABLE_IS_DEPRECATED",
        type: "error",
    },
    {
        inputs: [],
        name: "SUPER_TOKEN_FACTORY_ONLY_GOVERNANCE_OWNER",
        type: "error",
    },
    {
        inputs: [],
        name: "SUPER_TOKEN_FACTORY_ONLY_HOST",
        type: "error",
    },
    {
        inputs: [],
        name: "SUPER_TOKEN_FACTORY_UNINITIALIZED",
        type: "error",
    },
    {
        inputs: [],
        name: "SUPER_TOKEN_FACTORY_ZERO_ADDRESS",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "uuid",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "codeAddress",
                type: "address",
            },
        ],
        name: "CodeUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "contract ISuperToken",
                name: "token",
                type: "address",
            },
        ],
        name: "CustomSuperTokenCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "contract ISuperToken",
                name: "token",
                type: "address",
            },
        ],
        name: "SuperTokenCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "contract ISuperToken",
                name: "tokenLogic",
                type: "address",
            },
        ],
        name: "SuperTokenLogicCreated",
        type: "event",
    },
    {
        inputs: [],
        name: "CONSTANT_INFLOW_NFT_LOGIC",
        outputs: [
            {
                internalType: "contract IConstantInflowNFT",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "CONSTANT_OUTFLOW_NFT_LOGIC",
        outputs: [
            {
                internalType: "contract IConstantOutflowNFT",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "_SUPER_TOKEN_LOGIC",
        outputs: [
            {
                internalType: "contract ISuperToken",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "castrate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_underlyingToken",
                type: "address",
            },
        ],
        name: "computeCanonicalERC20WrapperAddress",
        outputs: [
            {
                internalType: "address",
                name: "superTokenAddress",
                type: "address",
            },
            {
                internalType: "bool",
                name: "isDeployed",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract ERC20WithTokenInfo",
                name: "_underlyingToken",
                type: "address",
            },
        ],
        name: "createCanonicalERC20Wrapper",
        outputs: [
            {
                internalType: "contract ISuperToken",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract ERC20WithTokenInfo",
                name: "underlyingToken",
                type: "address",
            },
            {
                internalType: "enum ISuperTokenFactory.Upgradability",
                name: "upgradability",
                type: "uint8",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol",
                type: "string",
            },
        ],
        name: "createERC20Wrapper",
        outputs: [
            {
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "underlyingToken",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "underlyingDecimals",
                type: "uint8",
            },
            {
                internalType: "enum ISuperTokenFactory.Upgradability",
                name: "upgradability",
                type: "uint8",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "symbol",
                type: "string",
            },
        ],
        name: "createERC20Wrapper",
        outputs: [
            {
                internalType: "contract ISuperToken",
                name: "superToken",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_underlyingTokenAddress",
                type: "address",
            },
        ],
        name: "getCanonicalERC20Wrapper",
        outputs: [
            {
                internalType: "address",
                name: "superTokenAddress",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getCodeAddress",
        outputs: [
            {
                internalType: "address",
                name: "codeAddress",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getHost",
        outputs: [
            {
                internalType: "address",
                name: "host",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getSuperTokenLogic",
        outputs: [
            {
                internalType: "contract ISuperToken",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "underlyingToken",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "superToken",
                        type: "address",
                    },
                ],
                internalType: "struct SuperTokenFactoryBase.InitializeData[]",
                name: "_data",
                type: "tuple[]",
            },
        ],
        name: "initializeCanonicalWrapperSuperTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "customSuperTokenProxy",
                type: "address",
            },
        ],
        name: "initializeCustomSuperToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "newVariable",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proxiableUUID",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newAddress",
                type: "address",
            },
        ],
        name: "updateCode",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6101006040523480156200001257600080fd5b50604051620021523803806200215283398101604081905262000035916200010d565b6001600160a01b0380851660a052831660808190526040805163132075a760e31b81529051869286928692869291639903ad3891600480830192600092919082900301818387803b1580156200008a57600080fd5b505af11580156200009f573d6000803e3d6000fd5b5050506001600160a01b0380841660c05282811660e052608051604051911691507fc13fb19d60857980e565bf5dae406b8802d3c1cec50c6156b30b12b87402978390600090a2505050505050505062000175565b6001600160a01b03811681146200010a57600080fd5b50565b600080600080608085870312156200012457600080fd5b84516200013181620000f4565b60208601519094506200014481620000f4565b60408601519093506200015781620000f4565b60608601519092506200016a81620000f4565b939692955090935050565b60805160a05160c05160e051611f4162000211600039600081816101fd015281816109a20152610b6a0152600081816101d6015281816108840152610a6b01526000818161014d0152818161074f0152610d15015260008181610232015281816102b30152818161043f01528181610798015281816108b6015281816109d401528181610ad301528181610fdc01526112910152611f416000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638d7a72f3116100a2578063a6d0c53411610071578063a6d0c53414610269578063bab74c891461027c578063cbf927b3146102ae578063d412d344146102d5578063eff0a89d146102e857600080fd5b80638d7a72f3146102275780639470a5b21461023057806397e011ed146102565780639903ad381461021f57600080fd5b806350d75d25116100e957806350d75d251461019957806352d1902d146101a15780635365d19f146101d15780635a7792df146101f85780638129fc1c1461021f57600080fd5b8063151188dc1461011b57806320bc44251461014b578063431f1481146101715780634695195414610184575b600080fd5b61012e610129366004611599565b610314565b6040516001600160a01b0390911681526020015b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000061012e565b61012e61017f36600461161a565b6106c7565b610197610192366004611599565b610744565b005b61012e610bd4565b7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6205b604051908152602001610142565b61012e7f000000000000000000000000000000000000000000000000000000000000000081565b61012e7f000000000000000000000000000000000000000000000000000000000000000081565b610197610c03565b6101c360025481565b7f000000000000000000000000000000000000000000000000000000000000000061012e565b6101976102643660046116ad565b610d11565b61012e610277366004611731565b610f26565b61028f61028a366004611599565b611177565b604080516001600160a01b039093168352901515602083015201610142565b61012e7f000000000000000000000000000000000000000000000000000000000000000081565b6101976102e3366004611599565b61127a565b61012e6102f6366004611599565b6001600160a01b039081166000908152600160205260409020541690565b600080805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b0316610366576040516306ce6e6d60e21b815260040160405180910390fd5b6001600160a01b0380831660009081526001602052604090205483911680156103a2576040516348eb3cb960e11b815260040160405180910390fd5b604080516001600160a01b0384166020820152600091016040516020818303038152906040528051906020012090506000816040516103e09061156a565b8190604051809103906000f5905080158015610400573d6000803e3d6000fd5b506001600160a01b038581166000908152600160205260409081902080546001600160a01b0319168484169081179091559051634a0687ef60e01b81527f00000000000000000000000000000000000000000000000000000000000000009092166004830152919250634a0687ef90602401600060405180830381600087803b15801561048c57600080fd5b505af11580156104a0573d6000803e3d6000fd5b5050505060008190506000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050d91906117d7565b90506000886001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801561054f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610577919081019061182e565b90506000896001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105b9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105e1919081019061182e565b9050836001600160a01b03166342fe09808b858560405160200161060591906118d0565b6040516020818303038152906040528560405160200161062591906118fe565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401610653949392919061194f565b600060405180830381600087803b15801561066d57600080fd5b505af1158015610681573d6000803e3d6000fd5b50506040516001600160a01b03871692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2509198975050505050505050565b600061073987886001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072f91906117d7565b8888888888610f26565b979650505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461078d5760405163478b8e8360e01b815260040160405180910390fd5b61079681611330565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610818919061198e565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610855573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610879919061198e565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161415806109cd57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610912573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610936919061198e565b6001600160a01b03166350d75d256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610997919061198e565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614155b15610bd1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ef43d2c66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a54919061198e565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610ab957600080fd5b505af1158015610acd573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634c5c0c856040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b53919061198e565b6040516311a5465560e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301529190911690634695195490602401600060405180830381600087803b158015610bb857600080fd5b505af1158015610bcc573d6000803e3d6000fd5b505050505b50565b6000610bfe7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b600054610100900460ff1615808015610c235750600054600160ff909116105b80610c3d5750303b158015610c3d575060005460ff166001145b610ca55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610cc8576000805461ff0019166101001790555b8015610bd1576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d95919061198e565b9050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df9919061198e565b6001600160a01b0316336001600160a01b031614610e2a57604051632bf2a63360e21b815260040160405180910390fd5b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031615610e7c576040516348eb3cb960e11b815260040160405180910390fd5b60005b82811015610f2057838382818110610e9957610e996119ab565b9050604002016020016020810190610eb19190611599565b60016000868685818110610ec757610ec76119ab565b610edd9260206040909202019081019150611599565b6001600160a01b039081168252602082019290925260400160002080546001600160a01b0319169290911691909117905580610f18816119c1565b915050610e7f565b50505050565b60006001600160a01b038816610f4f5760405163182e4f4160e11b815260040160405180910390fd5b6000866002811115610f6357610f636119e8565b03610f815760405163c4901a4360e01b815260040160405180910390fd5b6001866002811115610f9557610f956119e8565b0361104d576000604051610fa89061156a565b604051809103906000f080158015610fc4573d6000803e3d6000fd5b50604051634a0687ef60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291925090821690634a0687ef90602401600060405180830381600087803b15801561102c57600080fd5b505af1158015611040573d6000803e3d6000fd5b50505050809150506110d1565b600060405161105b90611577565b604051809103906000f080158015611077573d6000803e3d6000fd5b509050806001600160a01b0316638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156110b557600080fd5b505af11580156110c9573d6000803e3d6000fd5b509293505050505b6040516285fc1360e71b81526001600160a01b038216906342fe098090611106908b908b908a908a908a908a90600401611a27565b600060405180830381600087803b15801561112057600080fd5b505af1158015611134573d6000803e3d6000fd5b50506040516001600160a01b03841692507fb52c6d9d122e8c07769b96d7bb14e66db58ee03fdebaaa2f92547e9c7ef0e65f9150600090a2979650505050505050565b6001600160a01b03808216600090815260016020526040812054909182911680156111a85780925060019150611274565b6000604051806020016111ba9061156a565b601f1982820381018352601f9091011660408181526001600160a01b03881660208301529192506001600160f81b03199130910160405160208183030381529060405280519060200120838051906020012060405160200161125394939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b6040516020818303038152906040528051906020012060001c935060009250505b50915091565b604051634a0687ef60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152829190821690634a0687ef90602401600060405180830381600087803b1580156112e057600080fd5b505af11580156112f4573d6000803e3d6000fd5b50506040516001600160a01b03851692507f437790724a6e97b75d23117f28cdd4b1beeafc34f7a0911ef256e9334f4369a59150600090a25050565b600061135a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316036113b05760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401610c9c565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114129190611a75565b7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b6201461148c5760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401610c9c565b6001600160a01b03811630036114e45760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f70000000000000006044820152606401610c9c565b61150c817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7fb146a22bc9644a3313a7e28592f37d32718a2b618d3d136aa524b0d86b87b620604080519182526001600160a01b038416602083015201610d06565b61024a80611a8f83390190565b61023380611cd983390190565b6001600160a01b0381168114610bd157600080fd5b6000602082840312156115ab57600080fd5b81356115b681611584565b9392505050565b8035600381106115cc57600080fd5b919050565b60008083601f8401126115e357600080fd5b50813567ffffffffffffffff8111156115fb57600080fd5b60208301915083602082850101111561161357600080fd5b9250929050565b6000806000806000806080878903121561163357600080fd5b863561163e81611584565b955061164c602088016115bd565b9450604087013567ffffffffffffffff8082111561166957600080fd5b6116758a838b016115d1565b9096509450606089013591508082111561168e57600080fd5b5061169b89828a016115d1565b979a9699509497509295939492505050565b600080602083850312156116c057600080fd5b823567ffffffffffffffff808211156116d857600080fd5b818501915085601f8301126116ec57600080fd5b8135818111156116fb57600080fd5b8660208260061b850101111561171057600080fd5b60209290920196919550909350505050565b60ff81168114610bd157600080fd5b600080600080600080600060a0888a03121561174c57600080fd5b873561175781611584565b9650602088013561176781611722565b9550611775604089016115bd565b9450606088013567ffffffffffffffff8082111561179257600080fd5b61179e8b838c016115d1565b909650945060808a01359150808211156117b757600080fd5b506117c48a828b016115d1565b989b979a50959850939692959293505050565b6000602082840312156117e957600080fd5b81516115b681611722565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561182557818101518382015260200161180d565b50506000910152565b60006020828403121561184057600080fd5b815167ffffffffffffffff8082111561185857600080fd5b818401915084601f83011261186c57600080fd5b81518181111561187e5761187e6117f4565b604051601f8201601f19908116603f011681019083821181831017156118a6576118a66117f4565b816040528281528760208487010111156118bf57600080fd5b61073983602083016020880161180a565b65029bab832b9160d51b8152600082516118f181600685016020870161180a565b9190910160060192915050565b6000825161191081846020870161180a565b600f60fb1b920191825250600101919050565b6000815180845261193b81602086016020860161180a565b601f01601f19169290920160200192915050565b6001600160a01b038516815260ff8416602082015260806040820181905260009061197c90830185611923565b82810360608401526107398185611923565b6000602082840312156119a057600080fd5b81516115b681611584565b634e487b7160e01b600052603260045260246000fd5b6000600182016119e157634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff86166020820152608060408201819052600090611a5590830186886119fe565b8281036060840152611a688185876119fe565b9998505050505050505050565b600060208284031215611a8757600080fd5b505191905056fe608060405234801561001057600080fd5b5061022a806100206000396000f3fe6080604052600436106100225760003560e01c80634a0687ef1461003957610031565b366100315761002f610059565b005b61002f610059565b34801561004557600080fd5b5061002f6100543660046101c4565b61006b565b610069610064610171565b6101a0565b565b6001600160a01b0381166100c65760405162461bcd60e51b815260206004820152601760248201527f5555505350726f78793a207a65726f206164647265737300000000000000000060448201526064015b60405180910390fd5b60006100f07f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b0316146101465760405162461bcd60e51b815260206004820152601e60248201527f5555505350726f78793a20616c726561647920696e697469616c697a6564000060448201526064016100bd565b61016e817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b50565b600061019b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b3660008037600080366000845af43d6000803e8080156101bf573d6000f35b3d6000fd5b6000602082840312156101d657600080fd5b81356001600160a01b03811681146101ed57600080fd5b939250505056fea264697066735822122093a2bbcf49dd2895177212eeb11e9921080374fd8cd93d5be93a80935603195a64736f6c63430008130033608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea26469706673582212209d46ea9488662b2fd8ad0ec5a8792e8d87c5b1d5f38fcdd68f52e5dab85eeb7a64736f6c63430008130033a264697066735822122056a674cb85eca4f9c41c0a73dfae59d1703cacffb03470169b1256915eac867664736f6c63430008130033";
const isSuperArgs = (xs) => xs.length > 1;
class SuperTokenFactoryUpdateLogicContractsTester__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(host, superTokenLogic, constantOutflowNFT, constantInflowNFT, overrides) {
        return super.deploy(host, superTokenLogic, constantOutflowNFT, constantInflowNFT, overrides || {});
    }
    getDeployTransaction(host, superTokenLogic, constantOutflowNFT, constantInflowNFT, overrides) {
        return super.getDeployTransaction(host, superTokenLogic, constantOutflowNFT, constantInflowNFT, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SuperTokenFactoryUpdateLogicContractsTester__factory = SuperTokenFactoryUpdateLogicContractsTester__factory;
SuperTokenFactoryUpdateLogicContractsTester__factory.bytecode = _bytecode;
SuperTokenFactoryUpdateLogicContractsTester__factory.abi = _abi;
//# sourceMappingURL=SuperTokenFactoryUpdateLogicContractsTester__factory.js.map